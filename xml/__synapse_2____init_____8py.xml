<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="__synapse_2____init_____8py" kind="file" language="Python">
    <compoundname>__init__.py</compoundname>
    <innerclass refid="classbittensor_1_1__synapse_1_1synapse" prot="public">bittensor::_synapse::synapse</innerclass>
    <innernamespace refid="namespacebittensor">bittensor</innernamespace>
    <innernamespace refid="namespacebittensor_1_1__synapse">bittensor::_synapse</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#<sp/>The<sp/>MIT<sp/>License<sp/>(MIT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Copyright<sp/>©<sp/>2021<sp/>Yuma<sp/>Rao</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>documentation<sp/>files<sp/>(the<sp/>“Software”),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>Software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>“AS<sp/>IS”,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>multiprocessing.sharedctypes<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Value</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>yaml<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>serialize_all</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>bittensor</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>torch</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>typing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Union,<sp/>List,<sp/>Tuple,<sp/>Optional</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacebittensor_1_1__serializer" kindref="compound">bittensor._serializer</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>serializer</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.synapse_impl<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Synapse,<sp/>NullSynapse</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.text_causallm_impl<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>TextCausalLM</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.text_causallmnext_impl<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>TextCausalLMNext</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.text_lasthiddenstate_impl<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>TextLastHiddenState</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.text_seq2seq_impl<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>TextSeq2Seq</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classbittensor_1_1__synapse_1_1synapse" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1synapse" kindref="compound">synapse</ref>:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Factory<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">for<sp/>the<sp/><ref refid="classbittensor_1_1__synapse_1_1synapse" kindref="compound">synapse</ref><sp/>objects.<sp/>The<sp/>synapses<sp/>are<sp/>designed<sp/>to<sp/>work<sp/>the<sp/>bittensor<sp/>protocol<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>reponsible<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>serialization<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>deserialization<sp/>of<sp/>their<sp/>contents.<sp/>They<sp/>are<sp/>expected<sp/>to<sp/>be<sp/>included<sp/>by</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>the<sp/>forwarding<sp/>neuron<sp/>when<sp/>making<sp/>a<sp/>call<sp/>through<sp/>the<sp/>bittensor<sp/>api.</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>Examples:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>causallm_synapse<sp/>=<sp/>bittensor.synapse.TextCausalLM()</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>dendrite.text(endpoints<sp/>=<sp/>[..],<sp/>inputs<sp/>=<sp/>[..],<sp/>synapses=<sp/>[causallm_synapse]<sp/>)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>__synapses_types__<sp/>=<sp/>[&apos;TextLastHiddenState&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;TextCausalLM&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;TextSeq2Seq&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@staticmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1text__lasthiddenstate__impl_1_1_text_last_hidden_state" kindref="compound">TextLastHiddenState</ref><sp/>(</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_request_serializer_type:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Serializer.Type&apos;</highlight><highlight class="normal"><sp/>=<sp/>bittensor.proto.Serializer.MSGPACK,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_serializer_type:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Serializer.Type&apos;</highlight><highlight class="normal"><sp/>=<sp/>bittensor.proto.Serializer.MSGPACK,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_request_serializer_type:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Serializer.Type&apos;</highlight><highlight class="normal"><sp/>=<sp/>bittensor.proto.Serializer.MSGPACK,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_response_serializer_type:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Serializer.Type&apos;</highlight><highlight class="normal"><sp/>=<sp/>bittensor.proto.Serializer.MSGPACK,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>-&gt;<sp/>TextLastHiddenState:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Factory<sp/>function<sp/>which<sp/>returns<sp/>a<sp/>TextLastHiddenState<sp/>synapse<sp/>adapter<sp/>given<sp/>arguments.</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_request_serializer_type<sp/>(:obj:`bittensor.proto.Serializer.Type`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`optional`,<sp/>:default:<sp/>`bittensor.proto.Serializer.MSGPACK`):</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serializer<sp/>used<sp/>to<sp/>pack<sp/>torch<sp/>tensors<sp/>on<sp/>forward<sp/>request.</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_serializer_type<sp/>(:obj:`bittensor.proto.Serializer.Type`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`optional`,<sp/>:default:<sp/>`bittensor.proto.Serializer.MSGPACK`):</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serializer<sp/>used<sp/>to<sp/>pack<sp/>torch<sp/>tensors<sp/>on<sp/>forward<sp/>response.</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_request_serializer_type<sp/>(:obj:`bittensor.proto.Serializer.Type`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`optional`,<sp/>:default:<sp/>`bittensor.proto.Serializer.MSGPACK`):</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serializer<sp/>used<sp/>to<sp/>pack<sp/>torch<sp/>tensors<sp/>on<sp/>forward<sp/>request.</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_response_serializer_type<sp/>(:obj:`bittensor.proto.Serializer.Type`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`optional`,<sp/>:default:<sp/>`bittensor.proto.Serializer.MSGPACK`):</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serialzer<sp/>used<sp/>to<sp/>pack<sp/>torch<sp/>tensors<sp/>on<sp/>backward<sp/>response.</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextLastHiddenState<sp/>(:obj:`TextLastHiddenState`,<sp/>`required`):</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextLastHiddenState<sp/>instance<sp/>adapter<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TextLastHiddenState<sp/>(</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_request_serializer_type<sp/>=<sp/>forward_request_serializer_type,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_serializer_type<sp/>=<sp/>forward_response_serializer_type,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_request_serializer_type<sp/>=<sp/>backward_request_serializer_type,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_response_serializer_type<sp/>=<sp/>backward_response_serializer_type,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@staticmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1text__causallm__impl_1_1_text_causal_l_m" kindref="compound">TextCausalLM</ref><sp/>(<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topk:int<sp/>=<sp/>512,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_request_serializer_type:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Serializer.Type&apos;</highlight><highlight class="normal"><sp/>=<sp/>bittensor.proto.Serializer.MSGPACK,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_serializer_type:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Serializer.Type&apos;</highlight><highlight class="normal"><sp/>=<sp/>bittensor.proto.Serializer.MSGPACK,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_request_serializer_type:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Serializer.Type&apos;</highlight><highlight class="normal"><sp/>=<sp/>bittensor.proto.Serializer.MSGPACK,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_response_serializer_type:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Serializer.Type&apos;</highlight><highlight class="normal"><sp/>=<sp/>bittensor.proto.Serializer.MSGPACK,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>-&gt;<sp/>TextCausalLM:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Factory<sp/>function<sp/>which<sp/>returns<sp/>a<sp/>TextCausalLM<sp/>synapse<sp/>adapter<sp/>given<sp/>arguments.</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_request_serializer_type<sp/>(:obj:`bittensor.proto.Serializer.Type`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`optional`,<sp/>:default:<sp/>`bittensor.proto.Serializer.MSGPACK`):</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serializer<sp/>used<sp/>to<sp/>pack<sp/>torch<sp/>tensors<sp/>on<sp/>forward<sp/>request.</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_serializer_type<sp/>(:obj:`bittensor.proto.Serializer.Type`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`optional`,<sp/>:default:<sp/>`bittensor.proto.Serializer.MSGPACK`):</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serializer<sp/>used<sp/>to<sp/>pack<sp/>torch<sp/>tensors<sp/>on<sp/>forward<sp/>response.</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_request_serializer_type<sp/>(:obj:`bittensor.proto.Serializer.Type`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`optional`,<sp/>:default:<sp/>`bittensor.proto.Serializer.MSGPACK`):</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serializer<sp/>used<sp/>to<sp/>pack<sp/>torch<sp/>tensors<sp/>on<sp/>forward<sp/>request.</highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_response_serializer_type<sp/>(:obj:`bittensor.proto.Serializer.Type`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`optional`,<sp/>:default:<sp/>`bittensor.proto.Serializer.MSGPACK`):</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serialzer<sp/>used<sp/>to<sp/>pack<sp/>torch<sp/>tensors<sp/>on<sp/>backward<sp/>response.</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextCausalLM<sp/>(:obj:`TextCausalLM`,<sp/>`required`):</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextCausalLM<sp/>instance<sp/>adapter<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TextCausalLM<sp/>(<sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topk<sp/>=<sp/>topk,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_request_serializer_type<sp/>=<sp/>forward_request_serializer_type,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_serializer_type<sp/>=<sp/>forward_response_serializer_type,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_request_serializer_type<sp/>=<sp/>backward_request_serializer_type,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_response_serializer_type<sp/>=<sp/>backward_response_serializer_type,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@staticmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next" kindref="compound">TextCausalLMNext</ref>(</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topk:<sp/>int<sp/>=<sp/>4096,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_request_serializer_type:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Serializer.Type&apos;</highlight><highlight class="normal"><sp/>=<sp/>bittensor.proto.Serializer.MSGPACK,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_serializer_type:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Serializer.Type&apos;</highlight><highlight class="normal"><sp/>=<sp/>bittensor.proto.Serializer.MSGPACK,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_request_serializer_type:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Serializer.Type&apos;</highlight><highlight class="normal"><sp/>=<sp/>bittensor.proto.Serializer.MSGPACK,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_response_serializer_type:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Serializer.Type&apos;</highlight><highlight class="normal"><sp/>=<sp/>bittensor.proto.Serializer.MSGPACK,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>-&gt;<sp/>TextCausalLMNext:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Factory<sp/>function<sp/>which<sp/>returns<sp/>a<sp/>TextCausalLMNext<sp/>synapse<sp/>adapter<sp/>given<sp/>arguments.</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topk<sp/>(:obj:`int`):</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Specifies<sp/>the<sp/>number<sp/>of<sp/>topk<sp/>server<sp/>token<sp/>phrases<sp/>to<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_request_serializer_type<sp/>(:obj:`bittensor.proto.Serializer.Type`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`optional`,<sp/>:default:<sp/>`bittensor.proto.Serializer.MSGPACK`):</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serializer<sp/>used<sp/>to<sp/>pack<sp/>torch<sp/>tensors<sp/>on<sp/>forward<sp/>request.</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_serializer_type<sp/>(:obj:`bittensor.proto.Serializer.Type`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`optional`,<sp/>:default:<sp/>`bittensor.proto.Serializer.MSGPACK`):</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serializer<sp/>used<sp/>to<sp/>pack<sp/>torch<sp/>tensors<sp/>on<sp/>forward<sp/>response.</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_request_serializer_type<sp/>(:obj:`bittensor.proto.Serializer.Type`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`optional`,<sp/>:default:<sp/>`bittensor.proto.Serializer.MSGPACK`):</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serializer<sp/>used<sp/>to<sp/>pack<sp/>torch<sp/>tensors<sp/>on<sp/>forward<sp/>request.</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_response_serializer_type<sp/>(:obj:`bittensor.proto.Serializer.Type`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`optional`,<sp/>:default:<sp/>`bittensor.proto.Serializer.MSGPACK`):</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serializer<sp/>used<sp/>to<sp/>pack<sp/>torch<sp/>tensors<sp/>on<sp/>backward<sp/>response.</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextCausalLMNext<sp/>(:obj:`TextCausalLMNext`,<sp/>`required`):</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextCausalLMNext<sp/>instance<sp/>adapter<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next" kindref="compound">TextCausalLMNext</ref>(</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topk=topk,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_request_serializer_type=forward_request_serializer_type,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_serializer_type=forward_response_serializer_type,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_request_serializer_type=backward_request_serializer_type,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_response_serializer_type=backward_response_serializer_type,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@staticmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1text__seq2seq__impl_1_1_text_seq2_seq" kindref="compound">TextSeq2Seq</ref><sp/>(<sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topk:int<sp/>=<sp/>50,<sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_to_generate:<sp/>int<sp/>=<sp/>256,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_beams:<sp/>int<sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>no_repeat_ngram_size:<sp/>int<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>early_stopping:<sp/>bool<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_return_sequences:<sp/>int<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do_sample:<sp/>bool<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_p:<sp/>float<sp/>=<sp/>0.95,<sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temperature:<sp/>float<sp/>=<sp/>1.0,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repetition_penalty:<sp/>float<sp/>=<sp/>1.0,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length_penalty:<sp/>float<sp/>=<sp/>1.0,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_time:<sp/>float<sp/>=<sp/>150,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_beam_groups:<sp/>int<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_request_serializer_type:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Serializer.Type&apos;</highlight><highlight class="normal"><sp/>=<sp/>bittensor.proto.Serializer.MSGPACK,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_serializer_type:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Serializer.Type&apos;</highlight><highlight class="normal"><sp/>=<sp/>bittensor.proto.Serializer.MSGPACK,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_request_serializer_type:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Serializer.Type&apos;</highlight><highlight class="normal"><sp/>=<sp/>bittensor.proto.Serializer.MSGPACK,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_response_serializer_type:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Serializer.Type&apos;</highlight><highlight class="normal"><sp/>=<sp/>bittensor.proto.Serializer.MSGPACK,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>-&gt;<sp/>TextSeq2Seq:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Factory<sp/>function<sp/>which<sp/>returns<sp/>a<sp/>TextSeq2Seq<sp/>synapse<sp/>adapter<sp/>given<sp/>arguments.</highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Topk<sp/>(:obj:int,<sp/>:default:<sp/>50):</highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>number<sp/>of<sp/>highest<sp/>probability<sp/>vocabulary<sp/>tokens<sp/>to<sp/>keep<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>top-k-filtering.<sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_to_generate<sp/>(:obj:<sp/>int,<sp/>:default:<sp/>256):</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>number<sp/>of<sp/>tokens<sp/>to<sp/>generate<sp/>using<sp/>the<sp/>language<sp/>model</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_beams<sp/>(:obj:<sp/>int,<sp/>:default:<sp/>5):</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>number<sp/>of<sp/>beams<sp/>to<sp/>keep<sp/>during<sp/>beam<sp/>search</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>no_repeat_ngram_size<sp/>(:obj:<sp/>int,<sp/>:default:<sp/>2):</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>number<sp/>of<sp/>repeat<sp/>n<sp/>gram<sp/>allowed</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>early_stopping:<sp/>(:obj:<sp/>bool,<sp/>:default:<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>model<sp/>should<sp/>early<sp/>stop<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>probabilty<sp/>drops<sp/>a<sp/>certain<sp/>threshold</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_return_sequences:<sp/>(:obj:<sp/>int,<sp/>:default:<sp/>1):</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>How<sp/>many<sp/>sequences<sp/>should<sp/>the<sp/>model<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do_sample<sp/>(:obj:<sp/>bool,<sp/>:default:<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>model<sp/>should<sp/>do<sp/>sample<sp/>its<sp/>probablity<sp/>during<sp/>generation</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_p<sp/>(:obj:<sp/>float,<sp/>:default:<sp/>0.95):<sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probability<sp/>cutoff<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>top<sp/>p<sp/>sampling</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temperature:<sp/>(:obj:<sp/>float,<sp/>:default:<sp/>1.0):</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>value<sp/>used<sp/>to<sp/>module<sp/>the<sp/>next<sp/>token<sp/>probabilities<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>softmax<sp/>calculation</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repetition_penalty<sp/>(:obj:<sp/>float,<sp/>:default:<sp/>1.0):</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>parameter<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>repetition<sp/>penalty.<sp/>1.0<sp/>means<sp/>no<sp/>penalty.</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length_penalty<sp/>(:obj:<sp/>float,<sp/>:default:<sp/>1.0):<sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>parameter<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>length<sp/>penalty.<sp/>0.0<sp/>means<sp/>no<sp/>penalty,<sp/>&lt;0<sp/>to<sp/>encourage<sp/>longer<sp/>sequences.</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_beam_groups<sp/>(:obj:<sp/>int,<sp/>:default:<sp/>1):</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>groups<sp/>to<sp/>divide<sp/>num_beams<sp/>into<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>order<sp/>to<sp/>ensure<sp/>diversity<sp/>among<sp/>different<sp/>groups<sp/>of<sp/>beams.<sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_time<sp/>(:obj:<sp/>float,<sp/>:default:<sp/>150):<sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>time<sp/>that<sp/>a<sp/>server<sp/>can<sp/>use<sp/>to<sp/>generate</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_request_serializer_type<sp/>(:obj:`bittensor.proto.Serializer.Type`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`optional`,<sp/>:default:<sp/>`bittensor.proto.Serializer.MSGPACK`):</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serializer<sp/>used<sp/>to<sp/>pack<sp/>torch<sp/>tensors<sp/>on<sp/>forward<sp/>request.</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_serializer_type<sp/>(:obj:`bittensor.proto.Serializer.Type`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`optional`,<sp/>:default:<sp/>`bittensor.proto.Serializer.MSGPACK`):</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serializer<sp/>used<sp/>to<sp/>pack<sp/>torch<sp/>tensors<sp/>on<sp/>forward<sp/>response.</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_request_serializer_type<sp/>(:obj:`bittensor.proto.Serializer.Type`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`optional`,<sp/>:default:<sp/>`bittensor.proto.Serializer.MSGPACK`):</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serializer<sp/>used<sp/>to<sp/>pack<sp/>torch<sp/>tensors<sp/>on<sp/>forward<sp/>request.</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_response_serializer_type<sp/>(:obj:`bittensor.proto.Serializer.Type`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`optional`,<sp/>:default:<sp/>`bittensor.proto.Serializer.MSGPACK`):</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serialzer<sp/>used<sp/>to<sp/>pack<sp/>torch<sp/>tensors<sp/>on<sp/>backward<sp/>response.</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextSeq2Seq<sp/>(:obj:`TextSeq2Seq`,<sp/>`required`):</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextSeq2Seq<sp/>instance<sp/>adapter<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TextSeq2Seq<sp/>(<sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topk<sp/>=<sp/>topk,<sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_to_generate<sp/>=<sp/>num_to_generate,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_beams<sp/>=<sp/>num_beams,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>no_repeat_ngram_size<sp/>=<sp/>no_repeat_ngram_size,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>early_stopping<sp/>=<sp/>early_stopping,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_return_sequences<sp/>=<sp/>num_return_sequences,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do_sample<sp/>=<sp/>do_sample,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_p<sp/>=<sp/>top_p,<sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temperature<sp/>=<sp/>temperature,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repetition_penalty<sp/>=<sp/>repetition_penalty,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length_penalty<sp/>=<sp/>length_penalty,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_beam_groups<sp/>=<sp/>num_beam_groups,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_time<sp/>=<sp/>max_time,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_request_serializer_type<sp/>=<sp/>forward_request_serializer_type,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_serializer_type<sp/>=<sp/>forward_response_serializer_type,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_request_serializer_type<sp/>=<sp/>backward_request_serializer_type,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_response_serializer_type<sp/>=<sp/>backward_response_serializer_type,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@staticmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">deserialize(<sp/>synapse_wire_proto:<sp/>bittensor.proto.Synapse<sp/>)<sp/>-&gt;<sp/>Synapse:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>synapse_wire_proto.synapse_type<sp/>==<sp/>bittensor.proto.Synapse.SynapseType.TEXT_LAST_HIDDEN_STATE:</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TextLastHiddenState.deserialize_from_wire_proto<sp/>(<sp/>synapse_wire_proto<sp/>)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>synapse_wire_proto.synapse_type<sp/>==<sp/>bittensor.proto.Synapse.SynapseType.TEXT_CAUSAL_LM:</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TextCausalLM.deserialize_from_wire_proto(<sp/>synapse_wire_proto<sp/>)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>synapse_wire_proto.synapse_type<sp/>==<sp/>bittensor.proto.Synapse.SynapseType.TEXT_CAUSAL_LM_NEXT:</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TextCausalLMNext.deserialize_from_wire_proto(synapse_wire_proto)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>synapse_wire_proto.synapse_type<sp/>==<sp/>bittensor.proto.Synapse.SynapseType.TEXT_SEQ_2_SEQ:</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TextSeq2Seq.deserialize_from_wire_proto(<sp/>synapse_wire_proto<sp/>)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_null_synapse" kindref="compound">NullSynapse</ref>()</highlight></codeline>
    </programlisting>
    <location file="/Users/macthrasher/bittensor/bittensor/_synapse/__init__.py"/>
  </compounddef>
</doxygen>
