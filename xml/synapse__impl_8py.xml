<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="synapse__impl_8py" kind="file" language="Python">
    <compoundname>synapse_impl.py</compoundname>
    <innerclass refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse" prot="public">bittensor::_synapse::synapse_impl::Synapse</innerclass>
    <innerclass refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_null_synapse" prot="public">bittensor::_synapse::synapse_impl::NullSynapse</innerclass>
    <innernamespace refid="namespacebittensor">bittensor</innernamespace>
    <innernamespace refid="namespacebittensor_1_1__synapse">bittensor::_synapse</innernamespace>
    <innernamespace refid="namespacebittensor_1_1__synapse_1_1synapse__impl">bittensor::_synapse::synapse_impl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#<sp/>The<sp/>MIT<sp/>License<sp/>(MIT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Copyright<sp/>©<sp/>2021<sp/>Yuma<sp/>Rao</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>documentation<sp/>files<sp/>(the<sp/>“Software”),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>Software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>“AS<sp/>IS”,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>bittensor</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>torch</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>typing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Union,<sp/>List,<sp/>Tuple,<sp/>Optional</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse" kindref="compound">Synapse</ref>:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Proto<sp/>serializable<sp/>class<sp/>which<sp/>specifies<sp/>the<sp/>function<sp/>to<sp/>be<sp/>called<sp/>on<sp/>a<sp/>recieving<sp/>neuron</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>well<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>the<sp/>method<sp/>of<sp/>serialization<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>packing<sp/>of<sp/>forward/backward<sp/>request/responses.</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Unique<sp/>proto<sp/>enum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>synapse_type:<sp/>bittensor.proto.Synapse.SynapseType<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a43f83b557416a8a3936d5ddc175b5e6f" kindref="member">__init__</ref>(</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self,<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_request_serializer_type:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Serializer.Type&apos;</highlight><highlight class="normal"><sp/>=<sp/>bittensor.proto.Serializer.MSGPACK,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_serializer_type:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Serializer.Type&apos;</highlight><highlight class="normal"><sp/>=<sp/>bittensor.proto.Serializer.MSGPACK,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_request_serializer_type:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Serializer.Type&apos;</highlight><highlight class="normal"><sp/>=<sp/>bittensor.proto.Serializer.MSGPACK,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_response_serializer_type:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Serializer.Type&apos;</highlight><highlight class="normal"><sp/>=<sp/>bittensor.proto.Serializer.MSGPACK,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>-&gt;<sp/></highlight><highlight class="stringliteral">&apos;Synapse&apos;</highlight><highlight class="normal">:<sp/><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Synapse<sp/>super<sp/>class<sp/>initializer.</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_request_serializer_type<sp/>(:obj:`bittensor.proto.Serializer.Type`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`optional`,<sp/>:default:<sp/>`bittensor.proto.Serializer.MSGPACK`):</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serializer<sp/>used<sp/>to<sp/>pack<sp/>torch<sp/>tensors<sp/>on<sp/>forward<sp/>request.</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_serializer_type<sp/>(:obj:`bittensor.proto.Serializer.Type`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`optional`,<sp/>:default:<sp/>`bittensor.proto.Serializer.MSGPACK`):</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serializer<sp/>used<sp/>to<sp/>pack<sp/>torch<sp/>tensors<sp/>on<sp/>forward<sp/>response.</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_request_serializer_type<sp/>(:obj:`bittensor.proto.Serializer.Type`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`optional`,<sp/>:default:<sp/>`bittensor.proto.Serializer.MSGPACK`):</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serializer<sp/>used<sp/>to<sp/>pack<sp/>torch<sp/>tensors<sp/>on<sp/>forward<sp/>request.</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_response_serializer_type<sp/>(:obj:`bittensor.proto.Serializer.Type`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`optional`,<sp/>:default:<sp/>`bittensor.proto.Serializer.MSGPACK`):</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serialzer<sp/>used<sp/>to<sp/>pack<sp/>torch<sp/>tensors<sp/>on<sp/>backward<sp/>response.</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Synapse<sp/>(:obj:`Synapse`,<sp/>`required`):</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Synapse<sp/>super<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1ad3dd23864f4620b0622bea9777aa63b6" kindref="member">forward_request_serializer_type</ref><sp/>=<sp/>forward_request_serializer_type</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1af89940deb45bd9d18a7e1c15090a8466" kindref="member">forward_response_serializer_type</ref><sp/>=<sp/>forward_response_serializer_type</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a6ac9ff8fb2e6cf1d01b1d6fba4bead9e" kindref="member">backward_request_serializer_type</ref><sp/>=<sp/>backward_request_serializer_type</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a7a08c81b8b0a17e7913c52d17735aed5" kindref="member">backward_response_serializer_type</ref><sp/>=<sp/>backward_response_serializer_type</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__repr__(self)<sp/>-&gt;<sp/>str:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.__str__()</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__str__(self)<sp/>-&gt;<sp/>str:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Synapse&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>@staticmethod</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a93012de6476558437aac932fdafe7630" kindref="member">deserialize_from_instance_proto</ref><sp/>(<sp/>isntance_proto:<sp/>bittensor.proto.Synapse<sp/>)<sp/>-&gt;<sp/></highlight><highlight class="stringliteral">&apos;Synapse&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Deserialzied<sp/>the<sp/>instance<sp/>proto<sp/>to<sp/>an<sp/>instance<sp/>class.</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isntance_proto<sp/>(:obj:`bittensor.proto.Synapse`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`required`):</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Synapse<sp/>instance<sp/>proto<sp/>to<sp/>be<sp/>deserialized.</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_instance_clasee<sp/>(:obj:`torch.Tensor`,<sp/>`required`):</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Deserialized<sp/>instance<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;deserialize_from_instance_proto<sp/>should<sp/>be<sp/>implemented<sp/>by<sp/>the<sp/>subclass.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@staticmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1aeb38ec002657d66a4e8e947b95e4a129" kindref="member">deserialize_from_wire_proto</ref><sp/>(<sp/>wire_proto:<sp/>bittensor.proto.Synapse<sp/>)<sp/>-&gt;<sp/></highlight><highlight class="stringliteral">&apos;Synapse&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Deserialzied<sp/>the<sp/>wire<sp/>proto<sp/>to<sp/>an<sp/>instance<sp/>class.</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wire_proto<sp/>(:obj:`bittensor.proto.Synapse`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`required`):</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Synapse<sp/>wire<sp/>proto<sp/>to<sp/>be<sp/>deserialized.</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_instance_clasee<sp/>(:obj:`torch.Tensor`,<sp/>`required`):</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Deserialized<sp/>instance<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;deserialize_from_wire_proto<sp/>should<sp/>be<sp/>implemented<sp/>by<sp/>the<sp/>subclass.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a9e2c93dbd788e9fb778997874f6429fb" kindref="member">serialize_to_instance_proto</ref>(<sp/>self,<sp/>**kwargs<sp/>)<sp/>-&gt;<sp/>&apos;bittensor.proto.Synapse&apos;:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Serializes<sp/>the<sp/>class<sp/>instance<sp/>to<sp/>a<sp/>Synapse<sp/>instance<sp/>proto.</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serialized_synapse_as_instance_proto<sp/>(:obj:`torch.Tensor`,<sp/>`required`):</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Instance<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">serialized<sp/>to<sp/>a<sp/>instance<sp/>proto.</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;serialize_to_instance_proto<sp/>should<sp/>be<sp/>implemented<sp/>by<sp/>the<sp/>subclass.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a9fd871f88280feb461379b7d957ef368" kindref="member">serialize_to_wire_proto</ref>(<sp/>self,<sp/>**kwargs<sp/>)<sp/>-&gt;<sp/>&apos;bittensor.proto.Synapse&apos;:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Serializes<sp/>the<sp/>class<sp/>instance<sp/>to<sp/>a<sp/>Synapse<sp/>wire<sp/>proto.</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serialized_synapse_as_wire_proto<sp/>(:obj:`torch.Tensor`,<sp/>`required`):</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Instance<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">serialized<sp/>to<sp/>a<sp/>wire<sp/>proto.</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;serialize_to_wire_proto<sp/>should<sp/>be<sp/>implemented<sp/>by<sp/>the<sp/>subclass.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a29704899ae87600748e464fa7823a04e" kindref="member">nill_forward_response_tensor</ref><sp/>(<sp/>self,<sp/>forward_request_tensor:<sp/>torch.Tensor<sp/>)<sp/>-&gt;<sp/>torch.Tensor:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Returns<sp/>a<sp/>zeroed<sp/>tensor<sp/>used<sp/>as<sp/>response<sp/>to<sp/>a<sp/>dendrite<sp/>forward<sp/>call<sp/>when<sp/>the<sp/>call<sp/>fails.</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_request_tensor<sp/>(:obj:`torch.Tensor`,<sp/>`required`):</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tensor<sp/>being<sp/>sent<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>forward<sp/>request.</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nill_forward_response_tensor<sp/>(:obj:`torch.Tensor`,<sp/>`required`):</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Zeroed<sp/>forward<sp/>response<sp/>tensor.</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;nill_forward_response_tensor<sp/>should<sp/>be<sp/>implemented<sp/>by<sp/>the<sp/>subclass.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a28f55eb21a6e304a690594db9edc4922" kindref="member">nill_backward_response_tensor</ref><sp/>(<sp/>self,<sp/>forward_request_tensor<sp/>:<sp/>torch.Tensor<sp/>)<sp/>-&gt;<sp/>torch.Tensor:</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Returns<sp/>a<sp/>zeroed<sp/>tensor<sp/>used<sp/>as<sp/>response<sp/>to<sp/>a<sp/>dendrite<sp/>backward<sp/>call<sp/>when<sp/>the<sp/>call<sp/>fails.</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_request_tensor<sp/><sp/>(:obj:`torch.Tensor`,<sp/>`required`):</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tensor<sp/>being<sp/>sent<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>forward<sp/>request.</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nill_backward_response_tensor<sp/><sp/>(:obj:`torch.Tensor`,<sp/>`required`):</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Zeroed<sp/>backward<sp/>response<sp/>gradient.</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="119"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;nill_backward_response_tensor<sp/>should<sp/>be<sp/>implemented<sp/>by<sp/>the<sp/>subclass.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">check_forward_request_tensor<sp/><sp/><sp/><sp/><sp/>(<sp/>self,<sp/>forward_request_tensor<sp/>):<sp/></highlight><highlight class="keyword">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">check_forward_response_tensor<sp/><sp/><sp/><sp/>(<sp/>self,<sp/>forward_request_tensor,<sp/>forward_response_tensor<sp/>):<sp/></highlight><highlight class="keyword">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">check_backward_request_gradient<sp/><sp/>(<sp/>self,<sp/>forward_request_tensor,<sp/>backward_request_gradient<sp/>):<sp/></highlight><highlight class="keyword">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">check_backward_response_gradient<sp/><sp/>(<sp/>self,<sp/>forward_request_tensor,<sp/>backward_request_gradient<sp/>):<sp/></highlight><highlight class="keyword">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">encode_forward_request_tensor<sp/><sp/><sp/><sp/>(<sp/>self,<sp/>forward_request_tensor:<sp/>torch.Tensor<sp/>)<sp/>-&gt;<sp/>torch.Tensor:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forward_request_tensor</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">decode_forward_request_tensor<sp/><sp/><sp/><sp/>(<sp/>self,<sp/>forward_request_tensor:<sp/>torch.Tensor<sp/>)<sp/>-&gt;<sp/>torch.Tensor:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forward_request_tensor</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">encode_forward_response_tensor<sp/><sp/><sp/>(<sp/>self,<sp/>forward_response_tensor:<sp/>torch.Tensor<sp/>)<sp/>-&gt;<sp/>torch.Tensor:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forward_response_tensor</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">decode_forward_response_tensor<sp/><sp/><sp/>(<sp/>self,<sp/>forward_response_tensor:<sp/>torch.Tensor<sp/>)<sp/>-&gt;<sp/>torch.Tensor:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forward_response_tensor</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">encode_backward_request_gradient<sp/>(<sp/>self,<sp/>backward_request_gradient:<sp/>torch.Tensor<sp/>)<sp/>-&gt;<sp/>torch.Tensor:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>backward_request_gradient</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">decode_backward_request_gradient<sp/>(<sp/>self,<sp/>backward_request_gradient:<sp/>torch.Tensor<sp/>)<sp/>-&gt;<sp/>torch.Tensor:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>backward_request_gradient</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">encode_backward_response_gradient<sp/>(<sp/>self,<sp/>backward_response_gradient:<sp/>torch.Tensor<sp/>)<sp/>-&gt;<sp/>torch.Tensor:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>backward_response_gradient</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">decode_backward_response_gradient<sp/>(<sp/>self,<sp/>backward_response_gradient:<sp/>torch.Tensor<sp/>)<sp/>-&gt;<sp/>torch.Tensor:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>backward_response_gradient</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">serialize_forward_request_tensor(<sp/>self,<sp/>forward_request_tensor:<sp/>torch.Tensor<sp/>)<sp/>-&gt;<sp/>Tuple[<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Tensor&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.ReturnCode&apos;</highlight><highlight class="normal">,<sp/><sp/>str<sp/>]:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1acc3a89c693c501b031ec130b399a0931" kindref="member">check_forward_request_tensor</ref><sp/>(<sp/>forward_request_tensor<sp/>)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_request_tensor<sp/>=<sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1ab0f074f5045e9ca075605c1f9e1664d2" kindref="member">encode_forward_request_tensor</ref><sp/>(<sp/>forward_request_tensor<sp/>)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_serialzier<sp/>=<sp/><ref refid="classbittensor_1_1__serializer_1_1serializer" kindref="compound">bittensor.serializer</ref>(<sp/>serializer_type<sp/>=<sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1ad3dd23864f4620b0622bea9777aa63b6" kindref="member">forward_request_serializer_type</ref><sp/>)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor_serialzier.serialize(<sp/>tensor_obj<sp/>=<sp/>forward_request_tensor,<sp/>from_type<sp/>=<sp/>bittensor.proto.TensorType.TORCH<sp/>)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a5ea98d071967a34e4d0f5c3c2ab5b372" kindref="member">deserialize_forward_request_tensor</ref>(<sp/>self,<sp/>forward_request_proto:<sp/>bittensor.proto.Tensor<sp/>)<sp/>-&gt;<sp/>Tuple[<sp/></highlight><highlight class="stringliteral">&apos;torch.Tensor&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.ReturnCode&apos;</highlight><highlight class="normal">,<sp/><sp/>str<sp/>]:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Returns<sp/>a<sp/>torch.Tensor<sp/>from<sp/>wire<sp/>proto.Tensor<sp/>after<sp/>relevant<sp/>deserialization<sp/>has<sp/>been<sp/>applied.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_deserialzier<sp/>=<sp/><ref refid="classbittensor_1_1__serializer_1_1serializer" kindref="compound">bittensor.serializer</ref>(<sp/>serializer_type<sp/>=<sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1ad3dd23864f4620b0622bea9777aa63b6" kindref="member">forward_request_serializer_type</ref><sp/>)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_request_tensor<sp/>=<sp/>tensor_deserialzier.deserialize(<sp/>tensor_pb2<sp/>=<sp/>forward_request_proto,<sp/>to_type<sp/>=<sp/>bittensor.proto.TensorType.TORCH<sp/>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_request_tensor<sp/>=<sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a054c4ee0bc9b2d26b0ffde2f5e6c6d6d" kindref="member">decode_forward_request_tensor</ref><sp/>(<sp/>forward_request_tensor<sp/>)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1acc3a89c693c501b031ec130b399a0931" kindref="member">check_forward_request_tensor</ref><sp/>(<sp/>forward_request_tensor<sp/>)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forward_request_tensor</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1ae38bd75b6fe681bb836de7616864fbfa" kindref="member">serialize_forward_response_tensor</ref>(<sp/>self,<sp/>forward_request_tensor:<sp/>torch.Tensor,<sp/>forward_response_tensor:<sp/>torch.Tensor<sp/>)<sp/>-&gt;<sp/>Tuple[<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Tensor&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.ReturnCode&apos;</highlight><highlight class="normal">,<sp/><sp/>str<sp/>]:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Returns<sp/>a<sp/>bittensor.proto.Tensor<sp/>to<sp/>be<sp/>sent<sp/>on<sp/>the<sp/>wire<sp/>after<sp/>relevant<sp/>serialization<sp/>applied.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoded_tensor<sp/>=<sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a652c329c4cfa85daf0c250a0e8547ac5" kindref="member">encode_forward_response_tensor</ref><sp/>(<sp/>forward_response_tensor<sp/>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1acb6d69d2b432bde2495df6b668f17c40" kindref="member">check_forward_response_tensor</ref><sp/>(<sp/>forward_request_tensor,<sp/>encoded_tensor<sp/>)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_serialzier<sp/>=<sp/><ref refid="classbittensor_1_1__serializer_1_1serializer" kindref="compound">bittensor.serializer</ref>(<sp/>serializer_type<sp/>=<sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1af89940deb45bd9d18a7e1c15090a8466" kindref="member">forward_response_serializer_type</ref><sp/>)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor_serialzier.serialize(<sp/>tensor_obj<sp/>=<sp/>encoded_tensor,<sp/>from_type<sp/>=<sp/>bittensor.proto.TensorType.TORCH<sp/>)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a490c0eb46ee3b51c043f94c3e6f5a723" kindref="member">deserialize_forward_response_proto</ref>(<sp/>self,<sp/>forward_request_tensor:<sp/>torch.Tensor,<sp/>forward_response_proto:<sp/>bittensor.proto.Tensor<sp/>)<sp/>-&gt;<sp/>Tuple[<sp/></highlight><highlight class="stringliteral">&apos;torch.Tensor&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.ReturnCode&apos;</highlight><highlight class="normal">,<sp/><sp/>str<sp/>]:</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Returns<sp/>a<sp/>torch.Tensor<sp/>from<sp/>wire<sp/>proto.Tensor<sp/>after<sp/>relevant<sp/>deserialization<sp/>has<sp/>been<sp/>applied.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_deserialzier<sp/>=<sp/><ref refid="classbittensor_1_1__serializer_1_1serializer" kindref="compound">bittensor.serializer</ref>(<sp/>serializer_type<sp/>=<sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1af89940deb45bd9d18a7e1c15090a8466" kindref="member">forward_response_serializer_type</ref><sp/>)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_tensor<sp/>=<sp/>tensor_deserialzier.deserialize(<sp/>tensor_pb2<sp/>=<sp/>forward_response_proto,<sp/>to_type<sp/>=<sp/>bittensor.proto.TensorType.TORCH<sp/>)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1acb6d69d2b432bde2495df6b668f17c40" kindref="member">check_forward_response_tensor</ref><sp/>(<sp/>forward_request_tensor,<sp/>forward_response_tensor<sp/>)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_tensor<sp/>=<sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a25615a9c2971459105fc13b81e942dd1" kindref="member">decode_forward_response_tensor</ref><sp/>(<sp/>forward_response_tensor<sp/>)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_tensor<sp/>=<sp/>torch.nan_to_num(<sp/>forward_response_tensor,<sp/>nan=0)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forward_response_tensor</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1abee9c4ce6a720526a7c2917044708f08" kindref="member">serialize_backward_request_gradient</ref>(<sp/>self,<sp/>forward_request_tensor:<sp/>torch.Tensor,<sp/>backward_request_gradient:<sp/>torch.Tensor<sp/>)<sp/>-&gt;<sp/>Tuple[<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Tensor&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.ReturnCode&apos;</highlight><highlight class="normal">,<sp/><sp/>str<sp/>]:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Returns<sp/>a<sp/>bittensor.proto.Tensor<sp/>gradient<sp/>to<sp/>be<sp/>sent<sp/>on<sp/>the<sp/>wire<sp/>after<sp/>relevant<sp/>serialization<sp/>applied.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a7ba717d9b34e08826d484c5ec8853fbb" kindref="member">check_backward_request_gradient</ref><sp/>(<sp/>forward_request_tensor,<sp/>backward_request_gradient<sp/>)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoded_tensor<sp/>=<sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a6877da80a2e6f46224cc1679149a1683" kindref="member">encode_backward_request_gradient</ref><sp/>(<sp/>backward_request_gradient<sp/>)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_serialzier<sp/>=<sp/><ref refid="classbittensor_1_1__serializer_1_1serializer" kindref="compound">bittensor.serializer</ref>(<sp/>serializer_type<sp/>=<sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1ad3dd23864f4620b0622bea9777aa63b6" kindref="member">forward_request_serializer_type</ref><sp/>)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor_serialzier.serialize(<sp/>tensor_obj<sp/>=<sp/>encoded_tensor,<sp/>from_type<sp/>=<sp/>bittensor.proto.TensorType.TORCH<sp/>)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">deserialize_backward_request_gradient(<sp/>self,<sp/>forward_request_tensor:<sp/>torch.Tensor,<sp/>backward_request_proto:<sp/>bittensor.proto.Tensor<sp/>)<sp/>-&gt;<sp/>Tuple[<sp/></highlight><highlight class="stringliteral">&apos;torch.Tensor&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.ReturnCode&apos;</highlight><highlight class="normal">,<sp/><sp/>str<sp/>]:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_deserialzier<sp/>=<sp/><ref refid="classbittensor_1_1__serializer_1_1serializer" kindref="compound">bittensor.serializer</ref>(<sp/>serializer_type<sp/>=<sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a6ac9ff8fb2e6cf1d01b1d6fba4bead9e" kindref="member">backward_request_serializer_type</ref><sp/>)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_request_gradient<sp/>=<sp/>tensor_deserialzier.deserialize(<sp/>tensor_pb2<sp/>=<sp/>backward_request_proto,<sp/>to_type<sp/>=<sp/>bittensor.proto.TensorType.TORCH<sp/>)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_request_gradient<sp/>=<sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a9964345c43f2dd70ad9bace134f367cb" kindref="member">decode_backward_request_gradient</ref><sp/>(<sp/>backward_request_gradient<sp/>)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a7ba717d9b34e08826d484c5ec8853fbb" kindref="member">check_backward_request_gradient</ref><sp/>(forward_request_tensor,<sp/><sp/>backward_request_gradient<sp/>)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>backward_request_gradient</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">empty(self):</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_deserialzier<sp/>=<sp/><ref refid="classbittensor_1_1__serializer_1_1serializer" kindref="compound">bittensor.serializer</ref>(<sp/>serializer_type<sp/>=<sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1ad3dd23864f4620b0622bea9777aa63b6" kindref="member">forward_request_serializer_type</ref><sp/>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor_deserialzier.empty()</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_null_synapse" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_null_synapse" kindref="compound">NullSynapse</ref><sp/>(<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse" kindref="compound">Synapse</ref>):</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Null<sp/>Synapse<sp/>type<sp/></highlight></codeline>
<codeline lineno="185"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="186"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>synapse_type:<sp/>bittensor.proto.Synapse.SynapseType<sp/>=<sp/>bittensor.proto.Synapse.SynapseType.NULL_SYNAPSE</highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_null_synapse_1ae9ca98a9df999970a2ec0df23144c798" kindref="member">__init__</ref>(<sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>-&gt;<sp/>&apos;NullSynapse&apos;:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Null<sp/>Synapse<sp/>initializer.<sp/>Used<sp/>when<sp/>a<sp/>request<sp/>contains<sp/>synapses<sp/>that<sp/>has<sp/>not<sp/>been<sp/>initalized</highlight></codeline>
<codeline lineno="192"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NullSynapse<sp/>(:obj:`NullSynapse`,<sp/>`required`):</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NullSynapse<sp/>instance<sp/>adapter<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super().__init__<sp/>()</highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1af413630b0f381839eebcbf2c8431d181" kindref="member">synapse_type</ref><ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_null_synapse_1a92930d18f6f00bc49652265277db30a4" kindref="member">synapse_type</ref><ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_null_synapse_1a72ac0a129e0905e594abc57a0b38828b" kindref="member">synapse_type</ref><sp/>=<sp/>NullSynapse.synapse_type</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__repr__(self)<sp/>-&gt;<sp/>str:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.__str__()</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__str__(self)<sp/>-&gt;<sp/>str:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Null&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def</highlight><highlight class="normal"><sp/>serialize_to_wire_proto<sp/>(<sp/>self,<sp/>code:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.ReturnCode&apos;</highlight><highlight class="normal"><sp/>=<sp/>0,<sp/>message:<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"><sp/>)<sp/>-&gt;<sp/>bittensor.proto.Synapse:</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bittensor.proto.Synapse<sp/>(</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_type<sp/>=<sp/>NullSynapse.synapse_type,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/>code,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/>message</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
    </programlisting>
    <location file="/Users/macthrasher/bittensor/bittensor/_synapse/synapse_impl.py"/>
  </compounddef>
</doxygen>
