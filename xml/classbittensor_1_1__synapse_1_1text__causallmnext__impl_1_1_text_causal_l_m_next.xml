<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next" kind="class" language="Python" prot="public">
    <compoundname>bittensor::_synapse::text_causallmnext_impl::TextCausalLMNext</compoundname>
    <basecompoundref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse" prot="public" virt="non-virtual">bittensor._synapse.synapse_impl.Synapse</basecompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1a95e05ba2bb3a75605515337a82516bf1" prot="public" static="yes" mutable="no">
        <type>bittensor</type>
        <definition>bittensor bittensor._synapse.text_causallmnext_impl.TextCausalLMNext::synapse_type</definition>
        <argsstring></argsstring>
        <name>synapse_type</name>
        <qualifiedname>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.synapse_type</qualifiedname>
        <initializer>=  bittensor.proto.Synapse.SynapseType.TEXT_CAUSAL_LM_NEXT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" line="27" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1a57a4c683206b65be8de467c2f95c7fa3" prot="public" static="no" mutable="no">
        <type></type>
        <definition>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext::topk</definition>
        <argsstring></argsstring>
        <name>topk</name>
        <qualifiedname>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.topk</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" line="59" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1a689e650e07b8cdb6d932713bf098c532" prot="public" static="no" mutable="no">
        <type></type>
        <definition>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext::synapse_type</definition>
        <argsstring></argsstring>
        <name>synapse_type</name>
        <qualifiedname>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.synapse_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" line="60" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1ae9f525aff3fca9b069b5161e065b149f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.__init__</definition>
        <argsstring>(self, int topk=4096, &apos;bittensor.proto.Serializer.Type&apos; forward_request_serializer_type=bittensor.proto.Serializer.MSGPACK, &apos;bittensor.proto.Serializer.Type&apos; forward_response_serializer_type=bittensor.proto.Serializer.MSGPACK, &apos;bittensor.proto.Serializer.Type&apos; backward_request_serializer_type=bittensor.proto.Serializer.MSGPACK, &apos;bittensor.proto.Serializer.Type&apos; backward_response_serializer_type=bittensor.proto.Serializer.MSGPACK)</argsstring>
        <name>__init__</name>
        <qualifiedname>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.__init__</qualifiedname>
        <reimplements refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a43f83b557416a8a3936d5ddc175b5e6f">__init__</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>int</type>
          <declname>topk</declname>
          <defval>4096</defval>
        </param>
        <param>
          <type>&apos;bittensor.proto.Serializer.Type&apos;</type>
          <declname>forward_request_serializer_type</declname>
          <defval>bittensor.proto.Serializer.MSGPACK</defval>
        </param>
        <param>
          <type>&apos;bittensor.proto.Serializer.Type&apos;</type>
          <declname>forward_response_serializer_type</declname>
          <defval>bittensor.proto.Serializer.MSGPACK</defval>
        </param>
        <param>
          <type>&apos;bittensor.proto.Serializer.Type&apos;</type>
          <declname>backward_request_serializer_type</declname>
          <defval>bittensor.proto.Serializer.MSGPACK</defval>
        </param>
        <param>
          <type>&apos;bittensor.proto.Serializer.Type&apos;</type>
          <declname>backward_response_serializer_type</declname>
          <defval>bittensor.proto.Serializer.MSGPACK</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim> TextCausalLMNext Synapse initializer.
Args:
    topk (:obj:`int`):
        Specifies the number of topk server token phrases to return.
    forward_request_serializer_type (:obj:`bittensor.proto.Serializer.Type` of shape :obj:`(1)`, `optional`, :default: `bittensor.proto.Serializer.MSGPACK`):
        Serializer used to pack torch tensors on forward request.
    forward_response_serializer_type (:obj:`bittensor.proto.Serializer.Type` of shape :obj:`(1)`, `optional`, :default: `bittensor.proto.Serializer.MSGPACK`):
        Serializer used to pack torch tensors on forward response.
    backward_request_serializer_type (:obj:`bittensor.proto.Serializer.Type` of shape :obj:`(1)`, `optional`, :default: `bittensor.proto.Serializer.MSGPACK`):
        Serializer used to pack torch tensors on forward request.
    backward_response_serializer_type (:obj:`bittensor.proto.Serializer.Type` of shape :obj:`(1)`, `optional`, :default: `bittensor.proto.Serializer.MSGPACK`):
        Serializer used to pack torch tensors on backward response.
Returns:
    TextCausalLMNext (:obj:`TextCausalLMNext`, `required`):
        TextCausalLMNext instance adapter class.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" line="29" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" bodystart="36" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1af2db94242cda4bd19a9c03747f37357e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>str</type>
        <definition> str bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.__repr__</definition>
        <argsstring>(self)</argsstring>
        <name>__repr__</name>
        <qualifiedname>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.__repr__</qualifiedname>
        <reimplements refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a33b86030b6dc0f28aba3b1c7070de48e">__repr__</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" line="62" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1ab738a828349de66bcd0c43c96220d901" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>str</type>
        <definition> str bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.__str__</definition>
        <argsstring>(self)</argsstring>
        <name>__str__</name>
        <qualifiedname>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.__str__</qualifiedname>
        <reimplements refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a49b7378ad62c7b9dd4aae80f81703234">__str__</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" line="65" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1a68dbcc0b874707d3304df86a47955ea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type> &apos;bittensor.proto.Synapse.TextCausalLMNext&apos;</type>
        <definition> &apos;bittensor.proto.Synapse.TextCausalLMNext&apos; bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.serialize_to_instance_proto</definition>
        <argsstring>(self)</argsstring>
        <name>serialize_to_instance_proto</name>
        <qualifiedname>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.serialize_to_instance_proto</qualifiedname>
        <reimplements refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a9e2c93dbd788e9fb778997874f6429fb">serialize_to_instance_proto</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim> Serializes the class instance to a Synapse instance proto.
    Returns:
        serialized_synapse_as_instance_proto (:obj:`torch.Tensor`, `required`):
            Instance class serialized to a instance proto.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" line="84" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" bodystart="84" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1a5e95672266c3ac309400b0daa7e19d8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bittensor.proto.Synapse</type>
        <definition> bittensor.proto.Synapse bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.serialize_to_wire_proto</definition>
        <argsstring>(self, &apos;bittensor.proto.ReturnCode&apos; code=0, str message=&apos;&apos;)</argsstring>
        <name>serialize_to_wire_proto</name>
        <qualifiedname>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.serialize_to_wire_proto</qualifiedname>
        <reimplements refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a9fd871f88280feb461379b7d957ef368">serialize_to_wire_proto</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>&apos;bittensor.proto.ReturnCode&apos;</type>
          <declname>kwargs</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>str</type>
          <declname>message</declname>
          <defval>&apos;&apos;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim> Serializes the class instance to a Synapse wire proto.
    Returns:
        serialized_synapse_as_wire_proto (:obj:`torch.Tensor`, `required`):
            Instance class serialized to a wire proto.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" line="93" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" bodystart="94" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1a2b10c975e4d1cafe30746cdaf8ecc9b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.check_forward_request_tensor</definition>
        <argsstring>(self, forward_request_tensor)</argsstring>
        <name>check_forward_request_tensor</name>
        <qualifiedname>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.check_forward_request_tensor</qualifiedname>
        <reimplements refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1acc3a89c693c501b031ec130b399a0931">check_forward_request_tensor</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>forward_request_tensor</type>
          <defname>forward_request_tensor</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" line="102" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" bodystart="102" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1afc8e389fd4f4542a529c17015e4873c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.check_forward_response_tensor</definition>
        <argsstring>(self, forward_request_tensor, forward_response_tensor)</argsstring>
        <name>check_forward_response_tensor</name>
        <qualifiedname>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.check_forward_response_tensor</qualifiedname>
        <reimplements refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1acb6d69d2b432bde2495df6b668f17c40">check_forward_response_tensor</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>forward_request_tensor</type>
          <defname>forward_request_tensor</defname>
        </param>
        <param>
          <type>forward_response_tensor</type>
          <defname>forward_response_tensor</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" line="112" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" bodystart="112" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1ad47ff4db9575e238599259b65af85347" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.check_backward_request_gradient</definition>
        <argsstring>(self, forward_request_tensor, backward_request_gradient)</argsstring>
        <name>check_backward_request_gradient</name>
        <qualifiedname>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.check_backward_request_gradient</qualifiedname>
        <reimplements refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a7ba717d9b34e08826d484c5ec8853fbb">check_backward_request_gradient</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>forward_request_tensor</type>
          <defname>forward_request_tensor</defname>
        </param>
        <param>
          <type>backward_request_gradient</type>
          <defname>backward_request_gradient</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" line="130" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" bodystart="130" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1a497dd10bfcd04179405b386e9568de58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>torch.Tensor</type>
        <definition> torch.Tensor bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.encode_forward_request_tensor</definition>
        <argsstring>(self, torch.Tensor forward_request_tensor)</argsstring>
        <name>encode_forward_request_tensor</name>
        <qualifiedname>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.encode_forward_request_tensor</qualifiedname>
        <reimplements refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1ab0f074f5045e9ca075605c1f9e1664d2">encode_forward_request_tensor</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>torch.Tensor</type>
          <declname>forward_request_tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" line="142" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" bodystart="142" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1aa5192fcd83e968bab44da7976eaa09d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>torch.Tensor</type>
        <definition> torch.Tensor bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.decode_forward_request_tensor</definition>
        <argsstring>(self, torch.Tensor forward_request_tensor)</argsstring>
        <name>decode_forward_request_tensor</name>
        <qualifiedname>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.decode_forward_request_tensor</qualifiedname>
        <reimplements refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a054c4ee0bc9b2d26b0ffde2f5e6c6d6d">decode_forward_request_tensor</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>torch.Tensor</type>
          <declname>forward_request_tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" line="145" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1aa09a1f4173c55a677c4de0e3cb7ffa2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>torch.Tensor</type>
        <definition> torch.Tensor bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.encode_forward_response_tensor</definition>
        <argsstring>(self, torch.Tensor forward_response_tensor)</argsstring>
        <name>encode_forward_response_tensor</name>
        <qualifiedname>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.encode_forward_response_tensor</qualifiedname>
        <reimplements refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a652c329c4cfa85daf0c250a0e8547ac5">encode_forward_response_tensor</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>torch.Tensor</type>
          <declname>forward_response_tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim> Compact [batch_size, (topk + 1), max_len] topk std_token_phrases to [ &gt;= batch_size * (2 * topk + 1)]. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" line="148" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" bodystart="148" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1a81a958ebdd205c9f0d2871646a43e253" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>torch.Tensor</type>
        <definition> torch.Tensor bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.decode_forward_response_tensor</definition>
        <argsstring>(self, torch.Tensor forward_response_tensor)</argsstring>
        <name>decode_forward_response_tensor</name>
        <qualifiedname>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.decode_forward_response_tensor</qualifiedname>
        <reimplements refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a25615a9c2971459105fc13b81e942dd1">decode_forward_response_tensor</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>torch.Tensor</type>
          <declname>forward_response_tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim> Unravel [ &gt;= batch_size * (2 * topk + 1)] into [batch_size, (topk + 1), max_len] topk std_token_phrases. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" line="154" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" bodystart="154" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1aa8f810e77f2fe370b4dcb892f28f165e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>torch.Tensor</type>
        <definition> torch.Tensor bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.encode_backward_response_gradient</definition>
        <argsstring>(self, torch.Tensor backward_request_gradient)</argsstring>
        <name>encode_backward_response_gradient</name>
        <qualifiedname>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.encode_backward_response_gradient</qualifiedname>
        <reimplements refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1abf013ae6c8a55b22a3951abe095f5ef0">encode_backward_response_gradient</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>torch.Tensor</type>
          <declname>backward_request_gradient</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" line="159" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1add4a28d236e13f2dd910e53fd058855c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>torch.Tensor</type>
        <definition> torch.Tensor bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.decode_backward_response_gradient</definition>
        <argsstring>(self, torch.Tensor backward_request_gradient)</argsstring>
        <name>decode_backward_response_gradient</name>
        <qualifiedname>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.decode_backward_response_gradient</qualifiedname>
        <reimplements refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a626bd9a586b62c9be3fc34577356f574">decode_backward_response_gradient</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>torch.Tensor</type>
          <declname>backward_request_gradient</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" line="162" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" bodystart="162" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1a31ad56adec5f43d64bcd6a9b9215a14c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>torch.Tensor</type>
        <definition> torch.Tensor bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.encode_backward_request_gradient</definition>
        <argsstring>(self, torch.Tensor backward_response_gradient)</argsstring>
        <name>encode_backward_request_gradient</name>
        <qualifiedname>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.encode_backward_request_gradient</qualifiedname>
        <reimplements refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a6877da80a2e6f46224cc1679149a1683">encode_backward_request_gradient</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>torch.Tensor</type>
          <declname>backward_response_gradient</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim> Compact gradients of [batch_size, (topk + 1), max_len] to [2 + batch_size * (topk + 1)]. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" line="165" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" bodystart="165" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1ae83d4fadedfb6991b11e4493e2de3422" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>torch.Tensor</type>
        <definition> torch.Tensor bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.decode_backward_request_gradient</definition>
        <argsstring>(self, torch.Tensor backward_response_gradient)</argsstring>
        <name>decode_backward_request_gradient</name>
        <qualifiedname>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.decode_backward_request_gradient</qualifiedname>
        <reimplements refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a9964345c43f2dd70ad9bace134f367cb">decode_backward_request_gradient</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>torch.Tensor</type>
          <declname>backward_response_gradient</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim> Restructure [2 + batch_size * (topk + 1)] prob grads into [batch_size, (topk + 1), max_len]. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" line="173" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" bodystart="173" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1a8e7acce5e190c3797bbf5bea50177785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>torch.Tensor</type>
        <definition> torch.Tensor bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.nill_forward_response_tensor</definition>
        <argsstring>(self, torch.Tensor forward_request_tensor, encoded=False, ignore_index=-100)</argsstring>
        <name>nill_forward_response_tensor</name>
        <qualifiedname>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.nill_forward_response_tensor</qualifiedname>
        <reimplements refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a29704899ae87600748e464fa7823a04e">nill_forward_response_tensor</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>torch.Tensor</type>
          <declname>forward_request_tensor</declname>
        </param>
        <param>
          <type>encoded</type>
          <defname>encoded</defname>
          <defval>False</defval>
        </param>
        <param>
          <type>ignore_index</type>
          <defname>ignore_index</defname>
          <defval>-100</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim> Returns a zeroed tensor used as response to a dendrite forward call when the call fails.
    Args:
        forward_request_tensor (:obj:`torch.Tensor`, `required`):
            Tensor being sent as forward request.
    Returns:
        nill_forward_response_tensor (:obj:`torch.Tensor`, `required`):
            Zeroed forward response tensor.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" line="181" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" bodystart="182" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1a108d0c46f069abd17695c016047aeecc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>torch.Tensor</type>
        <definition> torch.Tensor bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.nill_backward_response_tensor</definition>
        <argsstring>(self, torch.Tensor forward_request_tensor)</argsstring>
        <name>nill_backward_response_tensor</name>
        <qualifiedname>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.nill_backward_response_tensor</qualifiedname>
        <reimplements refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a28f55eb21a6e304a690594db9edc4922">nill_backward_response_tensor</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>torch.Tensor</type>
          <declname>forward_request_tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim> Returns a zeroed tensor used as response to a dendrite backward call when the call fails.
    Args:
        forward_request_tensor  (:obj:`torch.Tensor`, `required`):
            Tensor being sent as forward request.
    Returns:
        nill_backward_response_tensor  (:obj:`torch.Tensor`, `required`):
            Zeroed backward response gradient.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" line="195" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" bodystart="195" bodyend="199"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1aa8628f53b5c826bba85685bb3703e80d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type> &apos;<ref refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next" kindref="compound">TextCausalLMNext</ref>&apos;</type>
        <definition> &apos;TextCausalLMNext&apos; bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.deserialize_from_instance_proto</definition>
        <argsstring>(bittensor.proto.Synapse instance_proto)</argsstring>
        <name>deserialize_from_instance_proto</name>
        <qualifiedname>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.deserialize_from_instance_proto</qualifiedname>
        <reimplements refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a93012de6476558437aac932fdafe7630">deserialize_from_instance_proto</reimplements>
        <param>
          <type>bittensor.proto.Synapse</type>
          <declname>isntance_proto</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim> Deserialzied the instance proto to an instance class.
    Args:
        isntance_proto (:obj:`bittensor.proto.Synapse` of shape :obj:`(1)`, `required`):
            Synapse instance proto to be deserialized.
    Returns:
        synapse_instance_clasee (:obj:`torch.Tensor`, `required`):
            Deserialized instance class.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" line="69" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" bodystart="69" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1a809012c249cd991ee6ca7bdc61a5acfc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type> &apos;<ref refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next" kindref="compound">TextCausalLMNext</ref>&apos;</type>
        <definition> &apos;TextCausalLMNext&apos; bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.deserialize_from_wire_proto</definition>
        <argsstring>(bittensor.proto.Synapse wire_proto)</argsstring>
        <name>deserialize_from_wire_proto</name>
        <qualifiedname>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext.deserialize_from_wire_proto</qualifiedname>
        <reimplements refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1aeb38ec002657d66a4e8e947b95e4a129">deserialize_from_wire_proto</reimplements>
        <param>
          <type>bittensor.proto.Synapse</type>
          <declname>wire_proto</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim> Deserialzied the wire proto to an instance class.
    Args:
        wire_proto (:obj:`bittensor.proto.Synapse` of shape :obj:`(1)`, `required`):
            Synapse wire proto to be deserialized.
    Returns:
        synapse_instance_clasee (:obj:`torch.Tensor`, `required`):
            Deserialized instance class.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" line="79" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" bodystart="79" bodyend="83"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim> TextCausalLMNext Synapse type for next token prediction from language models.
</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext</label>
        <link refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>bittensor._synapse.synapse_impl.Synapse</label>
        <link refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>bittensor</label>
      </node>
      <node id="1">
        <label>bittensor._synapse.text_causallmnext_impl.TextCausalLMNext</label>
        <link refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>synapse_type</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>bittensor._synapse.synapse_impl.Synapse</label>
        <link refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse"/>
        <childnode refid="3" relation="usage">
          <edgelabel>synapse_type</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" line="24" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_synapse/text_causallmnext_impl.py" bodystart="24" bodyend="199"/>
    <listofallmembers>
      <member refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1ae9f525aff3fca9b069b5161e065b149f" prot="public" virt="non-virtual"><scope>bittensor::_synapse::text_causallmnext_impl::TextCausalLMNext</scope><name>__init__</name></member>
      <member refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1af2db94242cda4bd19a9c03747f37357e" prot="public" virt="non-virtual"><scope>bittensor::_synapse::text_causallmnext_impl::TextCausalLMNext</scope><name>__repr__</name></member>
      <member refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1ab738a828349de66bcd0c43c96220d901" prot="public" virt="non-virtual"><scope>bittensor::_synapse::text_causallmnext_impl::TextCausalLMNext</scope><name>__str__</name></member>
      <member refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1ad47ff4db9575e238599259b65af85347" prot="public" virt="non-virtual"><scope>bittensor::_synapse::text_causallmnext_impl::TextCausalLMNext</scope><name>check_backward_request_gradient</name></member>
      <member refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1a2b10c975e4d1cafe30746cdaf8ecc9b3" prot="public" virt="non-virtual"><scope>bittensor::_synapse::text_causallmnext_impl::TextCausalLMNext</scope><name>check_forward_request_tensor</name></member>
      <member refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1afc8e389fd4f4542a529c17015e4873c9" prot="public" virt="non-virtual"><scope>bittensor::_synapse::text_causallmnext_impl::TextCausalLMNext</scope><name>check_forward_response_tensor</name></member>
      <member refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1ae83d4fadedfb6991b11e4493e2de3422" prot="public" virt="non-virtual"><scope>bittensor::_synapse::text_causallmnext_impl::TextCausalLMNext</scope><name>decode_backward_request_gradient</name></member>
      <member refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1add4a28d236e13f2dd910e53fd058855c" prot="public" virt="non-virtual"><scope>bittensor::_synapse::text_causallmnext_impl::TextCausalLMNext</scope><name>decode_backward_response_gradient</name></member>
      <member refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1aa5192fcd83e968bab44da7976eaa09d3" prot="public" virt="non-virtual"><scope>bittensor::_synapse::text_causallmnext_impl::TextCausalLMNext</scope><name>decode_forward_request_tensor</name></member>
      <member refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1a81a958ebdd205c9f0d2871646a43e253" prot="public" virt="non-virtual"><scope>bittensor::_synapse::text_causallmnext_impl::TextCausalLMNext</scope><name>decode_forward_response_tensor</name></member>
      <member refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1aa8628f53b5c826bba85685bb3703e80d" prot="public" virt="non-virtual"><scope>bittensor::_synapse::text_causallmnext_impl::TextCausalLMNext</scope><name>deserialize_from_instance_proto</name></member>
      <member refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1a809012c249cd991ee6ca7bdc61a5acfc" prot="public" virt="non-virtual"><scope>bittensor::_synapse::text_causallmnext_impl::TextCausalLMNext</scope><name>deserialize_from_wire_proto</name></member>
      <member refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1a31ad56adec5f43d64bcd6a9b9215a14c" prot="public" virt="non-virtual"><scope>bittensor::_synapse::text_causallmnext_impl::TextCausalLMNext</scope><name>encode_backward_request_gradient</name></member>
      <member refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1aa8f810e77f2fe370b4dcb892f28f165e" prot="public" virt="non-virtual"><scope>bittensor::_synapse::text_causallmnext_impl::TextCausalLMNext</scope><name>encode_backward_response_gradient</name></member>
      <member refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1a497dd10bfcd04179405b386e9568de58" prot="public" virt="non-virtual"><scope>bittensor::_synapse::text_causallmnext_impl::TextCausalLMNext</scope><name>encode_forward_request_tensor</name></member>
      <member refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1aa09a1f4173c55a677c4de0e3cb7ffa2b" prot="public" virt="non-virtual"><scope>bittensor::_synapse::text_causallmnext_impl::TextCausalLMNext</scope><name>encode_forward_response_tensor</name></member>
      <member refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1a108d0c46f069abd17695c016047aeecc" prot="public" virt="non-virtual"><scope>bittensor::_synapse::text_causallmnext_impl::TextCausalLMNext</scope><name>nill_backward_response_tensor</name></member>
      <member refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1a8e7acce5e190c3797bbf5bea50177785" prot="public" virt="non-virtual"><scope>bittensor::_synapse::text_causallmnext_impl::TextCausalLMNext</scope><name>nill_forward_response_tensor</name></member>
      <member refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1a68dbcc0b874707d3304df86a47955ea8" prot="public" virt="non-virtual"><scope>bittensor::_synapse::text_causallmnext_impl::TextCausalLMNext</scope><name>serialize_to_instance_proto</name></member>
      <member refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1a5e95672266c3ac309400b0daa7e19d8d" prot="public" virt="non-virtual"><scope>bittensor::_synapse::text_causallmnext_impl::TextCausalLMNext</scope><name>serialize_to_wire_proto</name></member>
      <member refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1a95e05ba2bb3a75605515337a82516bf1" prot="public" virt="non-virtual"><scope>bittensor::_synapse::text_causallmnext_impl::TextCausalLMNext</scope><name>synapse_type</name></member>
      <member refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1a689e650e07b8cdb6d932713bf098c532" prot="public" virt="non-virtual"><scope>bittensor::_synapse::text_causallmnext_impl::TextCausalLMNext</scope><name>synapse_type</name></member>
      <member refid="classbittensor_1_1__synapse_1_1text__causallmnext__impl_1_1_text_causal_l_m_next_1a57a4c683206b65be8de467c2f95c7fa3" prot="public" virt="non-virtual"><scope>bittensor::_synapse::text_causallmnext_impl::TextCausalLMNext</scope><name>topk</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
