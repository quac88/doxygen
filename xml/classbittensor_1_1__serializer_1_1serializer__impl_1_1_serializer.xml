<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer" kind="class" language="Python" prot="public">
    <compoundname>bittensor::_serializer::serializer_impl::Serializer</compoundname>
    <basecompoundref prot="public" virt="non-virtual">object</basecompoundref>
    <derivedcompoundref refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_c_m_p_pack_serializer" prot="public" virt="non-virtual">bittensor._serializer.serializer_impl.CMPPackSerializer</derivedcompoundref>
    <derivedcompoundref refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_m_s_g_pack_serializer" prot="public" virt="non-virtual">bittensor._serializer.serializer_impl.MSGPackSerializer</derivedcompoundref>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1aaf1e311321522ddadf7f9df58e02833d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def bittensor._serializer.serializer_impl.Serializer.empty</definition>
        <argsstring>()</argsstring>
        <name>empty</name>
        <qualifiedname>bittensor._serializer.serializer_impl.Serializer.empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Returns an empty bittensor.proto.Tensor message with the version</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_serializer/serializer_impl.py" line="34" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_serializer/serializer_impl.py" bodystart="34" bodyend="38"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1a960320e410d06c85a697d29aef17d9ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bittensor.proto.Tensor</type>
        <definition> bittensor.proto.Tensor bittensor._serializer.serializer_impl.Serializer.serialize</definition>
        <argsstring>(self, object tensor_obj, bittensor.proto.Modality modality=bittensor.proto.Modality.TEXT, int from_type=bittensor.proto.TensorType.TORCH)</argsstring>
        <name>serialize</name>
        <qualifiedname>bittensor._serializer.serializer_impl.Serializer.serialize</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>object</type>
          <declname>tensor_obj</declname>
        </param>
        <param>
          <type>bittensor.proto.Modality</type>
          <declname>modality</declname>
          <defval>bittensor.proto.Modality.TEXT</defval>
        </param>
        <param>
          <type>int</type>
          <declname>from_type</declname>
          <defval>bittensor.proto.TensorType.TORCH</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Serializes a torch object to bittensor.proto.Tensor wire format.

Args:
    tensor_obj (:obj:`object`, `required`): 
        general tensor object i.e. torch.Tensor or tensorflow.Tensor

    from_type (`obj`: bittensor.proto.TensorType, `Optional`): 
        Serialization from this type. i.e. bittensor.proto.TensorType.TORCH or bittensor.proto.TensorType.TENSORFLOW

Returns:
    tensor_pb2: (obj: `bittensor.proto.Tensor`, `Optional`): 
        Serialized tensor as bittensor.proto.proto. 

Raises:
    SerializationTypeNotImplementedException (Exception):
        Raised if the serializer does not implement the conversion between the passed type and a bittensor.proto.Tensor

    SerializationException: (Exception): 
        Raised when the subclass serialization throws an error for the passed object.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_serializer/serializer_impl.py" line="39" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_serializer/serializer_impl.py" bodystart="39" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1ae3af7e1793a30a37e38b0e9f98bd47b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>object</type>
        <definition> object bittensor._serializer.serializer_impl.Serializer.deserialize</definition>
        <argsstring>(self, bittensor.proto.Tensor tensor_pb2, int to_type)</argsstring>
        <name>deserialize</name>
        <qualifiedname>bittensor._serializer.serializer_impl.Serializer.deserialize</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>bittensor.proto.Tensor</type>
          <declname>tensor_pb2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>to_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Serializes a torch object to bittensor.proto.Tensor wire format.

Args:
    tensor_pb2 (`obj`: bittensor.proto.Tensor, `required`): 
        Serialized tensor as bittensor.proto.proto. 

    to_type (`obj`: bittensor.proto.TensorType, `required`): 
        Deserialization to this type. i.e. bittensor.proto.TensorType.TORCH or bittensor.proto.TensorType.TENSORFLOW

Returns:
    tensor_obj (:obj:`torch.FloatTensor`, `required`): 
        tensor object of type from_type in bittensor.proto.TensorType

Raises:
    SerializationTypeNotImplementedException (Exception):
        Raised if the serializer does not implement the conversion between the pb2 and the passed type.
  
    DeserializationException: (Exception): 
        Raised when the subclass deserializer throws an error for the passed object.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_serializer/serializer_impl.py" line="75" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_serializer/serializer_impl.py" bodystart="75" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1aab5db416aedd9f4830077cb288c5887e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bittensor.proto.Tensor</type>
        <definition> bittensor.proto.Tensor bittensor._serializer.serializer_impl.Serializer.serialize_from_tensorflow</definition>
        <argsstring>(self, torch.Tensor tensorflow_tensor, bittensor.proto.Modality modality)</argsstring>
        <name>serialize_from_tensorflow</name>
        <qualifiedname>bittensor._serializer.serializer_impl.Serializer.serialize_from_tensorflow</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>torch.Tensor</type>
          <declname>tensorflow_tensor</declname>
        </param>
        <param>
          <type>bittensor.proto.Modality</type>
          <declname>modality</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim> tensorflow -&gt; bittensor.proto.Tensor </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_serializer/serializer_impl.py" line="109" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_serializer/serializer_impl.py" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1a7997590b584332b04f5c3e98b5bfea46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bittensor.proto.Tensor</type>
        <definition> bittensor.proto.Tensor bittensor._serializer.serializer_impl.Serializer.serialize_from_torch</definition>
        <argsstring>(self, torch.Tensor torch_tensor, bittensor.proto.Modality modality)</argsstring>
        <name>serialize_from_torch</name>
        <qualifiedname>bittensor._serializer.serializer_impl.Serializer.serialize_from_torch</qualifiedname>
        <reimplementedby refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_m_s_g_pack_serializer_1ad2491ba6c3a2722b0c48bf68f1e13e7b">serialize_from_torch</reimplementedby>
        <reimplementedby refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_c_m_p_pack_serializer_1a124580b7d16f7b90bf093c517bac86dd">serialize_from_torch</reimplementedby>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>torch.Tensor</type>
          <declname>torch_tensor</declname>
        </param>
        <param>
          <type>bittensor.proto.Modality</type>
          <declname>modality</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim> torch -&gt; bittensor.proto.Tensor </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_serializer/serializer_impl.py" line="113" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_serializer/serializer_impl.py" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1a939fa535f4b9a8ab4e8a4e825d15a9b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bittensor.proto.Tensor</type>
        <definition> bittensor.proto.Tensor bittensor._serializer.serializer_impl.Serializer.serialize_from_numpy</definition>
        <argsstring>(self, torch.Tensor numpy_tensor, bittensor.proto.Modality modality)</argsstring>
        <name>serialize_from_numpy</name>
        <qualifiedname>bittensor._serializer.serializer_impl.Serializer.serialize_from_numpy</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>torch.Tensor</type>
          <declname>numpy_tensor</declname>
        </param>
        <param>
          <type>bittensor.proto.Modality</type>
          <declname>modality</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim> numpy -&gt; bittensor.proto.Tensor </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_serializer/serializer_impl.py" line="117" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_serializer/serializer_impl.py" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1a0a53800eb9150bb28ee55bc7dad8c2da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>torch.Tensor</type>
        <definition> torch.Tensor bittensor._serializer.serializer_impl.Serializer.deserialize_to_torch</definition>
        <argsstring>(self, bittensor.proto.Tensor tensor_pb2)</argsstring>
        <name>deserialize_to_torch</name>
        <qualifiedname>bittensor._serializer.serializer_impl.Serializer.deserialize_to_torch</qualifiedname>
        <reimplementedby refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_m_s_g_pack_serializer_1af2f485747d6af31ff4d4c75f1ae6dcb8">deserialize_to_torch</reimplementedby>
        <reimplementedby refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_c_m_p_pack_serializer_1a7b89eaa87b6f07e7c172263d6216ab79">deserialize_to_torch</reimplementedby>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>bittensor.proto.Tensor</type>
          <declname>tensor_pb2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim> bittensor.proto.Tensor -&gt; torch </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_serializer/serializer_impl.py" line="121" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_serializer/serializer_impl.py" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1a86af024ea4cd118df74229d0e5218017" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>object</type>
        <definition> object bittensor._serializer.serializer_impl.Serializer.deserialize_to_tensorflow</definition>
        <argsstring>(self, bittensor.proto.Tensor tensor_pb2)</argsstring>
        <name>deserialize_to_tensorflow</name>
        <qualifiedname>bittensor._serializer.serializer_impl.Serializer.deserialize_to_tensorflow</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>bittensor.proto.Tensor</type>
          <declname>tensor_pb2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim> bittensor.proto.Tensor -&gt; tensorflow </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_serializer/serializer_impl.py" line="125" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_serializer/serializer_impl.py" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1a57501f89fe649fb2507b89208f386edb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>object</type>
        <definition> object bittensor._serializer.serializer_impl.Serializer.deserialize_to_numpy</definition>
        <argsstring>(self, bittensor.proto.Tensor tensor_pb2)</argsstring>
        <name>deserialize_to_numpy</name>
        <qualifiedname>bittensor._serializer.serializer_impl.Serializer.deserialize_to_numpy</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>bittensor.proto.Tensor</type>
          <declname>tensor_pb2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim> bittensor.proto.Tensor -&gt; numpy </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_serializer/serializer_impl.py" line="129" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_serializer/serializer_impl.py" bodystart="129" bodyend="133"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim> Bittensor base serialization object for converting between bittensor.proto.Tensor and their
various python tensor equivalents. i.e. torch.Tensor or tensorflow.Tensor
</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>bittensor._serializer.serializer_impl.Serializer</label>
        <link refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>bittensor._serializer.serializer_impl.CMPPackSerializer</label>
        <link refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_c_m_p_pack_serializer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>bittensor._serializer.serializer_impl.MSGPackSerializer</label>
        <link refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_m_s_g_pack_serializer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>bittensor._serializer.serializer_impl.Serializer</label>
        <link refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>object</label>
      </node>
    </collaborationgraph>
    <location file="/Users/macthrasher/bittensor/bittensor/_serializer/serializer_impl.py" line="28" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_serializer/serializer_impl.py" bodystart="28" bodyend="133"/>
    <listofallmembers>
      <member refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1ae3af7e1793a30a37e38b0e9f98bd47b8" prot="public" virt="non-virtual"><scope>bittensor::_serializer::serializer_impl::Serializer</scope><name>deserialize</name></member>
      <member refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1a57501f89fe649fb2507b89208f386edb" prot="public" virt="non-virtual"><scope>bittensor::_serializer::serializer_impl::Serializer</scope><name>deserialize_to_numpy</name></member>
      <member refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1a86af024ea4cd118df74229d0e5218017" prot="public" virt="non-virtual"><scope>bittensor::_serializer::serializer_impl::Serializer</scope><name>deserialize_to_tensorflow</name></member>
      <member refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1a0a53800eb9150bb28ee55bc7dad8c2da" prot="public" virt="non-virtual"><scope>bittensor::_serializer::serializer_impl::Serializer</scope><name>deserialize_to_torch</name></member>
      <member refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1aaf1e311321522ddadf7f9df58e02833d" prot="public" virt="non-virtual"><scope>bittensor::_serializer::serializer_impl::Serializer</scope><name>empty</name></member>
      <member refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1a960320e410d06c85a697d29aef17d9ae" prot="public" virt="non-virtual"><scope>bittensor::_serializer::serializer_impl::Serializer</scope><name>serialize</name></member>
      <member refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1a939fa535f4b9a8ab4e8a4e825d15a9b1" prot="public" virt="non-virtual"><scope>bittensor::_serializer::serializer_impl::Serializer</scope><name>serialize_from_numpy</name></member>
      <member refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1aab5db416aedd9f4830077cb288c5887e" prot="public" virt="non-virtual"><scope>bittensor::_serializer::serializer_impl::Serializer</scope><name>serialize_from_tensorflow</name></member>
      <member refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1a7997590b584332b04f5c3e98b5bfea46" prot="public" virt="non-virtual"><scope>bittensor::_serializer::serializer_impl::Serializer</scope><name>serialize_from_torch</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
