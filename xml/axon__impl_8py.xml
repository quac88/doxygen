<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="axon__impl_8py" kind="file" language="Python">
    <compoundname>axon_impl.py</compoundname>
    <innerclass refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon" prot="public">bittensor::_axon::axon_impl::Axon</innerclass>
    <innernamespace refid="namespacebittensor">bittensor</innernamespace>
    <innernamespace refid="namespacebittensor_1_1__axon">bittensor::_axon</innernamespace>
    <innernamespace refid="namespacebittensor_1_1__axon_1_1axon__impl">bittensor::_axon::axon_impl</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacebittensor_1_1__axon_1_1axon__impl_1a9a755e3fbbe879598c007a5e52537e61" prot="public" static="no" mutable="no">
        <type>logger</type>
        <definition>logger bittensor::_axon::axon_impl.logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <qualifiedname>bittensor._axon.axon_impl.logger</qualifiedname>
        <initializer>=  logger.opt(colors=True)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" line="40" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacebittensor_1_1__axon_1_1axon__impl_1a70c8935660a2f5afbb49ef312ed7b3ee" prot="public" static="no" mutable="no">
        <type>Enum</type>
        <definition>Enum bittensor::_axon::axon_impl.PROM_axon_is_started</definition>
        <argsstring></argsstring>
        <name>PROM_axon_is_started</name>
        <qualifiedname>bittensor._axon.axon_impl.PROM_axon_is_started</qualifiedname>
        <initializer>=  Enum(&apos;axon_is_started&apos;, &apos;is_started&apos;, states=[&apos;stopped&apos;, &apos;started&apos;])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" line="43" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacebittensor_1_1__axon_1_1axon__impl_1ac4f6ee41dfcd506f3fcf9c106f69a22b" prot="public" static="no" mutable="no">
        <type>Counter</type>
        <definition>Counter bittensor::_axon::axon_impl.PROM_total_forward</definition>
        <argsstring></argsstring>
        <name>PROM_total_forward</name>
        <qualifiedname>bittensor._axon.axon_impl.PROM_total_forward</qualifiedname>
        <initializer>=  Counter(&apos;axon_total_forward&apos;, &apos;total_forward&apos;, [&apos;wallet&apos;, &apos;identifier&apos;])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" line="44" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacebittensor_1_1__axon_1_1axon__impl_1a8583fc31251e5cf88334a8736c29117f" prot="public" static="no" mutable="no">
        <type>Counter</type>
        <definition>Counter bittensor::_axon::axon_impl.PROM_total_backward</definition>
        <argsstring></argsstring>
        <name>PROM_total_backward</name>
        <qualifiedname>bittensor._axon.axon_impl.PROM_total_backward</qualifiedname>
        <initializer>=  Counter(&apos;axon_total_backward&apos;, &apos;total_backward&apos;, [&apos;wallet&apos;, &apos;identifier&apos;])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" line="45" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacebittensor_1_1__axon_1_1axon__impl_1a677a6c309ef0c31c936f5cccaf14d55c" prot="public" static="no" mutable="no">
        <type>Histogram</type>
        <definition>Histogram bittensor::_axon::axon_impl.PROM_forward_latency</definition>
        <argsstring></argsstring>
        <name>PROM_forward_latency</name>
        <qualifiedname>bittensor._axon.axon_impl.PROM_forward_latency</qualifiedname>
        <initializer>=  Histogram(&apos;axon_forward_latency&apos;, &apos;forward_latency&apos;, [&apos;wallet&apos;, &apos;identifier&apos;], buckets=list(range(0,bittensor.__blocktime__,1)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" line="46" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacebittensor_1_1__axon_1_1axon__impl_1ae921e990e6d8da8879eb3580233b1539" prot="public" static="no" mutable="no">
        <type>Histogram</type>
        <definition>Histogram bittensor::_axon::axon_impl.PROM_backward_latency</definition>
        <argsstring></argsstring>
        <name>PROM_backward_latency</name>
        <qualifiedname>bittensor._axon.axon_impl.PROM_backward_latency</qualifiedname>
        <initializer>=  Histogram(&apos;axon_backward_latency&apos;, &apos;backward_latency&apos;, [&apos;wallet&apos;, &apos;identifier&apos;], buckets=list(range(0,bittensor.__blocktime__,1)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" line="47" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacebittensor_1_1__axon_1_1axon__impl_1a604a461e6482b5d08bedba3c972136e7" prot="public" static="no" mutable="no">
        <type>Counter</type>
        <definition>Counter bittensor::_axon::axon_impl.PROM_forward_synapses</definition>
        <argsstring></argsstring>
        <name>PROM_forward_synapses</name>
        <qualifiedname>bittensor._axon.axon_impl.PROM_forward_synapses</qualifiedname>
        <initializer>=  Counter(&apos;axon_forward_synapses&apos;, &apos;forward_synapses&apos;, [&apos;wallet&apos;, &apos;identifier&apos;, &quot;synapse&quot;])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" line="48" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacebittensor_1_1__axon_1_1axon__impl_1aa623928984c14bcd26736a84727507c7" prot="public" static="no" mutable="no">
        <type>Counter</type>
        <definition>Counter bittensor::_axon::axon_impl.PROM_backward_synapses</definition>
        <argsstring></argsstring>
        <name>PROM_backward_synapses</name>
        <qualifiedname>bittensor._axon.axon_impl.PROM_backward_synapses</qualifiedname>
        <initializer>=  Counter(&apos;axon_backward_synapses&apos;, &apos;backward_synapses&apos;, [&apos;wallet&apos;, &apos;identifier&apos;, &quot;synapse&quot;])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" line="49" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacebittensor_1_1__axon_1_1axon__impl_1a0e22aadb9d6bfd39e1a5be567fa68824" prot="public" static="no" mutable="no">
        <type>Counter</type>
        <definition>Counter bittensor::_axon::axon_impl.PROM_forward_codes</definition>
        <argsstring></argsstring>
        <name>PROM_forward_codes</name>
        <qualifiedname>bittensor._axon.axon_impl.PROM_forward_codes</qualifiedname>
        <initializer>=  Counter(&apos;axon_forward_codes&apos;, &apos;forward_codes&apos;, [&apos;wallet&apos;, &apos;identifier&apos;, &quot;code&quot;])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" line="50" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacebittensor_1_1__axon_1_1axon__impl_1a4e44667b6f9c13fbd9a63ea19b179951" prot="public" static="no" mutable="no">
        <type>Counter</type>
        <definition>Counter bittensor::_axon::axon_impl.PROM_backward_codes</definition>
        <argsstring></argsstring>
        <name>PROM_backward_codes</name>
        <qualifiedname>bittensor._axon.axon_impl.PROM_backward_codes</qualifiedname>
        <initializer>=  Counter(&apos;axon_backward_codes&apos;, &apos;backward_codes&apos;, [&apos;wallet&apos;, &apos;identifier&apos;, &quot;code&quot;])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" line="51" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacebittensor_1_1__axon_1_1axon__impl_1aa0d6300d509fe0a23bcb2c26e724c9f8" prot="public" static="no" mutable="no">
        <type>Counter</type>
        <definition>Counter bittensor::_axon::axon_impl.PROM_forward_hotkeys</definition>
        <argsstring></argsstring>
        <name>PROM_forward_hotkeys</name>
        <qualifiedname>bittensor._axon.axon_impl.PROM_forward_hotkeys</qualifiedname>
        <initializer>=  Counter(&apos;axon_forward_hotkeys&apos;, &apos;forward_hotkeys&apos;, [&apos;wallet&apos;, &apos;identifier&apos;, &quot;hotkey&quot;])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" line="52" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacebittensor_1_1__axon_1_1axon__impl_1a457bac9c61d7e4f91c298f5961e252ed" prot="public" static="no" mutable="no">
        <type>Counter</type>
        <definition>Counter bittensor::_axon::axon_impl.PROM_backward_hotkeys</definition>
        <argsstring></argsstring>
        <name>PROM_backward_hotkeys</name>
        <qualifiedname>bittensor._axon.axon_impl.PROM_backward_hotkeys</qualifiedname>
        <initializer>=  Counter(&apos;axon_backward_hotkeys&apos;, &apos;backward_hotkeys&apos;, [&apos;wallet&apos;, &apos;identifier&apos;, &quot;hotkey&quot;])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" line="53" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacebittensor_1_1__axon_1_1axon__impl_1aff3dd14dc1e0cd40af55a7f9e7f79aa1" prot="public" static="no" mutable="no">
        <type>Counter</type>
        <definition>Counter bittensor::_axon::axon_impl.PROM_forward_bytes</definition>
        <argsstring></argsstring>
        <name>PROM_forward_bytes</name>
        <qualifiedname>bittensor._axon.axon_impl.PROM_forward_bytes</qualifiedname>
        <initializer>=  Counter(&apos;axon_forward_bytes&apos;, &apos;forward_bytes&apos;, [&apos;wallet&apos;, &apos;identifier&apos;, &quot;hotkey&quot;])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" line="54" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacebittensor_1_1__axon_1_1axon__impl_1a847bae9ed6f9305ba7e7266c8379e1c1" prot="public" static="no" mutable="no">
        <type>Counter</type>
        <definition>Counter bittensor::_axon::axon_impl.PROM_backward_bytes</definition>
        <argsstring></argsstring>
        <name>PROM_backward_bytes</name>
        <qualifiedname>bittensor._axon.axon_impl.PROM_backward_bytes</qualifiedname>
        <initializer>=  Counter(&apos;axon_backward_bytes&apos;, &apos;backward_bytes&apos;, [&apos;wallet&apos;, &apos;identifier&apos;, &quot;hotkey&quot;])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" line="55" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacebittensor_1_1__axon_1_1axon__impl" refkind="compound"><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Implementation<sp/>of<sp/>Axon,<sp/>services<sp/>Forward<sp/>and<sp/>Backward<sp/>requests<sp/>from<sp/>other<sp/>neurons.</highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>MIT<sp/>License<sp/>(MIT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Copyright<sp/>©<sp/>2021<sp/>Yuma<sp/>Rao</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Copyright<sp/>©<sp/>2022<sp/>Opentensor<sp/>Foundation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>documentation<sp/>files<sp/>(the<sp/>“Software”),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>Software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>“AS<sp/>IS”,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>clock</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>types<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>SimpleNamespace</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>typing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>List,<sp/>Tuple,<sp/>Callable</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>torch</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>grpc</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>wandb</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pandas</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>uuid</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>torch.nn.functional<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>F</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>concurrent</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>bittensor</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacebittensor_1_1utils_1_1stats" kindref="compound">bittensor.utils.stats</ref><sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>stat_utils</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>datetime<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>datetime</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">logger<sp/>=<sp/>logger.opt(colors=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>prometheus_client<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Counter,<sp/>Histogram,<sp/>Enum,<sp/>CollectorRegistry</highlight></codeline>
<codeline lineno="43"><highlight class="normal">PROM_axon_is_started<sp/>=<sp/>Enum(</highlight><highlight class="stringliteral">&apos;axon_is_started&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;is_started&apos;</highlight><highlight class="normal">,<sp/>states=[</highlight><highlight class="stringliteral">&apos;stopped&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;started&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="44"><highlight class="normal">PROM_total_forward<sp/>=<sp/>Counter(</highlight><highlight class="stringliteral">&apos;axon_total_forward&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;total_forward&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;wallet&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;identifier&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="45"><highlight class="normal">PROM_total_backward<sp/>=<sp/>Counter(</highlight><highlight class="stringliteral">&apos;axon_total_backward&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;total_backward&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;wallet&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;identifier&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="46"><highlight class="normal">PROM_forward_latency<sp/>=<sp/>Histogram(</highlight><highlight class="stringliteral">&apos;axon_forward_latency&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;forward_latency&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;wallet&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;identifier&apos;</highlight><highlight class="normal">],<sp/>buckets=list(range(0,bittensor.__blocktime__,1)))</highlight></codeline>
<codeline lineno="47"><highlight class="normal">PROM_backward_latency<sp/>=<sp/>Histogram(</highlight><highlight class="stringliteral">&apos;axon_backward_latency&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;backward_latency&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;wallet&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;identifier&apos;</highlight><highlight class="normal">],<sp/>buckets=list(range(0,bittensor.__blocktime__,1)))<sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal">PROM_forward_synapses<sp/>=<sp/>Counter(</highlight><highlight class="stringliteral">&apos;axon_forward_synapses&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;forward_synapses&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;wallet&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;identifier&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;synapse&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="49"><highlight class="normal">PROM_backward_synapses<sp/>=<sp/>Counter(</highlight><highlight class="stringliteral">&apos;axon_backward_synapses&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;backward_synapses&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;wallet&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;identifier&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;synapse&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="50"><highlight class="normal">PROM_forward_codes<sp/>=<sp/>Counter(</highlight><highlight class="stringliteral">&apos;axon_forward_codes&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;forward_codes&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;wallet&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;identifier&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;code&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="51"><highlight class="normal">PROM_backward_codes<sp/>=<sp/>Counter(</highlight><highlight class="stringliteral">&apos;axon_backward_codes&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;backward_codes&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;wallet&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;identifier&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;code&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="52"><highlight class="normal">PROM_forward_hotkeys<sp/>=<sp/>Counter(</highlight><highlight class="stringliteral">&apos;axon_forward_hotkeys&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;forward_hotkeys&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;wallet&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;identifier&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;hotkey&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="53"><highlight class="normal">PROM_backward_hotkeys<sp/>=<sp/>Counter(</highlight><highlight class="stringliteral">&apos;axon_backward_hotkeys&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;backward_hotkeys&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;wallet&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;identifier&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;hotkey&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="54"><highlight class="normal">PROM_forward_bytes<sp/>=<sp/>Counter(</highlight><highlight class="stringliteral">&apos;axon_forward_bytes&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;forward_bytes&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;wallet&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;identifier&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;hotkey&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="55"><highlight class="normal">PROM_backward_bytes<sp/>=<sp/>Counter(</highlight><highlight class="stringliteral">&apos;axon_backward_bytes&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;backward_bytes&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;wallet&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;identifier&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;hotkey&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon" kindref="compound">Axon</ref>(<sp/>bittensor.grpc.BittensorServicer<sp/>):</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Services<sp/>Forward<sp/>and<sp/>Backward<sp/>requests<sp/>from<sp/>other<sp/>neurons.</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1ae26e7b802d3e514880155f6bc30e0929" kindref="member">__init__</ref>(<sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self,<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wallet:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.wallet&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip:<sp/>str,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port:<sp/>int,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>external_ip:<sp/>str,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>external_port:<sp/>int,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server:<sp/></highlight><highlight class="stringliteral">&apos;grpc._Server&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward:<sp/></highlight><highlight class="stringliteral">&apos;Callable&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward:<sp/></highlight><highlight class="stringliteral">&apos;Callable&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapses:<sp/>dict,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_checks:<sp/></highlight><highlight class="stringliteral">&apos;Callable&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_timeouts:<sp/>dict,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prometheus_level:<sp/>str,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priority:<sp/><sp/></highlight><highlight class="stringliteral">&apos;Callable&apos;</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priority_threadpool:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.prioritythreadpool&apos;</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_timeout:<sp/>int<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_timeout:<sp/>int<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>):</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Initializes<sp/>a<sp/>new<sp/>Axon<sp/>tensor<sp/>processing<sp/>endpoint.</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config<sp/>(:obj:`<ref refid="classbittensor_1_1__config_1_1config__impl_1_1_config" kindref="compound">bittensor.Config</ref>`,<sp/>`required`):<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor.axon.config()</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wallet<sp/>(:obj:`<ref refid="classbittensor_1_1__wallet_1_1wallet" kindref="compound">bittensor.wallet</ref>`,<sp/>`required`):</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor<sp/>wallet<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>hotkey<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>coldkeypub.</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server<sp/>(:obj:`grpc._Server`,<sp/>`required`):</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Grpc<sp/>server<sp/>endpoint.</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward<sp/>(:obj:list<sp/>of<sp/>`callable`,<sp/>`optional`):</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>of<sp/>functions<sp/>which<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>called<sp/>on<sp/>forward<sp/>requests.</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward<sp/>(:obj:list<sp/>of<sp/>`callable`,<sp/>`optional`):</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>of<sp/>functions<sp/>which<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>called<sp/>on<sp/>backward<sp/>requests.</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prometheus_level<sp/>(:obj:`str`,<sp/>`required`):</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Prometheus<sp/>logging<sp/>level.</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priority<sp/>(:obj:`callable`,<sp/>`optional`):</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function<sp/>to<sp/>assign<sp/>priority<sp/>on<sp/>requests.</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priority_threadpool<sp/>(:obj:`<ref refid="classbittensor_1_1__threadpool_1_1prioritythreadpool" kindref="compound">bittensor.prioritythreadpool</ref>`,<sp/>`optional`):</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor<sp/>priority_threadpool.</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a6cb60d31a29f1264dddd761eff914e9c" kindref="member">ip</ref><sp/>=<sp/>ip</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a495ee94db558d43cd783653bd6a794f3" kindref="member">port</ref><sp/>=<sp/>port</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a0b5a02653940225229700fcafdc5ad67" kindref="member">external_ip</ref><sp/>=<sp/>external_ip</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a925d4292bd65e6419610ddb24dc8c9a9" kindref="member">external_port</ref><sp/>=<sp/>external_port</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a67619a6c0020220785a6e1894daa3268" kindref="member">wallet</ref><sp/>=<sp/>wallet</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a920ed8e7fc5a71ee32f1a0ca5eadb389" kindref="member">server</ref><sp/>=<sp/>server</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a961a4c900afba0941aa37b0143629494" kindref="member">forward_callback</ref><sp/>=<sp/>forward<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>forward<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1aeb7638fed309a59fa8e464412f53ca2d" kindref="member">default_forward_callback</ref></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a2c96cc8208446ca2a3564701bf41e67b" kindref="member">backward_callback</ref><sp/>=<sp/>backward<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>backward<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1af83a7aa148ab6b2cb77ad3adcdba75c3" kindref="member">default_backward_callback</ref></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a57a1b659ab9f6a9613c7780108fc6c7e" kindref="member">forward_timeout</ref><sp/>=<sp/>forward_timeout</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a983910e2dec663cc4f6dd9a360c9ed20" kindref="member">backward_timeout</ref><sp/>=<sp/>backward_timeout</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a8cbc3cca071799ea2329a109898a41cc" kindref="member">synapse_callbacks</ref><sp/>=<sp/>synapses</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a6b146bcf1d22f994ede30ad5f2e4c284" kindref="member">synapse_checks</ref><sp/>=<sp/>synapse_checks</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a2bae7561960e52ff822fb6ac459f0554" kindref="member">synapse_timeouts</ref><sp/>=<sp/>synapse_timeouts</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a11d3d3007095ab6a786686709487d4ea" kindref="member">prometheus_level</ref><sp/>=<sp/>prometheus_level</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref><sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a045773cfd3db614be3fb3e8af826c12a" kindref="member">_init_stats</ref>()</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1ac70c73c7cd11a94f93b539e6175dccdd" kindref="member">started</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1ad7bade056e01bb1841b1bb0d7ce2ae52" kindref="member">optimizer_step</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1ac70c73c7cd11a94f93b539e6175dccdd" kindref="member">started</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>--<sp/>Priority<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a74e47cfa3299310ed4a1d274be8db249" kindref="member">priority</ref><sp/>=<sp/>priority<sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a5612cc284d67a9a7e48ddd9ae1513f75" kindref="member">priority_threadpool</ref><sp/>=<sp/>priority_threadpool</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1aa1b4a6dae32c63b53eeb3c82411f9e61" kindref="member">_prometheus_uuid</ref><sp/>=<sp/>uuid.uuid1()</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__str__(self)<sp/>-&gt;<sp/>str:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Axon({},<sp/>{},<sp/>{},<sp/>{})&quot;</highlight><highlight class="normal">.format(<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a6cb60d31a29f1264dddd761eff914e9c" kindref="member">ip</ref>,<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a495ee94db558d43cd783653bd6a794f3" kindref="member">port</ref>,<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a67619a6c0020220785a6e1894daa3268" kindref="member">wallet</ref>.hotkey.ss58_address,<sp/></highlight><highlight class="stringliteral">&quot;started&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1ac70c73c7cd11a94f93b539e6175dccdd" kindref="member">started</ref><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;stopped&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__repr__(self)<sp/>-&gt;<sp/>str:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a7488fa71cd70daf3e8bec2d1a5b6a4de" kindref="member">__str__</ref>()</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a5a5e5a8ee71fd9038bf83f7a0ac5ddec" kindref="member">Forward</ref>(self,<sp/>request:<sp/>bittensor.proto.TensorMessage,<sp/>context:<sp/>grpc.ServicerContext)<sp/>-&gt;<sp/>bittensor.proto.TensorMessage:</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>The<sp/>function<sp/>called<sp/>by<sp/>remote<sp/>GRPC<sp/>Forward<sp/>requests<sp/>from<sp/>other<sp/>neurons.</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Forward<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>equivalent<sp/>to<sp/>a<sp/></highlight><highlight class="stringliteral">&apos;forward&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"><sp/>through<sp/>a<sp/>neural<sp/>network.</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>After<sp/>checking<sp/>request<sp/>validity,<sp/>this<sp/>function<sp/>passes<sp/>the<sp/>request<sp/>to<sp/>the<sp/>nucleus<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>processing.</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>See<sp/>:obj:`bittensor.proto.ReturnCode`<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>all<sp/>possible<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>codes.</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request<sp/>(:obj:`bittensor.proto`,<sp/>`required`):<sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tensor<sp/>request<sp/>proto.</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context<sp/>(:obj:`grpc.ServicerContext`,<sp/>`required`):<sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grpc<sp/>server<sp/>context.</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response<sp/>(bittensor.proto.TensorMessage):<sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proto<sp/>response<sp/>carring<sp/>the<sp/>nucleus<sp/>forward<sp/>output<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/>under<sp/>failure.</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_tensors,<sp/>code,<sp/>synapses<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a9e9ad24a48f3fd77dfedc6ea1c175485" kindref="member">_forward</ref>(<sp/>request<sp/>)</highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response<sp/>=<sp/>bittensor.proto.TensorMessage(</highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>version<sp/>=<sp/>bittensor.__version_as_int__,<sp/></highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hotkey<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a67619a6c0020220785a6e1894daa3268" kindref="member">wallet</ref>.hotkey.ss58_address,<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/>code,</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensors<sp/>=<sp/>forward_response_tensors<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>forward_response_tensors<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>[],</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requires_grad<sp/>=<sp/>request.requires_grad,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapses<sp/>=<sp/>synapses,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>response</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1acc5703beb6b5d5be24f7f7ecdd744f3e" kindref="member">Backward</ref>(<sp/>self,<sp/>request:<sp/>bittensor.proto.TensorMessage,<sp/>context:<sp/>grpc.ServicerContext<sp/>)<sp/>-&gt;<sp/>bittensor.proto.TensorMessage:</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>The<sp/>function<sp/>called<sp/>by<sp/>remote<sp/>GRPC<sp/>Backward<sp/>requests<sp/>from<sp/>other<sp/>neurons.</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Backward<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>equivalent<sp/>to<sp/>a<sp/></highlight><highlight class="stringliteral">&apos;backward&apos;</highlight><highlight class="normal"><sp/>gradient<sp/>descent<sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"><sp/>through<sp/>a<sp/>neural<sp/>network.</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>After<sp/>checking<sp/>request<sp/>validity,<sp/>passes<sp/>the<sp/>request<sp/>to<sp/>the<sp/>nucleus<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>processing.</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>See<sp/>:obj:`bittensor.proto.ReturnCode`<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>all<sp/>possible<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>codes.</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request<sp/>(:obj:`bittensor.proto`,<sp/>`required`):<sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tensor<sp/>request<sp/>proto.</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context<sp/>(:obj:`grpc.ServicerContext`,<sp/>`required`):<sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grpc<sp/>server<sp/>context.</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response<sp/>(:obj:`bittensor.proto.TensorMessage`):<sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proto<sp/>response<sp/>carring<sp/>the<sp/>nucleus<sp/>backward<sp/>output<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/>under<sp/>failure.</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_response_tensors,<sp/>code,<sp/>synapses<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a86ed1f0b91bc07dabcffad70287d885b" kindref="member">_backward</ref>(<sp/>request<sp/>)</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response<sp/>=<sp/>bittensor.proto.TensorMessage(</highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>version<sp/>=<sp/>bittensor.__version_as_int__,<sp/></highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hotkey<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a67619a6c0020220785a6e1894daa3268" kindref="member">wallet</ref>.hotkey.ss58_address,<sp/></highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/>code,</highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensors<sp/>=<sp/>backward_response_tensors,</highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requires_grad<sp/>=<sp/>request.requires_grad,</highlight></codeline>
<codeline lineno="180"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapses<sp/>=<sp/>synapses</highlight></codeline>
<codeline lineno="181"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="182"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>response</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a9e9ad24a48f3fd77dfedc6ea1c175485" kindref="member">_forward</ref>(self,<sp/>request):</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Performs<sp/>validity<sp/>checks<sp/>on<sp/>the<sp/>grpc<sp/>request<sp/>before<sp/>passing<sp/>the<sp/>tensors<sp/>to<sp/>the<sp/>forward<sp/>queue.</highlight></codeline>
<codeline lineno="186"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>the<sp/>outputs<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>synapses<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>the<sp/>backend<sp/>forward<sp/>call.</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request<sp/>(:obj:`bittensor.proto`,<sp/>`required`):<sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tensor<sp/>request<sp/>proto.</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response<sp/>(:obj:`bittensor.proto.Tensor,<sp/>`required`):<sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serialized<sp/>tensor<sp/>response<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>the<sp/>nucleus<sp/>call<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>(:obj:`bittensor.proto.ReturnCode`,<sp/>`required`):</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Code<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>the<sp/>call.<sp/>This<sp/>specifies<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>overall<sp/>function<sp/>call<sp/>was<sp/>a<sp/>success.<sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>separate<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>the<sp/>synapse<sp/>returns<sp/>codes<sp/>which<sp/>relate<sp/>to<sp/>the<sp/>individual<sp/>synapse<sp/>call.<sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapses<sp/>(:obj:`List[<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Synapse&apos;</highlight><highlight class="normal"><sp/>]`<sp/>of<sp/>shape<sp/>:obj:`(num_synapses)`,<sp/>`required`):</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Synapse<sp/>wire<sp/>protos<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>codes<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>forward<sp/>request.</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="200"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>First<sp/>deserialize<sp/>synapse<sp/>wire<sp/>protos<sp/>to<sp/>instance<sp/>objects<sp/>====<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapses:<sp/>List[</highlight><highlight class="stringliteral">&apos;bittensor.Synapse&apos;</highlight><highlight class="normal">]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>synapse_wire_proto<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>request.synapses:</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapses.append(<sp/>bittensor.synapse.deserialize(<sp/>synapse_wire_proto<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>Init<sp/>params<sp/>from<sp/>synapses<sp/>====<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>These<sp/>items<sp/>are<sp/>filled<sp/>through<sp/>the<sp/>call<sp/>and<sp/>the<sp/>function<sp/>returns<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>when<sp/>all<sp/>codes<sp/>are<sp/>non-success<sp/>or<sp/>the<sp/>function<sp/>finishes<sp/>completely.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_messages<sp/>=<sp/>[<sp/></highlight><highlight class="stringliteral">&quot;Success&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_codes<sp/>=<sp/>[<sp/>bittensor.proto.ReturnCode.Success<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_inputs<sp/>=<sp/>[<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_responses<sp/>=<sp/>[<sp/>synapse.empty()<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>synapse<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]<sp/></highlight><highlight class="comment">#<sp/>We<sp/>fill<sp/>nones<sp/>for<sp/>non<sp/>success.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_is_response<sp/>=<sp/>[<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_call_times<sp/>=<sp/>[<sp/>0<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_timeout<sp/>=<sp/>min(<sp/>[self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a2bae7561960e52ff822fb6ac459f0554" kindref="member">synapse_timeouts</ref>[s.synapse_type]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>s<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses]<sp/>+<sp/>[bittensor.__blocktime__]<sp/>)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_time<sp/>=<sp/>clock.time()</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>==================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>Function<sp/>which<sp/>returns<sp/>true<sp/>if<sp/>all<sp/>codes<sp/>are<sp/>non<sp/>success<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>==================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">check_if_should_return()<sp/>-&gt;<sp/>bool:</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>code<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapse_codes:</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>code<sp/>==<sp/>bittensor.proto.ReturnCode.Success:</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>==============================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>Function<sp/>which<sp/>prints<sp/>all<sp/>log<sp/>statements<sp/>per<sp/>synapse<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>==============================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">finalize_codes_stats_and_logs(<sp/>message<sp/>=<sp/>None):</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===<sp/>Prometheus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a11d3d3007095ab6a786686709487d4ea" kindref="member">prometheus_level</ref><sp/>!=<sp/>bittensor.prometheus.level.OFF.name:</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROM_total_forward.labels(<sp/>wallet<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a67619a6c0020220785a6e1894daa3268" kindref="member">wallet</ref>.hotkey.ss58_address,<sp/>identifier<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1aa1b4a6dae32c63b53eeb3c82411f9e61" kindref="member">_prometheus_uuid</ref><sp/>).inc()</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROM_forward_latency.labels(<sp/>wallet<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a67619a6c0020220785a6e1894daa3268" kindref="member">wallet</ref>.hotkey.ss58_address,<sp/>identifier<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1aa1b4a6dae32c63b53eeb3c82411f9e61" kindref="member">_prometheus_uuid</ref><sp/>).observe(<sp/>clock.time()<sp/>-<sp/>start_time<sp/>)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a11d3d3007095ab6a786686709487d4ea" kindref="member">prometheus_level</ref><sp/>==<sp/>bittensor.prometheus.level.DEBUG.name:</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROM_forward_hotkeys.labels(<sp/>wallet<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a67619a6c0020220785a6e1894daa3268" kindref="member">wallet</ref>.hotkey.ss58_address,<sp/>identifier<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1aa1b4a6dae32c63b53eeb3c82411f9e61" kindref="member">_prometheus_uuid</ref>,<sp/>hotkey<sp/>=<sp/>request.hotkey<sp/>).inc()</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROM_forward_bytes.labels(<sp/>wallet<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a67619a6c0020220785a6e1894daa3268" kindref="member">wallet</ref>.hotkey.ss58_address,<sp/>identifier<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1aa1b4a6dae32c63b53eeb3c82411f9e61" kindref="member">_prometheus_uuid</ref>,<sp/>hotkey<sp/>=<sp/>request.hotkey<sp/>).inc(<sp/>sys.getsizeof(<sp/>request<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>index,<sp/>synapse<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(<sp/>synapses<sp/>):</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===<sp/>Prometheus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a11d3d3007095ab6a786686709487d4ea" kindref="member">prometheus_level</ref><sp/>!=<sp/>bittensor.prometheus.level.OFF.name:</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROM_forward_synapses.labels(<sp/>wallet<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a67619a6c0020220785a6e1894daa3268" kindref="member">wallet</ref>.hotkey.ss58_address,<sp/>identifier<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1aa1b4a6dae32c63b53eeb3c82411f9e61" kindref="member">_prometheus_uuid</ref>,<sp/>synapse<sp/>=<sp/>str(synapse)<sp/>).inc()</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROM_forward_codes.labels(<sp/>wallet<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a67619a6c0020220785a6e1894daa3268" kindref="member">wallet</ref>.hotkey.ss58_address,<sp/>identifier<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1aa1b4a6dae32c63b53eeb3c82411f9e61" kindref="member">_prometheus_uuid</ref>,<sp/>code<sp/>=<sp/>str(synapse_codes[<sp/>index<sp/>])<sp/>).inc()</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===<sp/>Logging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request.synapses<sp/>[<sp/>index<sp/>].return_code<sp/>=<sp/>synapse_codes[<sp/>index<sp/>]<sp/></highlight><highlight class="comment">#<sp/>Set<sp/>synapse<sp/>wire<sp/>proto<sp/>codes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request.synapses<sp/>[<sp/>index<sp/>].message<sp/>=<sp/>synapse_messages[<sp/>index<sp/>]<sp/></highlight><highlight class="comment">#<sp/>Set<sp/>synapse<sp/>wire<sp/>proto<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor.logging.rpc_log<sp/>(<sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axon<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_response<sp/>=<sp/>synapse_is_response<sp/>[index],<sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>synapse_codes[<sp/>index<sp/>],<sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>call_time<sp/>=<sp/>synapse_call_times[<sp/>index<sp/>],<sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pubkey<sp/>=<sp/>request.hotkey,<sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs<sp/>=<sp/>deserialized_forward_tensors<sp/>[index].shape<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>deserialized_forward_tensors<sp/>[index]<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/>,<sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputs<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>synapse_responses[index]<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>list(<sp/>synapse_responses[index].shape<sp/>),<sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/>synapse_messages[<sp/>index<sp/>]<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>message<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>message,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse<sp/>=<sp/>synapse.synapse_type</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>======================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>Check<sp/>Empty<sp/>request<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>======================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(request.tensors)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>bittensor.proto.ReturnCode.EmptyRequest</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Forward<sp/>request<sp/>contains<sp/>{}<sp/>tensors,<sp/>expected<sp/>1<sp/>tensor<sp/>in<sp/>the<sp/>forward<sp/>call&quot;</highlight><highlight class="normal">.format(len(request.tensors))</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>call_time<sp/>=<sp/>clock.time()<sp/>-<sp/>start_time</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_codes<sp/>=<sp/>[code<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_call_times<sp/>=<sp/>[call_time<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_messages<sp/>=<sp/>[<sp/>message<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalize_codes_stats_and_logs()</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[],<sp/>code,<sp/>request.synapses</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>======================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>Check<sp/>request<sp/>length<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>======================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(<sp/>request.tensors<sp/>)<sp/>!=<sp/>len(<sp/>synapses<sp/>):</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Not<sp/>enough<sp/>responses<sp/>per<sp/>request.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>bittensor.proto.ReturnCode.RequestShapeException</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>call_time<sp/>=<sp/>clock.time()<sp/>-<sp/>start_time</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>length<sp/>doesn&apos;t<sp/>match<sp/>synape<sp/>length.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_codes<sp/>=<sp/>[code<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_call_times<sp/>=<sp/>[call_time<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_messages<sp/>=<sp/>[<sp/>message<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalize_codes_stats_and_logs()</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[],<sp/>bittensor.proto.ReturnCode.RequestShapeException,<sp/>request.synapses</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>Deserialize/Check<sp/>inputs<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deserialized_forward_tensors<sp/>=<sp/>[<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses]</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>index,<sp/>synapse<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(<sp/>synapses<sp/>):</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deserialized_forward_tensors<sp/>[index]<sp/>=<sp/>synapse.deserialize_forward_request_tensor<sp/>(<sp/>request.tensors<sp/>[index]<sp/>)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ValueError<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_codes<sp/>[index]<sp/>=<sp/>bittensor.proto.ReturnCode.RequestShapeException</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_call_times<sp/>[index]<sp/>=<sp/>clock.time()<sp/>-<sp/>start_time</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_messages<sp/>[index]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Input<sp/>shape<sp/>exception<sp/>with<sp/>error:{}&apos;</highlight><highlight class="normal">.format(str(e))</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_codes<sp/>[index]<sp/>=<sp/>bittensor.proto.ReturnCode.RequestDeserializationException</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_call_times<sp/>[index]<sp/>=<sp/>clock.time()<sp/>-<sp/>start_time</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_messages<sp/>[index]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Input<sp/>deserialization<sp/>exception<sp/>with<sp/>error:{}&apos;</highlight><highlight class="normal">.format(str(e))</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>if<sp/>the<sp/>call<sp/>can<sp/>stop<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>check_if_should_return():</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalize_codes_stats_and_logs()</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[],<sp/>synapse_codes[0]<sp/>,<sp/>request.synapses</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>Make<sp/>forward<sp/>calls.<sp/>=========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalize_codes_stats_and_logs()</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a74e47cfa3299310ed4a1d274be8db249" kindref="member">priority</ref><sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priority<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a74e47cfa3299310ed4a1d274be8db249" kindref="member">priority</ref>(<sp/>request.hotkey,<sp/>inputs_x<sp/>=<sp/>deserialized_forward_tensors,<sp/>request_type<sp/>=<sp/>bittensor.proto.RequestType.FORWARD<sp/>)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>future<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a5612cc284d67a9a7e48ddd9ae1513f75" kindref="member">priority_threadpool</ref>.submit<sp/>(</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a961a4c900afba0941aa37b0143629494" kindref="member">forward_callback</ref>,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs_x<sp/>=<sp/>deserialized_forward_tensors,<sp/></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapses<sp/>=<sp/>synapses,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priority<sp/>=<sp/>priority,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hotkey<sp/>=<sp/>request.hotkey</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_tensors,<sp/>forward_codes,<sp/>forward_messages<sp/>=<sp/>future.result(<sp/>timeout<sp/>=<sp/>synapse_timeout<sp/>-<sp/>(clock.time()<sp/>-<sp/>start_time)<sp/>)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_tensors,<sp/>forward_codes,<sp/>forward_messages<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a961a4c900afba0941aa37b0143629494" kindref="member">forward_callback</ref>(</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs_x<sp/>=<sp/>deserialized_forward_tensors,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapses<sp/>=<sp/>synapses,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hotkey=<sp/>request.hotkey</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_is_response<sp/>=<sp/>[<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>========================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>Fill<sp/>codes<sp/>from<sp/>forward<sp/>calls<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>========================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>index,<sp/>synapse<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(synapses):</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_codes<sp/>[<sp/>index<sp/>]<sp/>=<sp/>forward_codes<sp/>[<sp/>index<sp/>]</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_messages<sp/>[index]<sp/>=<sp/>forward_messages<sp/>[<sp/>index<sp/>]</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>========================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>Catch<sp/>forward<sp/>request<sp/>timeouts<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>========================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>concurrent.futures.TimeoutError:</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a74e47cfa3299310ed4a1d274be8db249" kindref="member">priority</ref><sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>future.cancel()</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>bittensor.proto.ReturnCode.Timeout</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>call_time<sp/>=<sp/>clock.time()<sp/>-<sp/>start_time</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>reached<sp/>timeout&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_codes<sp/>=<sp/>[code<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_call_times<sp/>=<sp/>[call_time<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_messages<sp/>=<sp/>[<sp/>message<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalize_codes_stats_and_logs()</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[],<sp/>bittensor.proto.ReturnCode.Timeout,<sp/>request.synapses</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>==================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>Catch<sp/>unknown<sp/>exceptions<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>==================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>bittensor.proto.ReturnCode.UnknownException</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>call_time<sp/>=<sp/>clock.time()<sp/>-<sp/>start_time</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_codes<sp/>=<sp/>[code<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_call_times<sp/>=<sp/>[call_time<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_messages<sp/>=<sp/>[<sp/></highlight><highlight class="stringliteral">&apos;Exception<sp/>on<sp/>Server&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalize_codes_stats_and_logs(message<sp/>=<sp/>str(e))</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[],<sp/>bittensor.proto.ReturnCode.UnknownException,<sp/>request.synapses</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>=================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>Encode/serialize<sp/>responses<sp/>and<sp/>synapses<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>==================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_synapses<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>index,<sp/>synapse<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(<sp/>synapses<sp/>):</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>synapse_codes[index]<sp/>==<sp/>bittensor.proto.ReturnCode.Success:</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_responses<sp/>[<sp/>index<sp/>]<sp/>=<sp/>synapse.serialize_forward_response_tensor(<sp/>deserialized_forward_tensors[<sp/>index<sp/>],<sp/>forward_response_tensors<sp/>[<sp/>index<sp/>]<sp/>)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_responses<sp/>[<sp/>index<sp/>]<sp/>=<sp/>synapse.empty()</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ValueError<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>str(e)<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;Empty<sp/>Response&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_codes<sp/>[<sp/>index<sp/>]=<sp/>bittensor.proto.ReturnCode.EmptyResponse</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_codes<sp/>[<sp/>index<sp/>]=<sp/>bittensor.proto.ReturnCode.ResponseShapeException</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_call_times<sp/>[<sp/>index<sp/>]<sp/>=<sp/>clock.time()<sp/>-<sp/>start_time</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_messages<sp/>[index]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Synapse<sp/>response<sp/>shape<sp/>exception<sp/>with<sp/>error:<sp/>{}&quot;</highlight><highlight class="normal">.format(<sp/>str(<sp/>e<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_responses<sp/>[<sp/>index<sp/>]<sp/>=<sp/>synapse.empty()</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_codes<sp/>[<sp/>index<sp/>]=<sp/>bittensor.proto.ReturnCode.ResponseSerializationException</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_call_times<sp/>[<sp/>index<sp/>]<sp/>=<sp/>clock.time()<sp/>-<sp/>start_time</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_messages<sp/>[index]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Synapse<sp/>response<sp/>serialization<sp/>exception<sp/>with<sp/>error:<sp/>{}&quot;</highlight><highlight class="normal">.format(<sp/>str(<sp/>e<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_responses<sp/>[<sp/>index<sp/>]<sp/>=<sp/>synapse.empty()</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_synapses.append(synapse.serialize_to_wire_proto(code<sp/>=<sp/>synapse_codes[index],<sp/>message=<sp/>synapse_messages[index]<sp/>))</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>if<sp/>the<sp/>call<sp/>can<sp/>stop<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>check_if_should_return():</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalize_codes_stats_and_logs()</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[],<sp/>synapse_codes[0],<sp/>request.synapses</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>=========================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>Set<sp/>return<sp/>times<sp/>for<sp/>successfull<sp/>forward<sp/>===========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>=========================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>index,<sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(<sp/>synapses<sp/>):</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>synapse_codes[index]<sp/>==<sp/>bittensor.proto.ReturnCode.Success:</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_call_times[index]<sp/>=<sp/>clock.time()<sp/>-<sp/>start_time</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalize_codes_stats_and_logs()</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>synapse_responses,<sp/>bittensor.proto.ReturnCode.Success,<sp/>response_synapses</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a86ed1f0b91bc07dabcffad70287d885b" kindref="member">_backward</ref>(self,<sp/>request):</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Performs<sp/>validity<sp/>checks<sp/>on<sp/>the<sp/>grpc<sp/>request<sp/>before<sp/>piping<sp/>the<sp/>request<sp/>to<sp/>the<sp/>backend<sp/>queue.</highlight></codeline>
<codeline lineno="421"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>the<sp/>outputs<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>synapses<sp/>(</highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>codes<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>messages<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>the<sp/>backward<sp/>call.)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request<sp/>(:obj:`bittensor.proto`,<sp/>`required`):<sp/></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tensor<sp/>request<sp/>proto.</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response:<sp/>(:obj:`bittensor.proto.Tensor,<sp/>`required`):<sp/></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serialized<sp/>tensor<sp/>gradient<sp/>responses.<sp/>This<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>always<sp/>an<sp/>empty<sp/>vector<sp/>until<sp/>gradients<sp/>are<sp/>allowed.</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>(:obj:`bittensor.proto.ReturnCode`,<sp/>`required`):</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Code<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>the<sp/>call.<sp/>This<sp/>specifies<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>overall<sp/>function<sp/>call<sp/>was<sp/>a<sp/>success.<sp/></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>separate<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>the<sp/>synapse<sp/>returns<sp/>codes<sp/>which<sp/>relate<sp/>to<sp/>the<sp/>individual<sp/>synapse<sp/>call.<sp/></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapses<sp/>(:obj:`List[<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Synapse&apos;</highlight><highlight class="normal"><sp/>]`<sp/>of<sp/>shape<sp/>:obj:`(num_synapses)`,<sp/>`required`):</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Synapse<sp/>wire<sp/>protos<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>codes<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>forward<sp/>request.</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="434"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="435"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>First<sp/>deserialize<sp/>synapse<sp/>wire<sp/>protos<sp/>to<sp/>instance<sp/>objects<sp/>====<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapses:<sp/>List[</highlight><highlight class="stringliteral">&apos;bittensor.Synapse&apos;</highlight><highlight class="normal">]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>synapse_wire_proto<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>request.synapses:</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapses.append(<sp/>bittensor.synapse.deserialize(<sp/>synapse_wire_proto<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>Init<sp/>params<sp/>from<sp/>synapses<sp/>====<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>These<sp/>items<sp/>are<sp/>filled<sp/>through<sp/>the<sp/>call<sp/>and<sp/>the<sp/>function<sp/>returns<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>when<sp/>all<sp/>codes<sp/>are<sp/>non-success<sp/>or<sp/>the<sp/>function<sp/>finishes<sp/>completely.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_messages<sp/>=<sp/>[<sp/></highlight><highlight class="stringliteral">&quot;Success&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_codes<sp/>=<sp/>[<sp/>bittensor.proto.ReturnCode.Success<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deserialized_forward_tensors<sp/>=<sp/>[<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deserialized_forward_gradients<sp/>=<sp/>[<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_is_response<sp/>=<sp/>[<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_call_times<sp/>=<sp/>[<sp/>0<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_time<sp/>=<sp/>clock.time()</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>==================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>Function<sp/>which<sp/>returns<sp/>true<sp/>if<sp/>all<sp/>codes<sp/>are<sp/>non<sp/>success<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>==================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">check_if_should_return()<sp/>-&gt;<sp/>bool:</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>code<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapse_codes:</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>code<sp/>==<sp/>bittensor.proto.ReturnCode.Success:</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>==============================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>Function<sp/>which<sp/>prints<sp/>all<sp/>log<sp/>statements<sp/>per<sp/>synapse<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>==============================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">finalize_codes_stats_and_logs():</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===<sp/>Prometheus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a11d3d3007095ab6a786686709487d4ea" kindref="member">prometheus_level</ref><sp/>!=<sp/>bittensor.prometheus.level.OFF.name:</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROM_total_backward.labels(<sp/>wallet<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a67619a6c0020220785a6e1894daa3268" kindref="member">wallet</ref>.hotkey.ss58_address,<sp/>identifier<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1aa1b4a6dae32c63b53eeb3c82411f9e61" kindref="member">_prometheus_uuid</ref><sp/>).inc()</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROM_backward_latency.labels(<sp/>wallet<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a67619a6c0020220785a6e1894daa3268" kindref="member">wallet</ref>.hotkey.ss58_address,<sp/>identifier<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1aa1b4a6dae32c63b53eeb3c82411f9e61" kindref="member">_prometheus_uuid</ref><sp/>).observe(<sp/>clock.time()<sp/>-<sp/>start_time<sp/>)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a11d3d3007095ab6a786686709487d4ea" kindref="member">prometheus_level</ref><sp/>==<sp/>bittensor.prometheus.level.DEBUG.name:</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROM_backward_hotkeys.labels(<sp/>wallet<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a67619a6c0020220785a6e1894daa3268" kindref="member">wallet</ref>.hotkey.ss58_address,<sp/>identifier<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1aa1b4a6dae32c63b53eeb3c82411f9e61" kindref="member">_prometheus_uuid</ref>,<sp/>hotkey<sp/>=<sp/>request.hotkey<sp/>).inc()</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROM_backward_bytes.labels(<sp/>wallet<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a67619a6c0020220785a6e1894daa3268" kindref="member">wallet</ref>.hotkey.ss58_address,<sp/>identifier<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1aa1b4a6dae32c63b53eeb3c82411f9e61" kindref="member">_prometheus_uuid</ref>,<sp/>hotkey<sp/>=<sp/>request.hotkey<sp/>).inc(<sp/>sys.getsizeof(<sp/>request<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>index,<sp/>synapse<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(<sp/>synapses<sp/>):</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===<sp/>Prometheus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a11d3d3007095ab6a786686709487d4ea" kindref="member">prometheus_level</ref><sp/>!=<sp/>bittensor.prometheus.level.OFF.name:</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROM_backward_synapses.labels(<sp/>wallet<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a67619a6c0020220785a6e1894daa3268" kindref="member">wallet</ref>.hotkey.ss58_address,<sp/>identifier<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1aa1b4a6dae32c63b53eeb3c82411f9e61" kindref="member">_prometheus_uuid</ref>,<sp/>synapse<sp/>=<sp/>str(synapse)<sp/>).inc()</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROM_backward_codes.labels(<sp/>wallet<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a67619a6c0020220785a6e1894daa3268" kindref="member">wallet</ref>.hotkey.ss58_address,<sp/>identifier<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1aa1b4a6dae32c63b53eeb3c82411f9e61" kindref="member">_prometheus_uuid</ref>,<sp/>code<sp/>=<sp/>str(synapse_codes[<sp/>index<sp/>])<sp/>).inc()</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===<sp/>Logging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request.synapses<sp/>[<sp/>index<sp/>].return_code<sp/>=<sp/>synapse_codes[<sp/>index<sp/>]<sp/></highlight><highlight class="comment">#<sp/>Set<sp/>synapse<sp/>wire<sp/>proto<sp/>codes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request.synapses<sp/>[<sp/>index<sp/>].message<sp/>=<sp/>synapse_messages[<sp/>index<sp/>]<sp/></highlight><highlight class="comment">#<sp/>Set<sp/>synapse<sp/>wire<sp/>proto<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor.logging.rpc_log<sp/>(<sp/></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axon<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_response<sp/>=<sp/>synapse_is_response<sp/>[index],<sp/></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>synapse_codes[<sp/>index<sp/>],<sp/></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>call_time<sp/>=<sp/>synapse_call_times[<sp/>index<sp/>],<sp/></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pubkey<sp/>=<sp/>request.hotkey,<sp/></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>deserialized_forward_gradients[index]<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>deserialized_forward_gradients[index].shape<sp/><sp/>,<sp/></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputs<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">#<sp/>we<sp/>never<sp/>return<sp/>from<sp/>backward.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/>synapse_messages[<sp/>index<sp/>],</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse<sp/>=<sp/>synapse.synapse_type</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>======================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>Check<sp/>Empty<sp/>request<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>======================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(request.tensors)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>bittensor.proto.ReturnCode.EmptyRequest</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Empty<sp/>Request&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>call_time<sp/>=<sp/>clock.time()<sp/>-<sp/>start_time</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_codes<sp/>=<sp/>[code<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_call_times<sp/>=<sp/>[call_time<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_messages<sp/>=<sp/>[<sp/>message<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalize_codes_stats_and_logs()</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[],<sp/>code,<sp/>request.synapses</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>======================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>Check<sp/>Invalid<sp/>request<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>======================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(request.tensors)<sp/>&lt;<sp/>2:</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>bittensor.proto.ReturnCode.InvalidRequest</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Backward<sp/>request<sp/>contains<sp/>{}<sp/>tensors,<sp/>expected<sp/>atleast<sp/>2<sp/>tensor<sp/>in<sp/>the<sp/>backward<sp/>call&quot;</highlight><highlight class="normal">.format(len(request.tensors))</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>call_time<sp/>=<sp/>clock.time()<sp/>-<sp/>start_time</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_codes<sp/>=<sp/>[code<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_call_times<sp/>=<sp/>[call_time<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_messages<sp/>=<sp/>[<sp/>message<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalize_codes_stats_and_logs()</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[],<sp/>code,<sp/>request.synapses</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>======================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>Check<sp/>request<sp/>length<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>======================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(<sp/>request.tensors<sp/>)<sp/>!=<sp/>2<sp/>*<sp/>len(<sp/>synapses<sp/>):<sp/></highlight><highlight class="comment">#<sp/>2<sp/>per<sp/>synapse<sp/>(1<sp/>input<sp/>+<sp/>1<sp/>grad).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Not<sp/>enough<sp/>responses<sp/>per<sp/>request.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>bittensor.proto.ReturnCode.RequestShapeException</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>call_time<sp/>=<sp/>clock.time()<sp/>-<sp/>start_time</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>length<sp/>doesn&apos;t<sp/>match<sp/>synape<sp/>length.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_codes<sp/>=<sp/>[code<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_call_times<sp/>=<sp/>[call_time<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_messages<sp/>=<sp/>[<sp/>message<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalize_codes_stats_and_logs()</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[],<sp/>code,<sp/>request.synapses</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>Deserialize/Decode<sp/>inputs<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>index,<sp/>synapse<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(<sp/>synapses<sp/>):</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deserialized_forward_tensors<sp/>[index]<sp/>=<sp/>synapse.deserialize_forward_request_tensor<sp/>(<sp/>request.tensors<sp/>[index]<sp/>)</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deserialized_forward_gradients<sp/>[index]<sp/>=<sp/>synapse.deserialize_backward_request_gradient<sp/>(<sp/>deserialized_forward_tensors<sp/>[index],<sp/><sp/>request.tensors<sp/>[<sp/>len(<sp/>synapses<sp/>)<sp/>+<sp/>index<sp/>]<sp/>)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ValueError<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_codes<sp/>[index]<sp/>=<sp/>bittensor.proto.ReturnCode.RequestShapeException</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_call_times<sp/>[index]<sp/>=<sp/>clock.time()<sp/>-<sp/>start_time</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_messages<sp/>[index]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Input<sp/>shape<sp/>exception<sp/>with<sp/>error:{}&apos;</highlight><highlight class="normal">.format(str(e))</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_codes<sp/>[index]<sp/>=<sp/>bittensor.proto.ReturnCode.RequestDeserializationException</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_call_times<sp/>[index]<sp/>=<sp/>clock.time()<sp/>-<sp/>start_time</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_messages<sp/>[index]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Input<sp/>deserialization<sp/>exception<sp/>with<sp/>error:{}&apos;</highlight><highlight class="normal">.format(str(e))</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>if<sp/>the<sp/>call<sp/>can<sp/>stop<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>check_if_should_return():</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalize_codes_stats_and_logs()</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[],<sp/>synapse_codes[0],<sp/>request.synapses</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>Make<sp/>backward<sp/>calls.<sp/>=========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>===================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalize_codes_stats_and_logs()</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_is_response<sp/>=<sp/>[<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a74e47cfa3299310ed4a1d274be8db249" kindref="member">priority</ref><sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>No<sp/>wait<sp/>on<sp/>backward<sp/>calls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priority<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a74e47cfa3299310ed4a1d274be8db249" kindref="member">priority</ref>(<sp/>request.hotkey,<sp/>inputs_x<sp/>=<sp/>deserialized_forward_tensors,<sp/>request_type<sp/>=<sp/>bittensor.proto.RequestType.BACKWARD<sp/>)</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a5612cc284d67a9a7e48ddd9ae1513f75" kindref="member">priority_threadpool</ref>.submit(</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a2c96cc8208446ca2a3564701bf41e67b" kindref="member">backward_callback</ref>,<sp/></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs_x<sp/>=<sp/>deserialized_forward_tensors,<sp/></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grads_dy<sp/>=<sp/>deserialized_forward_gradients,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapses<sp/>=<sp/>synapses,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priority<sp/>=<sp/>priority</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Calling<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_response_tensors,<sp/>backward_codes,<sp/>backward_messages<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a2c96cc8208446ca2a3564701bf41e67b" kindref="member">backward_callback</ref><sp/>(<sp/>deserialized_forward_tensors,<sp/>deserialized_forward_gradients,<sp/>synapses<sp/>=<sp/>synapses<sp/>)</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>========================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>Fill<sp/>codes<sp/>from<sp/>forward<sp/>calls<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>========================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>index,<sp/>synapse<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(synapses):</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_codes<sp/>[<sp/>index<sp/>]<sp/>=<sp/>backward_codes<sp/>[<sp/>index<sp/>]</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_messages<sp/>[index]<sp/>=<sp/>backward_messages<sp/>[<sp/>index<sp/>]</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>========================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>Catch<sp/>backward<sp/>request<sp/>timeouts<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>========================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>concurrent.futures.TimeoutError:</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>bittensor.proto.ReturnCode.Timeout</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>call_time<sp/>=<sp/>clock.time()<sp/>-<sp/>start_time</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>reached<sp/>timeout&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_codes<sp/>=<sp/>[code<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_call_times<sp/>=<sp/>[call_time<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_messages<sp/>=<sp/>[<sp/>message<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalize_codes_stats_and_logs()</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[],<sp/>bittensor.proto.ReturnCode.Timeout,<sp/>request.synapses</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>==================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>Catch<sp/>unknown<sp/>exceptions<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>==================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>bittensor.proto.ReturnCode.UnknownException</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>call_time<sp/>=<sp/>clock.time()<sp/>-<sp/>start_time</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/>str<sp/>(<sp/>e<sp/>)</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_codes<sp/>=<sp/>[code<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_call_times<sp/>=<sp/>[call_time<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_messages<sp/>=<sp/>[<sp/>message<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>synapses<sp/>]</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalize_codes_stats_and_logs()</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[],<sp/>bittensor.proto.ReturnCode.UnknownException,<sp/>request.synapses</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>if<sp/>the<sp/>call<sp/>can<sp/>stop<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>check_if_should_return():</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalize_codes_stats_and_logs()</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[],<sp/>synapse_codes[0],<sp/>request.synapses</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>==============================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>====<sp/>Finalize<sp/>call<sp/>times<sp/>=====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>==============================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>index,<sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(<sp/>synapses<sp/>):</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>synapse_codes[index]<sp/>==<sp/>bittensor.proto.ReturnCode.Success:</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_call_times[index]<sp/>=<sp/>clock.time()<sp/>-<sp/>start_time</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalize_codes_stats_and_logs()</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[],<sp/>bittensor.proto.ReturnCode.Success,<sp/>request.synapses</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1aeb7638fed309a59fa8e464412f53ca2d" kindref="member">default_forward_callback</ref>(self,<sp/>inputs_x:torch.FloatTensor,<sp/>synapses=[],<sp/>hotkey<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="632"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>default<sp/>forward<sp/>callback<sp/>when<sp/>no<sp/>callback<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>attached:<sp/>Is<sp/>used<sp/>to<sp/>call<sp/>specific<sp/>synapse<sp/>functions</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs_x<sp/>(:obj:`torch.FloatTensor`,<sp/>`required`):<sp/></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>inputs<sp/>that<sp/>will<sp/>be<sp/>passed<sp/>to<sp/>the<sp/>synapse<sp/>functions</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapses<sp/>(:obj:<sp/>list<sp/>of<sp/>bittensor.proto.SynapseArgs,<sp/></highlight><highlight class="stringliteral">&apos;Optional&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>proto<sp/>message<sp/>that<sp/>contains<sp/>additional<sp/>args<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>individual<sp/>synapse<sp/>functions</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hotkey<sp/>(:obj:<sp/>str<sp/>of<sp/>the<sp/>hotkey,<sp/></highlight><highlight class="stringliteral">&apos;Optional&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>hotkey<sp/>of<sp/>the<sp/>validator<sp/>who<sp/>sent<sp/>the<sp/>request</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_tensors:<sp/>(:obj:<sp/>list<sp/>of<sp/>bittensor.proto.Tensor,<sp/>`required`):<sp/></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serialized<sp/>tensor<sp/>response<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>the<sp/>nucleus<sp/>call<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_codes:<sp/>(:obj:<sp/>list<sp/>of<sp/>bittensor.proto.ReturnCode,<sp/>`required`)</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>code<sp/>associated<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>forward<sp/>call<sp/>i.e.<sp/>Success<sp/>of<sp/>Timeout.</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_messages:<sp/>(:obj:<sp/>list<sp/>of<sp/>strings,<sp/>`required`)</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>message<sp/>associated<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>synapse<sp/>call</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="652"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>---<sp/>initialize<sp/>response<sp/>variables<sp/>---<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_tensors<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_codes<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_messages<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_output<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>---<sp/>calling<sp/>attached<sp/>synapses<sp/>---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>index,<sp/>synapse<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(synapses):</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_check<sp/>=<sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a6b146bcf1d22f994ede30ad5f2e4c284" kindref="member">synapse_checks</ref>(synapse,<sp/>hotkey)</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>synapse.synapse_type<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a8cbc3cca071799ea2329a109898a41cc" kindref="member">synapse_callbacks</ref><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a8cbc3cca071799ea2329a109898a41cc" kindref="member">synapse_callbacks</ref>[synapse.synapse_type]<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>synapse_check:</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message,<sp/>model_output,<sp/>response_tensor<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a8cbc3cca071799ea2329a109898a41cc" kindref="member">synapse_callbacks</ref>[synapse.synapse_type](inputs_x[index],<sp/>synapse,<sp/>model_output)</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_tensors.append(response_tensor)</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_codes.append(bittensor.proto.ReturnCode.Success)</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_messages.append(</highlight><highlight class="stringliteral">&apos;Success&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>message<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>message)</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>synapse_check:</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_tensors.append(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_codes.append(bittensor.proto.ReturnCode.UnknownException)</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_messages.append(</highlight><highlight class="stringliteral">&apos;Synapse<sp/>Check<sp/>Failed&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_tensors.append(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_codes.append(bittensor.proto.ReturnCode.NotImplemented)</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_messages.append(</highlight><highlight class="stringliteral">&apos;Not<sp/>Implemented&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:<sp/></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>---<sp/>Exception<sp/>Hit<sp/>in<sp/>Synapse<sp/>---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_tensors.append(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_codes.append(bittensor.proto.ReturnCode.UnknownException)</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_messages.append(str(e))</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>response_tensors,<sp/>response_codes,<sp/>response_messages</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1af83a7aa148ab6b2cb77ad3adcdba75c3" kindref="member">default_backward_callback</ref>(self,<sp/>inputs_x:torch.FloatTensor,<sp/>grads_dy:torch.FloatTensor,<sp/>synapses=[]<sp/>):</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="689"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>default<sp/>backward<sp/>callback<sp/>when<sp/>no<sp/>callback<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>attached:<sp/>Is<sp/>used<sp/>to<sp/>call<sp/>specific<sp/>synapse<sp/>functions</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs_x<sp/>(:obj:`torch.FloatTensor`,<sp/>`required`):<sp/></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>inputs<sp/>that<sp/>will<sp/>be<sp/>passed<sp/>to<sp/>the<sp/>synapse<sp/>functions</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grads_dy<sp/>(:obj:`torch.FloatTensor`,<sp/>`required`):</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>gradients<sp/>that<sp/>will<sp/>be<sp/>passed<sp/>to<sp/>the<sp/>synapse<sp/>functions</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapses<sp/>(:obj:<sp/>list<sp/>of<sp/>bittensor.proto.SynapseArgs,<sp/></highlight><highlight class="stringliteral">&apos;Optional&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>proto<sp/>message<sp/>that<sp/>contains<sp/>additional<sp/>args<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>individual<sp/>synapse<sp/>functions</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_tensors:<sp/>(:obj:<sp/>list<sp/>of<sp/>bittensor.proto.Tensor,<sp/>`required`):<sp/></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serialized<sp/>tensor<sp/>response<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>the<sp/>nucleus<sp/>call<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_codes:<sp/>(:obj:<sp/>list<sp/>of<sp/>bittensor.proto.ReturnCode,<sp/>`required`)</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>code<sp/>associated<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>forward<sp/>call<sp/>i.e.<sp/>Success<sp/>of<sp/>Timeout.</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_messages:<sp/>(:obj:<sp/>list<sp/>of<sp/>strings,<sp/>`required`)</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>message<sp/>associated<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>synapse<sp/>call</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="707"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>---<sp/>initialize<sp/>response<sp/>variables<sp/>---<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_tensors<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_codes<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_messages<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>---<sp/>calling<sp/>attached<sp/>synapses<sp/>---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>torch.enable_grad()<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>torch.autograd.set_detect_anomaly(</highlight><highlight class="keyword">True</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>index,<sp/>synapse<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(synapses):</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>synapse.synapse_type<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a8cbc3cca071799ea2329a109898a41cc" kindref="member">synapse_callbacks</ref><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a8cbc3cca071799ea2329a109898a41cc" kindref="member">synapse_callbacks</ref>[synapse.synapse_type]<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message,<sp/>model_output,<sp/>response_tensor<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a8cbc3cca071799ea2329a109898a41cc" kindref="member">synapse_callbacks</ref>[synapse.synapse_type](inputs_x[index],<sp/>synapse)</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch.autograd.backward<sp/>(</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensors<sp/>=<sp/>[<sp/>response_tensor<sp/>],</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad_tensors<sp/>=<sp/>[<sp/>grads_dy[index]<sp/>],</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retain_graph=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_tensors.append(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_codes.append(bittensor.proto.ReturnCode.Success)</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_messages.append(</highlight><highlight class="stringliteral">&apos;Success&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_tensors.append(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_codes.append(bittensor.proto.ReturnCode.NotImplemented)</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_messages.append(</highlight><highlight class="stringliteral">&apos;Not<sp/>Implemented&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>---<sp/>Exception<sp/>Hit<sp/>in<sp/>Synapse<sp/>---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_tensors.append(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_codes.append(bittensor.proto.ReturnCode.UnknownException)</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_messages.append(str(e))</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1ad7bade056e01bb1841b1bb0d7ce2ae52" kindref="member">optimizer_step</ref><sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1ad7bade056e01bb1841b1bb0d7ce2ae52" kindref="member">optimizer_step</ref>()</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>response_tensors,<sp/>response_codes,<sp/>response_messages</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a0db9616b2dc78f8f9bfbede01ca9a76b" kindref="member">attach_forward_callback</ref>(self,<sp/>forward_callback:<sp/>Callable[<sp/>[str,<sp/>torch.Tensor,<sp/>int],<sp/>torch.Tensor<sp/>]):</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Assigns<sp/>the<sp/>forward_callback.</highlight></codeline>
<codeline lineno="743"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="744"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="745"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_callback<sp/>(:callabl:`Callable[<sp/>[str,<sp/>torch.Tensor,<sp/>int],<sp/>torch.Tensor<sp/>`,<sp/>`required`):<sp/></highlight></codeline>
<codeline lineno="746"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Forward<sp/>function<sp/>called<sp/>on<sp/>recieving<sp/>a<sp/>forward<sp/>request.</highlight></codeline>
<codeline lineno="747"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="748"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor.axon.check_forward_callback(forward_callback)</highlight></codeline>
<codeline lineno="749"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a961a4c900afba0941aa37b0143629494" kindref="member">forward_callback</ref><sp/>=<sp/>forward_callback</highlight></codeline>
<codeline lineno="750"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="751"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a6d1de6240ebbaf7fffc0d109f67929f0" kindref="member">attach_synapse_callback</ref>(self,<sp/>synapse_callback:<sp/>Callable[[str,<sp/>torch.Tensor,<sp/>int],torch.Tensor],<sp/>synapse_type<sp/>):</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Assigns<sp/>the<sp/>callback<sp/>to<sp/>a<sp/>specific<sp/>synapse.</highlight></codeline>
<codeline lineno="753"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="754"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="755"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_callback<sp/>(:callabl:`Callable[<sp/>[str,<sp/>torch.Tensor,<sp/>int],<sp/>torch.Tensor<sp/>`,<sp/>`required`):<sp/></highlight></codeline>
<codeline lineno="756"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function<sp/>called<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a<sp/>specific<sp/>synapse.</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="758"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a8cbc3cca071799ea2329a109898a41cc" kindref="member">synapse_callbacks</ref>[synapse_type]<sp/>=<sp/>synapse_callback</highlight></codeline>
<codeline lineno="759"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="760"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a97de5de0089fe20331aaf0fb3f100475" kindref="member">attach_backward_callback</ref>(self,<sp/>backward_callback:<sp/>Callable[<sp/>[str,<sp/>torch.Tensor,<sp/>torch.Tensor,<sp/>int],<sp/>torch.Tensor<sp/>]<sp/>):</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Assigns<sp/>the<sp/>backward_callback<sp/>call<sp/>to<sp/>this<sp/>neuron.</highlight></codeline>
<codeline lineno="762"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="763"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="764"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_callback<sp/>(:callabl:`Callable[<sp/>[torch.Tensor,<sp/>torch.Tensor],<sp/>torch.Tensor<sp/>`,<sp/>`required`):<sp/></highlight></codeline>
<codeline lineno="765"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Backward<sp/>callback<sp/>called<sp/>on<sp/>recieving<sp/>a<sp/>backward<sp/>request.</highlight></codeline>
<codeline lineno="766"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="767"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor.axon.check_backward_callback(backward_callback)</highlight></codeline>
<codeline lineno="768"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a2c96cc8208446ca2a3564701bf41e67b" kindref="member">backward_callback</ref><sp/>=<sp/>backward_callback</highlight></codeline>
<codeline lineno="769"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="770"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a0cbb67c54b3c01198a71c91b6bd37709" kindref="member">__del__</ref>(self):</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Called<sp/>when<sp/>this<sp/>axon<sp/>is<sp/>deleted,<sp/>ensures<sp/>background<sp/>threads<sp/>shut<sp/>down<sp/>properly.</highlight></codeline>
<codeline lineno="772"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="773"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a26628e7f324a051d11992b448fb41697" kindref="member">stop</ref>()</highlight></codeline>
<codeline lineno="774"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="775"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">serve(<sp/></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self,<sp/></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_upnpc:<sp/>bool<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subtensor:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.Subtensor&apos;</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>network:<sp/>str<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chain_endpoint:<sp/>str<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prompt:<sp/>bool<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>-&gt;<sp/></highlight><highlight class="stringliteral">&apos;Axon&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Subscribes<sp/>this<sp/>Axon<sp/>servicing<sp/>endpoint<sp/>to<sp/>the<sp/>passed<sp/>network<sp/>using<sp/>it&apos;s<sp/>wallet.</highlight></codeline>
<codeline lineno="784"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="785"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_upnpc<sp/>(:type:bool,<sp/>`optional`):<sp/></highlight></codeline>
<codeline lineno="786"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>true,<sp/>serves<sp/>the<sp/>axon<sp/>attempts<sp/>port<sp/>forward<sp/>through<sp/>your<sp/>router<sp/>before<sp/></highlight></codeline>
<codeline lineno="787"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subscribing.</highlight></codeline>
<codeline lineno="788"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subtensor<sp/>(:obj:`<ref refid="classbittensor_1_1__subtensor_1_1subtensor__impl_1_1_subtensor" kindref="compound">bittensor.Subtensor</ref>`,<sp/>`optional`):<sp/></highlight></codeline>
<codeline lineno="789"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Chain<sp/>connection<sp/>through<sp/>which<sp/>to<sp/>serve.</highlight></codeline>
<codeline lineno="790"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>network<sp/>(default=&apos;local&apos;</highlight><highlight class="normal">,<sp/>type=str)</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>subtensor<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>set,<sp/>uses<sp/>this<sp/>network<sp/>flag<sp/>to<sp/>create<sp/>the<sp/>subtensor<sp/>connection.</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chain_endpoint<sp/>(default=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>type=str)</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Overrides<sp/>the<sp/>network<sp/>argument<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>set.</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prompt<sp/>(bool):</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>true,<sp/>the<sp/>call<sp/>waits<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>confirmation<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>the<sp/>user<sp/>before<sp/>proceeding.</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="798"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>subtensor<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:<sp/>subtensor<sp/>=<sp/><ref refid="classbittensor_1_1__subtensor_1_1subtensor" kindref="compound">bittensor.subtensor</ref>(<sp/>network<sp/>=<sp/>network,<sp/>chain_endpoint<sp/>=<sp/>chain_endpoint)<sp/></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serv_success<sp/>=<sp/>subtensor.serve_axon(<sp/>axon<sp/>=<sp/>self,<sp/>use_upnpc<sp/>=<sp/>use_upnpc,<sp/>prompt<sp/>=<sp/>prompt<sp/>)</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>serv_success:</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(</highlight><highlight class="stringliteral">&apos;Failed<sp/>to<sp/>serve<sp/>neuron.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a14cd3634239dfa4ff55545ad06e58d94" kindref="member">start</ref>(self)<sp/>-&gt;<sp/>&apos;Axon&apos;:</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Starts<sp/>the<sp/>standalone<sp/>axon<sp/>GRPC<sp/>server<sp/>thread.</highlight></codeline>
<codeline lineno="806"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="807"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a920ed8e7fc5a71ee32f1a0ca5eadb389" kindref="member">server</ref><sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a920ed8e7fc5a71ee32f1a0ca5eadb389" kindref="member">server</ref>.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a26628e7f324a051d11992b448fb41697" kindref="member">stop</ref>(<sp/>grace<sp/>=<sp/>1<sp/>)<sp/><sp/></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.success(</highlight><highlight class="stringliteral">&quot;Axon<sp/>Stopped:&quot;</highlight><highlight class="normal">.ljust(20)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;blue&gt;{}&lt;/blue&gt;&quot;</highlight><highlight class="normal">,<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a6cb60d31a29f1264dddd761eff914e9c" kindref="member">ip</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a495ee94db558d43cd783653bd6a794f3" kindref="member">port</ref>))</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a920ed8e7fc5a71ee32f1a0ca5eadb389" kindref="member">server</ref>.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a14cd3634239dfa4ff55545ad06e58d94" kindref="member">start</ref>()</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.success(</highlight><highlight class="stringliteral">&quot;Axon<sp/>Started:&quot;</highlight><highlight class="normal">.ljust(20)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;blue&gt;{}&lt;/blue&gt;&quot;</highlight><highlight class="normal">,<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a6cb60d31a29f1264dddd761eff914e9c" kindref="member">ip</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a495ee94db558d43cd783653bd6a794f3" kindref="member">port</ref>))</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1ac70c73c7cd11a94f93b539e6175dccdd" kindref="member">started</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Switch<sp/>prometheus<sp/>ENUM.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a11d3d3007095ab6a786686709487d4ea" kindref="member">prometheus_level</ref><sp/>!=<sp/>bittensor.prometheus.level.OFF.name:</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROM_axon_is_started.state(</highlight><highlight class="stringliteral">&apos;started&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a26628e7f324a051d11992b448fb41697" kindref="member">stop</ref>(self)<sp/>-&gt;<sp/>&apos;Axon&apos;:</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Stop<sp/>the<sp/>axon<sp/>grpc<sp/>server.</highlight></codeline>
<codeline lineno="823"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="824"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a920ed8e7fc5a71ee32f1a0ca5eadb389" kindref="member">server</ref><sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a920ed8e7fc5a71ee32f1a0ca5eadb389" kindref="member">server</ref>.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a26628e7f324a051d11992b448fb41697" kindref="member">stop</ref>(<sp/>grace<sp/>=<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.success(</highlight><highlight class="stringliteral">&quot;Axon<sp/>Stopped:&quot;</highlight><highlight class="normal">.ljust(20)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&lt;blue&gt;{}&lt;/blue&gt;&quot;</highlight><highlight class="normal">,<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a6cb60d31a29f1264dddd761eff914e9c" kindref="member">ip</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a495ee94db558d43cd783653bd6a794f3" kindref="member">port</ref>))</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1ac70c73c7cd11a94f93b539e6175dccdd" kindref="member">started</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Switch<sp/>prometheus<sp/>ENUM.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a11d3d3007095ab6a786686709487d4ea" kindref="member">prometheus_level</ref><sp/>!=<sp/>bittensor.prometheus.level.OFF.name:</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROM_axon_is_started.state(</highlight><highlight class="stringliteral">&apos;stopped&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1af18aff445eeb45edd5ecfc07a2a8d486" kindref="member">check</ref>(self):</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Checks<sp/>axon&apos;s<sp/>forward<sp/>and<sp/>backward<sp/>callbacks<sp/></highlight></codeline>
<codeline lineno="837"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="838"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pubkey<sp/>=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a67619a6c0020220785a6e1894daa3268" kindref="member">wallet</ref>.hotkey.ss58_address</highlight></codeline>
<codeline lineno="839"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a961a4c900afba0941aa37b0143629494" kindref="member">forward_callback</ref><sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor.axon.check_forward_callback(self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a961a4c900afba0941aa37b0143629494" kindref="member">forward_callback</ref>,index,pubkey)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a2c96cc8208446ca2a3564701bf41e67b" kindref="member">backward_callback</ref><sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor.axon.check_backward_callback(backward,index,pubkey)</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_init_stats(self):</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SimpleNamespace(</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Queries<sp/>per<sp/>second.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qps<sp/>=<sp/>stat_utils.EventsPerSecondRollingAverage(<sp/>0,<sp/>0.01<sp/>),</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Total<sp/>requests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_requests<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Total<sp/>bytes<sp/>recieved<sp/>per<sp/>second.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_in_bytes<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Total<sp/>bytes<sp/>responded<sp/>per<sp/>second.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_out_bytes<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Bytes<sp/>recieved<sp/>per<sp/>second.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avg_in_bytes_per_second<sp/>=<sp/>stat_utils.AmountPerSecondRollingAverage(<sp/>0,<sp/>0.01<sp/>),</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Bytes<sp/>responded<sp/>per<sp/>second.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avg_out_bytes_per_second<sp/>=<sp/>stat_utils.AmountPerSecondRollingAverage(<sp/>0,<sp/>0.01<sp/>),</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Requests<sp/>per<sp/>pubkey.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requests_per_pubkey<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Success<sp/>per<sp/>pubkey.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>successes_per_pubkey<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Query<sp/>time<sp/>per<sp/>pubkey.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>query_times_per_pubkey<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Queries<sp/>per<sp/>second<sp/>per<sp/>pubkey.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qps_per_pubkey<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Codes<sp/>recieved<sp/>per<sp/>pubkey.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>codes_per_pubkey<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Bytes<sp/>recieved<sp/>per<sp/>pubkey.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avg_in_bytes_per_pubkey<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Bytes<sp/>sent<sp/>per<sp/>pubkey.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avg_out_bytes_per_pubkey<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#TODO:<sp/>Replace/update<sp/>axon<sp/>and<sp/>dendrite<sp/>stats<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a2b1e0f757a3ab4fa12e3d0d14f31fcd2" kindref="member">update_stats_for_request</ref>(self,<sp/>request,<sp/>response,<sp/>time,<sp/>code):</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Updates<sp/>statistics<sp/>for<sp/>this<sp/>request<sp/>and<sp/>response.</highlight></codeline>
<codeline lineno="879"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="880"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requests<sp/>(<sp/>bittensor.proto.TensorMessage,<sp/>`required`):</highlight></codeline>
<codeline lineno="881"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>request.</highlight></codeline>
<codeline lineno="882"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response<sp/>(<sp/>bittensor.proto.TensorMessage,<sp/>`required`):</highlight></codeline>
<codeline lineno="883"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>response.</highlight></codeline>
<codeline lineno="884"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>(:type:`float`,<sp/>`required`):</highlight></codeline>
<codeline lineno="885"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Length<sp/>of<sp/>call<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>seconds.</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>(:obj:`bittensor.proto.ReturnCode,<sp/>`required`)</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Return<sp/>code<sp/>associated<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>the<sp/>call<sp/>i.e.<sp/>Success<sp/>of<sp/>Timeout.</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="889"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.qps.event()</highlight></codeline>
<codeline lineno="890"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.total_requests<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="891"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.total_in_bytes<sp/>+=<sp/>sys.getsizeof(request)<sp/></highlight></codeline>
<codeline lineno="892"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.total_out_bytes<sp/>+=<sp/>sys.getsizeof(response)<sp/></highlight></codeline>
<codeline lineno="893"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.avg_in_bytes_per_second.event(<sp/>float(sys.getsizeof(request))<sp/>)</highlight></codeline>
<codeline lineno="894"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.avg_out_bytes_per_second.event(<sp/>float(sys.getsizeof(response))<sp/>)</highlight></codeline>
<codeline lineno="895"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pubkey<sp/>=<sp/>request.hotkey</highlight></codeline>
<codeline lineno="896"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pubkey<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.requests_per_pubkey:</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.requests_per_pubkey[<sp/>pubkey<sp/>]<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.successes_per_pubkey[<sp/>pubkey<sp/>]<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.query_times_per_pubkey[<sp/>pubkey<sp/>]<sp/>=<sp/>stat_utils.AmountPerSecondRollingAverage(0,<sp/>0.05)</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.qps_per_pubkey[<sp/>pubkey<sp/>]<sp/>=<sp/>stat_utils.EventsPerSecondRollingAverage(0,<sp/>0.05)</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.codes_per_pubkey[<sp/>pubkey<sp/>]<sp/>=<sp/>dict([(k,0)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bittensor.proto.ReturnCode.keys()])</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.avg_in_bytes_per_pubkey[<sp/>pubkey<sp/>]<sp/>=<sp/>stat_utils.AmountPerSecondRollingAverage(0,<sp/>0.01)</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.avg_out_bytes_per_pubkey[<sp/>pubkey<sp/>]<sp/>=<sp/>stat_utils.AmountPerSecondRollingAverage(0,<sp/>0.01)</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.requests_per_pubkey[<sp/>pubkey<sp/>]<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.successes_per_pubkey[<sp/>pubkey<sp/>]<sp/>+=<sp/>1<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>code<sp/>==<sp/>1<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>0</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.query_times_per_pubkey[<sp/>pubkey<sp/>].event(<sp/>float(time)<sp/>)</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.avg_in_bytes_per_pubkey[<sp/>pubkey<sp/>].event(<sp/>float(sys.getsizeof(request))<sp/>)</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.avg_out_bytes_per_pubkey[<sp/>pubkey<sp/>].event(<sp/>float(sys.getsizeof(response))<sp/>)</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.qps_per_pubkey[<sp/>pubkey<sp/>].event()<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>bittensor.proto.ReturnCode.Name(<sp/>code<sp/>)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.codes_per_pubkey[<sp/>pubkey<sp/>].keys():</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.codes_per_pubkey[<sp/>pubkey<sp/>][bittensor.proto.ReturnCode.Name(<sp/>code<sp/>)]<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1ad884f50599b221c68ca92c012453f041" kindref="member">to_dataframe</ref><sp/>(<sp/>self,<sp/>metagraph<sp/>):</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Return<sp/>a<sp/>stats<sp/>info<sp/>as<sp/>a<sp/>pandas<sp/>dataframe<sp/>indexed<sp/>by<sp/>the<sp/>metagraph<sp/>or<sp/>pubkey<sp/>if<sp/>not<sp/>existend.</highlight></codeline>
<codeline lineno="920"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="921"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metagraph:<sp/>(<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph" kindref="compound">bittensor.Metagraph</ref>):</highlight></codeline>
<codeline lineno="922"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indexes<sp/>the<sp/>stats<sp/>data<sp/>using<sp/>uids.</highlight></codeline>
<codeline lineno="923"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Return:</highlight></codeline>
<codeline lineno="924"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataframe<sp/>(:obj:`pandas.Dataframe`)</highlight></codeline>
<codeline lineno="925"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="926"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Reindex<sp/>the<sp/>pubkey<sp/>to<sp/>uid<sp/>if<sp/>metagraph<sp/>is<sp/>present.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>[<sp/>metagraph.hotkeys.index(pubkey)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>pubkey<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.requests_per_pubkey.keys()<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pubkey<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>metagraph.hotkeys<sp/>]</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns<sp/>=<sp/>[<sp/></highlight><highlight class="stringliteral">&apos;axon_n_requested&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;axon_n_success&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;axon_query_time&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;axon_avg_inbytes&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;axon_avg_outbytes&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;axon_qps&apos;</highlight><highlight class="normal"><sp/>]</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataframe<sp/>=<sp/>pandas.DataFrame(columns<sp/>=<sp/>columns,<sp/>index<sp/>=<sp/>index)</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>pubkey<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.requests_per_pubkey.keys():</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pubkey<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>metagraph.hotkeys:</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uid<sp/>=<sp/>metagraph.hotkeys.index(pubkey)</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataframe.loc[<sp/>uid<sp/>]<sp/>=<sp/>pandas.Series(<sp/>{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;axon_n_requested&apos;</highlight><highlight class="normal">:<sp/>int(self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.requests_per_pubkey[pubkey]),</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;axon_n_success&apos;</highlight><highlight class="normal">:<sp/>int(self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.requests_per_pubkey[pubkey]),</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;axon_query_time&apos;</highlight><highlight class="normal">:<sp/>float(self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.query_times_per_pubkey[pubkey].get()),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;axon_avg_inbytes&apos;</highlight><highlight class="normal">:<sp/>float(self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.avg_in_bytes_per_pubkey[pubkey].get()),</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;axon_avg_outbytes&apos;</highlight><highlight class="normal">:<sp/>float(self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.avg_out_bytes_per_pubkey[pubkey].get()),</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;axon_qps&apos;</highlight><highlight class="normal">:<sp/>float(self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.qps_per_pubkey[pubkey].get())</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>)</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataframe[</highlight><highlight class="stringliteral">&apos;uid&apos;</highlight><highlight class="normal">]<sp/>=<sp/>dataframe.index</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dataframe</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor.logging.error(prefix=</highlight><highlight class="stringliteral">&apos;failed<sp/>axon.to_dataframe()&apos;</highlight><highlight class="normal">,<sp/>sufix=str(e))</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pandas.DataFrame()</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a2dff79ece41fbfb43286460c76fcad67" kindref="member">to_wandb</ref>(<sp/>self<sp/>):</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Return<sp/>a<sp/>dictionary<sp/>of<sp/>axon<sp/>stat<sp/>info<sp/>for<sp/>wandb<sp/>logging</highlight></codeline>
<codeline lineno="951"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="952"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metagraph:<sp/>(<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph" kindref="compound">bittensor.Metagraph</ref>):</highlight></codeline>
<codeline lineno="953"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>indexes<sp/>the<sp/>wandb<sp/>data<sp/>using<sp/>int<sp/>uids<sp/>rather<sp/>than<sp/>string<sp/>pubkeys.</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Return:</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wandb_info<sp/>(:obj:`Dict`)</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="957"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avg_query_time<sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>pubkey<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.query_times_per_pubkey:</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avg_query_time<sp/>+=<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.query_times_per_pubkey[pubkey].get()<sp/>/<sp/>len(<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.query_times_per_pubkey<sp/>)</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>----<sp/>Axon<sp/>summary<sp/>for<sp/>wandb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wandb_data<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;axon/qps&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.qps.get(),</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;axon/avg_query_time&apos;</highlight><highlight class="normal">:<sp/>avg_query_time,</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;axon/total_requests&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.total_requests,</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;axon/total_in_bytes&apos;</highlight><highlight class="normal"><sp/>:<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.total_in_bytes,</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;axon/total_out_bytes&apos;</highlight><highlight class="normal"><sp/>:<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.total_out_bytes,</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;axon/avg_in_bytes_per_second&apos;</highlight><highlight class="normal"><sp/>:<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.avg_in_bytes_per_second.get(),</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;axon/avg_out_bytes_per_second&apos;</highlight><highlight class="normal"><sp/>:<sp/>self.<ref refid="classbittensor_1_1__axon_1_1axon__impl_1_1_axon_1a66f2e9f35f21b85dc3f6d99ab070fbf2" kindref="member">stats</ref>.avg_out_bytes_per_second.get(),</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wandb_data</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor.logging.error(prefix=</highlight><highlight class="stringliteral">&apos;failed<sp/>during<sp/>axon.to_wandb()&apos;</highlight><highlight class="normal">,<sp/>sufix=str(e))</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{}<sp/></highlight></codeline>
    </programlisting>
    <location file="/Users/macthrasher/bittensor/bittensor/_axon/axon_impl.py"/>
  </compounddef>
</doxygen>
