<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="text__lasthiddenstate__impl_8py" kind="file" language="Python">
    <compoundname>text_lasthiddenstate_impl.py</compoundname>
    <innerclass refid="classbittensor_1_1__synapse_1_1text__lasthiddenstate__impl_1_1_text_last_hidden_state" prot="public">bittensor::_synapse::text_lasthiddenstate_impl::TextLastHiddenState</innerclass>
    <innernamespace refid="namespacebittensor">bittensor</innernamespace>
    <innernamespace refid="namespacebittensor_1_1__synapse">bittensor::_synapse</innernamespace>
    <innernamespace refid="namespacebittensor_1_1__synapse_1_1text__lasthiddenstate__impl">bittensor::_synapse::text_lasthiddenstate_impl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#<sp/>The<sp/>MIT<sp/>License<sp/>(MIT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Copyright<sp/>©<sp/>2021<sp/>Yuma<sp/>Rao</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>documentation<sp/>files<sp/>(the<sp/>“Software”),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>Software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>“AS<sp/>IS”,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>bittensor</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>torch</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>typing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Union,<sp/>List,<sp/>Tuple,<sp/>Optional</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.synapse_impl<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Synapse</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classbittensor_1_1__synapse_1_1text__lasthiddenstate__impl_1_1_text_last_hidden_state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1text__lasthiddenstate__impl_1_1_text_last_hidden_state" kindref="compound">TextLastHiddenState</ref><sp/>(<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse" kindref="compound">Synapse</ref>):</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>TastHiddenState<sp/>Synapse<sp/>type<sp/>for<sp/>getting<sp/>last<sp/>hidden<sp/>layer<sp/>embeddings<sp/>from<sp/>languge<sp/>models.</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>synapse_type:<sp/>bittensor.proto.Synapse.SynapseType<sp/>=<sp/>bittensor.proto.Synapse.SynapseType.TEXT_LAST_HIDDEN_STATE</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1text__lasthiddenstate__impl_1_1_text_last_hidden_state_1af0d25eb550870f5a0a79c2e2069a0a3c" kindref="member">__init__</ref>(<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_request_serializer_type:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Serializer.Type&apos;</highlight><highlight class="normal"><sp/>=<sp/>bittensor.proto.Serializer.MSGPACK,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_serializer_type:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Serializer.Type&apos;</highlight><highlight class="normal"><sp/>=<sp/>bittensor.proto.Serializer.MSGPACK,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_request_serializer_type:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Serializer.Type&apos;</highlight><highlight class="normal"><sp/>=<sp/>bittensor.proto.Serializer.MSGPACK,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_response_serializer_type:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Serializer.Type&apos;</highlight><highlight class="normal"><sp/>=<sp/>bittensor.proto.Serializer.MSGPACK,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>-&gt;<sp/></highlight><highlight class="stringliteral">&apos;TextLastHiddenState&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>TextLastHiddenState<sp/>Synapse<sp/>initializer.</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_request_serializer_type<sp/>(:obj:`bittensor.proto.Serializer.Type`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`optional`,<sp/>:default:<sp/>`bittensor.proto.Serializer.MSGPACK`):</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serializer<sp/>used<sp/>to<sp/>pack<sp/>torch<sp/>tensors<sp/>on<sp/>forward<sp/>request.</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_serializer_type<sp/>(:obj:`bittensor.proto.Serializer.Type`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`optional`,<sp/>:default:<sp/>`bittensor.proto.Serializer.MSGPACK`):</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serializer<sp/>used<sp/>to<sp/>pack<sp/>torch<sp/>tensors<sp/>on<sp/>forward<sp/>response.</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_request_serializer_type<sp/>(:obj:`bittensor.proto.Serializer.Type`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`optional`,<sp/>:default:<sp/>`bittensor.proto.Serializer.MSGPACK`):</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serializer<sp/>used<sp/>to<sp/>pack<sp/>torch<sp/>tensors<sp/>on<sp/>forward<sp/>request.</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_response_serializer_type<sp/>(:obj:`bittensor.proto.Serializer.Type`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`optional`,<sp/>:default:<sp/>`bittensor.proto.Serializer.MSGPACK`):</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serialzer<sp/>used<sp/>to<sp/>pack<sp/>torch<sp/>tensors<sp/>on<sp/>backward<sp/>response.</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextLastHiddenState<sp/>(:obj:`TextLastHiddenState`,<sp/>`required`):</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TextLastHiddenState<sp/>instance<sp/>adapter<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super().__init__<sp/>(</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_request_serializer_type,</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_serializer_type,</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_request_serializer_type,</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_response_serializer_type</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1af413630b0f381839eebcbf2c8431d181" kindref="member">synapse_type</ref><ref refid="classbittensor_1_1__synapse_1_1text__lasthiddenstate__impl_1_1_text_last_hidden_state_1aee4e09a7f0043e258895185c8525058b" kindref="member">synapse_type</ref><ref refid="classbittensor_1_1__synapse_1_1text__lasthiddenstate__impl_1_1_text_last_hidden_state_1a8c1db02433377fad9a54b959d4b07fff" kindref="member">synapse_type</ref><sp/>=<sp/>TextLastHiddenState.synapse_type</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__repr__(self)<sp/>-&gt;<sp/>str:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.__str__()</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__str__(self)<sp/>-&gt;<sp/>str:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;TextLastHiddenState&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>@staticmethod</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1text__lasthiddenstate__impl_1_1_text_last_hidden_state_1a79121f61ca8a42d301ce304d3a5597f7" kindref="member">deserialize_from_wire_proto</ref><sp/>(<sp/>wire_proto:<sp/>bittensor.proto.Synapse<sp/>)<sp/>-&gt;<sp/></highlight><highlight class="stringliteral">&apos;Synapse&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Deserialzied<sp/>the<sp/>wire<sp/>proto<sp/>to<sp/>an<sp/>instance<sp/>class.</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance_proto<sp/>=<sp/>bittensor.proto.Synapse.TextLastHiddenState()</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance_proto.ParseFromString(<sp/>wire_proto.synapse_data<sp/>)</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TextLastHiddenState.deserialize_from_instance_proto(<sp/>instance_proto<sp/>)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@staticmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1text__lasthiddenstate__impl_1_1_text_last_hidden_state_1a4953c1a3b03d7c8b7982cf574e6fb649" kindref="member">deserialize_from_instance_proto</ref><sp/>(<sp/>instance_proto:<sp/>bittensor.proto.Synapse<sp/>)<sp/>-&gt;<sp/></highlight><highlight class="stringliteral">&apos;Synapse&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Deserialzied<sp/>the<sp/>instance<sp/>proto<sp/>to<sp/>an<sp/>instance<sp/>class.</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isntance_proto<sp/>(:obj:`bittensor.proto.Synapse`<sp/>of<sp/>shape<sp/>:obj:`(1)`,<sp/>`required`):</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Synapse<sp/>instance<sp/>proto<sp/>to<sp/>be<sp/>deserialized.</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_instance_clasee<sp/>(:obj:`torch.Tensor`,<sp/>`required`):</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Deserialized<sp/>instance<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TextLastHiddenState<sp/>(</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_request_serializer_type<sp/>=<sp/>instance_proto.forward_request_serializer_type,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_serializer_type<sp/>=<sp/>instance_proto.forward_response_serializer_type,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_request_serializer_type<sp/>=<sp/>instance_proto.backward_request_serializer_type,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_response_serializer_type<sp/>=<sp/>instance_proto.backward_response_serializer_type,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1text__lasthiddenstate__impl_1_1_text_last_hidden_state_1aadd23b6961d73bf9a7bf2247ad95c99f" kindref="member">serialize_to_instance_proto</ref>(<sp/>self<sp/>)<sp/>-&gt;<sp/>&apos;bittensor.proto.Synapse.TextLastHiddenState&apos;:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Serializes<sp/>the<sp/>class<sp/>instance<sp/>to<sp/>a<sp/>Synapse<sp/>instance<sp/>proto.</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bittensor.proto.Synapse.TextLastHiddenState<sp/>(<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_request_serializer_type<sp/>=<sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1ad3dd23864f4620b0622bea9777aa63b6" kindref="member">forward_request_serializer_type</ref>,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_serializer_type<sp/>=<sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1af89940deb45bd9d18a7e1c15090a8466" kindref="member">forward_response_serializer_type</ref>,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_request_serializer_type<sp/>=<sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a6ac9ff8fb2e6cf1d01b1d6fba4bead9e" kindref="member">backward_request_serializer_type</ref>,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_response_serializer_type<sp/>=<sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a7a08c81b8b0a17e7913c52d17735aed5" kindref="member">backward_response_serializer_type</ref>,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1text__lasthiddenstate__impl_1_1_text_last_hidden_state_1aac990de9b5ecbd45acd54c2116304a31" kindref="member">serialize_to_wire_proto</ref>(<sp/>self,<sp/>code:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.ReturnCode&apos;</highlight><highlight class="normal"><sp/>=<sp/>0,<sp/>message:<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"><sp/>)<sp/>-&gt;<sp/></highlight><highlight class="stringliteral">&apos;bittensor.proto.Synapse&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Serializes<sp/>the<sp/>class<sp/>instance<sp/>to<sp/>a<sp/>Synapse<sp/>wire<sp/>proto.</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bittensor.proto.Synapse<sp/>(</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_data<sp/>=<sp/>self.<ref refid="classbittensor_1_1__synapse_1_1synapse__impl_1_1_synapse_1a9e2c93dbd788e9fb778997874f6429fb" kindref="member">serialize_to_instance_proto</ref><ref refid="classbittensor_1_1__synapse_1_1text__lasthiddenstate__impl_1_1_text_last_hidden_state_1aadd23b6961d73bf9a7bf2247ad95c99f" kindref="member">serialize_to_instance_proto</ref>().SerializeToString(),</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_type<sp/>=<sp/>TextLastHiddenState.synapse_type,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/>code,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/>message</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">check_forward_request_tensor<sp/><sp/><sp/><sp/><sp/>(<sp/>self,<sp/>forward_request_tensor<sp/>):<sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(<sp/>forward_request_tensor.shape<sp/>)<sp/>!=<sp/>2<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>forward_request_tensor.shape[0]<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>forward_request_tensor.shape[1]<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(<sp/></highlight><highlight class="stringliteral">&quot;forward_request_tensor.shape<sp/>must<sp/>be<sp/>in<sp/>[-1,<sp/>-1],<sp/>got:<sp/>{}<sp/>for<sp/>synapse:<sp/>{}&quot;</highlight><highlight class="normal">.format(<sp/>list(forward_request_tensor.shape),<sp/>self<sp/>)<sp/>)<sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">check_forward_response_tensor<sp/><sp/><sp/><sp/>(<sp/>self,<sp/>forward_request_tensor,<sp/>forward_response_tensor<sp/>):</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>forward_response_tensor<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;Empty<sp/>Response&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len(<sp/>forward_response_tensor.shape<sp/>)<sp/>!=<sp/>3<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_tensor.size(0)<sp/>!=<sp/>forward_request_tensor.size(0)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_tensor.size(1)<sp/>!=<sp/>forward_request_tensor.size(1)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_response_tensor.size(2)<sp/>!=<sp/>bittensor.__network_dim__</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>):</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(<sp/></highlight><highlight class="stringliteral">&quot;forward_response_tensor.shape<sp/>must<sp/>be<sp/>in<sp/>[{},<sp/>{},<sp/>{}],<sp/>got:<sp/>{}<sp/>for<sp/>synapse:<sp/>{}&quot;</highlight><highlight class="normal">.format(<sp/>forward_request_tensor.size(0)<sp/>,<sp/>forward_request_tensor.size(1),<sp/>bittensor.__network_dim__,<sp/>list(forward_response_tensor.shape),<sp/>self<sp/>)<sp/>)<sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">check_backward_request_gradient<sp/><sp/>(<sp/>self,<sp/>forward_request_tensor,<sp/>backward_request_gradient<sp/>):<sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len(<sp/>backward_request_gradient.shape<sp/>)<sp/>!=<sp/>3<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_request_gradient.size(0)<sp/>!=<sp/>forward_request_tensor.size(0)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_request_gradient.size(1)<sp/>!=<sp/>forward_request_tensor.size(1)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backward_request_gradient.size(2)<sp/>!=<sp/>bittensor.__network_dim__</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>):</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(<sp/></highlight><highlight class="stringliteral">&quot;backward_request_gradient.shape<sp/>must<sp/>be<sp/>in<sp/>[{},<sp/>{},<sp/>{}],<sp/>got:<sp/>{}<sp/>for<sp/>synapse:<sp/>{}&quot;</highlight><highlight class="normal">.format(<sp/>forward_request_tensor.size(0)<sp/>,<sp/>forward_request_tensor.size(1),<sp/>bittensor.__network_dim__,<sp/>list(backward_request_gradient.shape),<sp/>self<sp/>)<sp/>)<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">encode_forward_request_tensor<sp/><sp/><sp/><sp/>(<sp/>self,<sp/>forward_request_tensor:<sp/>torch.Tensor<sp/>)<sp/>-&gt;<sp/>torch.Tensor:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forward_request_tensor</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">decode_forward_request_tensor<sp/><sp/><sp/><sp/>(<sp/>self,<sp/>forward_request_tensor:<sp/>torch.Tensor<sp/>)<sp/>-&gt;<sp/>torch.Tensor:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forward_request_tensor</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">encode_forward_response_tensor<sp/><sp/><sp/>(<sp/>self,<sp/>forward_response_tensor:<sp/>torch.Tensor<sp/>)<sp/>-&gt;<sp/>torch.Tensor:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forward_response_tensor</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">decode_forward_response_tensor<sp/><sp/><sp/>(<sp/>self,<sp/>forward_response_tensor:<sp/>torch.Tensor<sp/>)<sp/>-&gt;<sp/>torch.Tensor:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forward_response_tensor</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">encode_backward_request_gradient<sp/>(<sp/>self,<sp/>backward_request_gradient:<sp/>torch.Tensor<sp/>)<sp/>-&gt;<sp/>torch.Tensor:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>backward_request_gradient</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">decode_backward_request_gradient<sp/>(<sp/>self,<sp/>backward_request_gradient:<sp/>torch.Tensor<sp/>)<sp/>-&gt;<sp/>torch.Tensor:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>backward_request_gradient</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1text__lasthiddenstate__impl_1_1_text_last_hidden_state_1a40362e2ae4488b1f5a7cfc464cb2ebf9" kindref="member">nill_forward_response_tensor</ref>(<sp/>self,<sp/>forward_request_tensor:<sp/>torch.Tensor<sp/>)<sp/>-&gt;<sp/>torch.Tensor:</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Returns<sp/>a<sp/>zeroed<sp/>tensor<sp/>used<sp/>as<sp/>response<sp/>to<sp/>a<sp/>dendrite<sp/>forward<sp/>call<sp/>when<sp/>the<sp/>call<sp/>fails.</highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="142"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch.zeros(<sp/>(<sp/>forward_request_tensor.size(0),<sp/>forward_request_tensor.size(1),<sp/>bittensor.__network_dim__<sp/>),<sp/>dtype=torch.float32)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch.tensor([])</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__synapse_1_1text__lasthiddenstate__impl_1_1_text_last_hidden_state_1a512e095c7dd9f549cc2a0f9d35eb2bcc" kindref="member">nill_backward_response_tensor</ref>(<sp/>self,<sp/>forward_request_tensor:<sp/>torch.Tensor<sp/>)<sp/>-&gt;<sp/>torch.Tensor:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Returns<sp/>a<sp/>zeroed<sp/>tensor<sp/>used<sp/>as<sp/>response<sp/>to<sp/>a<sp/>dendrite<sp/>backward<sp/>call<sp/>when<sp/>the<sp/>call<sp/>fails.</highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch.zeros(<sp/>(<sp/>forward_request_tensor.size(0),<sp/>forward_request_tensor.size(1),<sp/>bittensor.__network_dim__<sp/>),<sp/>dtype=torch.float32)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch.tensor([])</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="/Users/macthrasher/bittensor/bittensor/_synapse/text_lasthiddenstate_impl.py"/>
  </compounddef>
</doxygen>
