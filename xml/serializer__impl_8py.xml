<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="serializer__impl_8py" kind="file" language="Python">
    <compoundname>serializer_impl.py</compoundname>
    <innerclass refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer" prot="public">bittensor::_serializer::serializer_impl::Serializer</innerclass>
    <innerclass refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_m_s_g_pack_serializer" prot="public">bittensor::_serializer::serializer_impl::MSGPackSerializer</innerclass>
    <innerclass refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_c_m_p_pack_serializer" prot="public">bittensor::_serializer::serializer_impl::CMPPackSerializer</innerclass>
    <innernamespace refid="namespacebittensor">bittensor</innernamespace>
    <innernamespace refid="namespacebittensor_1_1__serializer">bittensor::_serializer</innernamespace>
    <innernamespace refid="namespacebittensor_1_1__serializer_1_1serializer__impl">bittensor::_serializer::serializer_impl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacebittensor_1_1__serializer_1_1serializer__impl" refkind="compound"><highlight class="stringliteral">&quot;&quot;&quot;<sp/>An<sp/>interface<sp/>for<sp/>serializing<sp/>and<sp/>deserializing<sp/>bittensor<sp/>tensors&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>MIT<sp/>License<sp/>(MIT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Copyright<sp/>©<sp/>2021<sp/>Yuma<sp/>Rao</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>documentation<sp/>files<sp/>(the<sp/>“Software”),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>Software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>“AS<sp/>IS”,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>torch</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>msgpack</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>msgpack_numpy</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>typing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Tuple,<sp/>List,<sp/>Union,<sp/>Optional</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>bittensor</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer" kindref="compound">Serializer</ref>(object):</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Bittensor<sp/>base<sp/>serialization<sp/>object<sp/>for<sp/>converting<sp/>between<sp/>bittensor.proto.Tensor<sp/>and<sp/>their</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>various<sp/>python<sp/>tensor<sp/>equivalents.<sp/>i.e.<sp/>torch.Tensor<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>tensorflow.Tensor</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@staticmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1aaf1e311321522ddadf7f9df58e02833d" kindref="member">empty</ref>():</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>an<sp/>empty<sp/>bittensor.proto.Tensor<sp/>message<sp/>with<sp/>the<sp/>version&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch_proto<sp/>=<sp/>bittensor.proto.Tensor(version=<sp/>bittensor.__version_as_int__)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch_proto</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">serialize<sp/>(self,<sp/>tensor_obj:<sp/>object,<sp/>modality:<sp/>bittensor.proto.Modality=<sp/>bittensor.proto.Modality.TEXT,<sp/>from_type:<sp/>int<sp/>=<sp/>bittensor.proto.TensorType.TORCH)<sp/>-&gt;<sp/>bittensor.proto.Tensor:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Serializes<sp/>a<sp/>torch<sp/>object<sp/>to<sp/>bittensor.proto.Tensor<sp/>wire<sp/>format.</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_obj<sp/>(:obj:`object`,<sp/>`required`):<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>general<sp/>tensor<sp/>object<sp/>i.e.<sp/>torch.Tensor<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>tensorflow.Tensor</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from_type<sp/>(`obj`:<sp/>bittensor.proto.TensorType,<sp/>`Optional`):<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serialization<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>this<sp/>type.<sp/>i.e.<sp/>bittensor.proto.TensorType.TORCH<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>bittensor.proto.TensorType.TENSORFLOW</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_pb2:<sp/>(obj:<sp/>`bittensor.proto.Tensor`,<sp/>`Optional`):<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serialized<sp/>tensor<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>bittensor.proto.proto.<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SerializationTypeNotImplementedException<sp/>(Exception):</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raised<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>serializer<sp/>does<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>implement<sp/>the<sp/>conversion<sp/>between<sp/>the<sp/>passed<sp/>type<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>a<sp/>bittensor.proto.Tensor</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SerializationException:<sp/>(Exception):<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raised<sp/>when<sp/>the<sp/>subclass<sp/>serialization<sp/>throws<sp/>an<sp/>error<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>passed<sp/>object.</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO<sp/>(const):<sp/>add<sp/>deserialization<sp/>types<sp/>for<sp/>torch<sp/>-&gt;<sp/>tensorflow<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>from_type<sp/>==<sp/>bittensor.proto.TensorType.TORCH:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1a7997590b584332b04f5c3e98b5bfea46" kindref="member">serialize_from_torch</ref>(<sp/>torch_tensor<sp/>=<sp/>tensor_obj,<sp/>modality<sp/>=<sp/>modality)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>from_type<sp/>==<sp/>bittensor.proto.TensorType.NUMPY:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1a939fa535f4b9a8ab4e8a4e825d15a9b1" kindref="member">serialize_from_numpy</ref>(<sp/>numpy_tensor<sp/>=<sp/>tensor_obj,<sp/>modality<sp/>=<sp/>modality)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>from_type<sp/>==<sp/>bittensor.proto.TensorType.TENSORFLOW:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1aab5db416aedd9f4830077cb288c5887e" kindref="member">serialize_from_tensorflow</ref>(<sp/>tensorflow_tensor<sp/>=<sp/>tensor_obj,<sp/>modality<sp/>=<sp/>modality)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classbittensor_1_1__serializer_1_1serializer_1_1_serialization_type_not_implemented_exception" kindref="compound">bittensor.serializer.SerializationTypeNotImplementedException</ref>(</highlight><highlight class="stringliteral">&quot;Serialization<sp/>from<sp/>type<sp/>{}<sp/>not<sp/>implemented.&quot;</highlight><highlight class="normal">.format(from_type))</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1ae3af7e1793a30a37e38b0e9f98bd47b8" kindref="member">deserialize</ref><sp/>(self,<sp/>tensor_pb2:<sp/>bittensor.proto.Tensor,<sp/>to_type:<sp/>int)<sp/>-&gt;<sp/>object:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Serializes<sp/>a<sp/>torch<sp/>object<sp/>to<sp/>bittensor.proto.Tensor<sp/>wire<sp/>format.</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_pb2<sp/>(`obj`:<sp/>bittensor.proto.Tensor,<sp/>`required`):<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serialized<sp/>tensor<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>bittensor.proto.proto.<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_type<sp/>(`obj`:<sp/>bittensor.proto.TensorType,<sp/>`required`):<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Deserialization<sp/>to<sp/>this<sp/>type.<sp/>i.e.<sp/>bittensor.proto.TensorType.TORCH<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>bittensor.proto.TensorType.TENSORFLOW</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_obj<sp/>(:obj:`torch.FloatTensor`,<sp/>`required`):<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor<sp/>object<sp/>of<sp/>type<sp/>from_type<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bittensor.proto.TensorType</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SerializationTypeNotImplementedException<sp/>(Exception):</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raised<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>serializer<sp/>does<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>implement<sp/>the<sp/>conversion<sp/>between<sp/>the<sp/>pb2<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>the<sp/>passed<sp/>type.</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DeserializationException:<sp/>(Exception):<sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raised<sp/>when<sp/>the<sp/>subclass<sp/>deserializer<sp/>throws<sp/>an<sp/>error<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>passed<sp/>object.</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO<sp/>(const):<sp/>add<sp/>deserialization<sp/>types<sp/>for<sp/>torch<sp/>-&gt;<sp/>tensorflow<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>to_type<sp/>==<sp/>bittensor.proto.TensorType.TORCH:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1a0a53800eb9150bb28ee55bc7dad8c2da" kindref="member">deserialize_to_torch</ref>(<sp/>tensor_pb2<sp/>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>to_type<sp/>==<sp/>bittensor.proto.TensorType.NUMPY:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1a57501f89fe649fb2507b89208f386edb" kindref="member">deserialize_to_numpy</ref>(<sp/>tensor_pb2<sp/>)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>to_type<sp/>==<sp/>bittensor.proto.TensorType.TENSORFLOW:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1a86af024ea4cd118df74229d0e5218017" kindref="member">deserialize_to_tensorflow</ref>(<sp/>tensor_pb2<sp/>)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classbittensor_1_1__serializer_1_1serializer_1_1_serialization_type_not_implemented_exception" kindref="compound">bittensor.serializer.SerializationTypeNotImplementedException</ref>(</highlight><highlight class="stringliteral">&quot;Deserialization<sp/>to<sp/>type<sp/>{}<sp/>not<sp/>implemented.&quot;</highlight><highlight class="normal">.format(to_type))</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1aab5db416aedd9f4830077cb288c5887e" kindref="member">serialize_from_tensorflow</ref>(self,<sp/>tensorflow_tensor:<sp/>torch.Tensor,<sp/>modality:<sp/>bittensor.proto.Modality)<sp/>-&gt;<sp/>bittensor.proto.Tensor:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>tensorflow<sp/>-&gt;<sp/>bittensor.proto.Tensor<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classbittensor_1_1__serializer_1_1serializer_1_1_serialization_type_not_implemented_exception" kindref="compound">bittensor.serializer.SerializationTypeNotImplementedException</ref></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1a7997590b584332b04f5c3e98b5bfea46" kindref="member">serialize_from_torch</ref>(self,<sp/>torch_tensor:<sp/>torch.Tensor,<sp/>modality:<sp/>bittensor.proto.Modality)<sp/>-&gt;<sp/>bittensor.proto.Tensor:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>torch<sp/>-&gt;<sp/>bittensor.proto.Tensor<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classbittensor_1_1__serializer_1_1serializer_1_1_serialization_type_not_implemented_exception" kindref="compound">bittensor.serializer.SerializationTypeNotImplementedException</ref></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1a939fa535f4b9a8ab4e8a4e825d15a9b1" kindref="member">serialize_from_numpy</ref>(self,<sp/>numpy_tensor:<sp/>torch.Tensor,<sp/>modality:<sp/>bittensor.proto.Modality)<sp/>-&gt;<sp/>bittensor.proto.Tensor:</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>numpy<sp/>-&gt;<sp/>bittensor.proto.Tensor<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classbittensor_1_1__serializer_1_1serializer_1_1_serialization_type_not_implemented_exception" kindref="compound">bittensor.serializer.SerializationTypeNotImplementedException</ref></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1a0a53800eb9150bb28ee55bc7dad8c2da" kindref="member">deserialize_to_torch</ref>(self,<sp/>tensor_pb2:<sp/>bittensor.proto.Tensor)<sp/>-&gt;<sp/>torch.Tensor:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>bittensor.proto.Tensor<sp/>-&gt;<sp/>torch<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classbittensor_1_1__serializer_1_1serializer_1_1_serialization_type_not_implemented_exception" kindref="compound">bittensor.serializer.SerializationTypeNotImplementedException</ref></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1a86af024ea4cd118df74229d0e5218017" kindref="member">deserialize_to_tensorflow</ref>(self,<sp/>tensor_pb2:<sp/>bittensor.proto.Tensor)<sp/>-&gt;<sp/>object:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>bittensor.proto.Tensor<sp/>-&gt;<sp/>tensorflow<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classbittensor_1_1__serializer_1_1serializer_1_1_serialization_type_not_implemented_exception" kindref="compound">bittensor.serializer.SerializationTypeNotImplementedException</ref></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer_1a57501f89fe649fb2507b89208f386edb" kindref="member">deserialize_to_numpy</ref>(self,<sp/>tensor_pb2:<sp/>bittensor.proto.Tensor)<sp/>-&gt;<sp/>object:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>bittensor.proto.Tensor<sp/>-&gt;<sp/>numpy<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classbittensor_1_1__serializer_1_1serializer_1_1_serialization_type_not_implemented_exception" kindref="compound">bittensor.serializer.SerializationTypeNotImplementedException</ref></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_m_s_g_pack_serializer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_m_s_g_pack_serializer" kindref="compound">MSGPackSerializer</ref>(<sp/><ref refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer" kindref="compound">Serializer</ref><sp/>):</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Make<sp/>conversion<sp/>between<sp/>torch<sp/>and<sp/>bittensor.proto.torch</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_m_s_g_pack_serializer_1ad2491ba6c3a2722b0c48bf68f1e13e7b" kindref="member">serialize_from_torch</ref>(self,<sp/>torch_tensor:<sp/>torch.Tensor,<sp/>modality:<sp/>bittensor.proto.Modality)<sp/>-&gt;<sp/>bittensor.proto.Tensor:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Serializes<sp/>a<sp/>torch.Tensor<sp/>to<sp/>an<sp/>bittensor<sp/>Tensor<sp/>proto.</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch_tensor<sp/>(torch.Tensor):<sp/></highlight></codeline>
<codeline lineno="142"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Torch<sp/>tensor<sp/>to<sp/>serialize.</highlight></codeline>
<codeline lineno="143"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="144"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modality<sp/>(bittensor.proto.Modality):<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Datatype<sp/>modality.<sp/>i.e.<sp/>TENSOR,<sp/>TEXT,<sp/>IMAGE</highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor.proto.Tensor:<sp/></highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>serialized<sp/>torch<sp/>tensor<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>bittensor.proto.proto.<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype<sp/>=<sp/>bittensor.serializer.torch_dtype_to_bittensor_dtype(torch_tensor.dtype)</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape<sp/>=<sp/>list(torch_tensor.shape)</highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch_numpy<sp/>=<sp/>torch_tensor.cpu().detach().numpy().copy()</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_buffer<sp/>=<sp/>msgpack.packb(torch_numpy,<sp/>default=msgpack_numpy.encode)</highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch_proto<sp/>=<sp/>bittensor.proto.Tensor<sp/>(</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>version<sp/>=<sp/>bittensor.__version_as_int__,</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>data_buffer,</highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape<sp/>=<sp/>shape,</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype<sp/>=<sp/>dtype,</highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serializer<sp/>=<sp/>bittensor.proto.Serializer.MSGPACK,</highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_type<sp/>=<sp/>bittensor.proto.TensorType.TORCH,</highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modality<sp/>=<sp/>modality,</highlight></codeline>
<codeline lineno="163"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requires_grad<sp/>=<sp/>torch_tensor.requires_grad</highlight></codeline>
<codeline lineno="164"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="165"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch_proto</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_m_s_g_pack_serializer_1af2f485747d6af31ff4d4c75f1ae6dcb8" kindref="member">deserialize_to_torch</ref>(self,<sp/>torch_proto:<sp/>bittensor.proto.Tensor)<sp/>-&gt;<sp/>torch.Tensor:</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Deserializes<sp/>an<sp/>bittensor.proto.Tensor<sp/>to<sp/>a<sp/>torch.Tensor<sp/>object.</highlight></codeline>
<codeline lineno="169"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch_proto<sp/>(bittensor.proto.Tensor):<sp/></highlight></codeline>
<codeline lineno="172"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto<sp/>containing<sp/>torch<sp/>tensor<sp/>to<sp/>derserialize.</highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch.Tensor:<sp/></highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Deserialized<sp/>torch<sp/>tensor.</highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype<sp/>=<sp/>bittensor.serializer.bittensor_dtype_to_torch_dtype(torch_proto.dtype)</highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape<sp/>=<sp/>tuple(torch_proto.shape)</highlight></codeline>
<codeline lineno="180"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numpy_object<sp/>=<sp/>msgpack.unpackb(torch_proto.buffer,<sp/>object_hook=msgpack_numpy.decode).copy()</highlight></codeline>
<codeline lineno="181"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch_object<sp/>=<sp/>torch.as_tensor(numpy_object).view(shape).requires_grad_(torch_proto.requires_grad)</highlight></codeline>
<codeline lineno="182"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch_object.type(dtype)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_c_m_p_pack_serializer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_c_m_p_pack_serializer" kindref="compound">CMPPackSerializer</ref>(<sp/><ref refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_serializer" kindref="compound">Serializer</ref><sp/>):</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Make<sp/>conversion<sp/>between<sp/>torch<sp/>and<sp/>bittensor.proto.torch<sp/>in<sp/>float16</highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_c_m_p_pack_serializer_1a124580b7d16f7b90bf093c517bac86dd" kindref="member">serialize_from_torch</ref>(self,<sp/>torch_tensor:<sp/>torch.Tensor,<sp/>modality:<sp/>bittensor.proto.Modality)<sp/>-&gt;<sp/>bittensor.proto.Tensor:</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Serializes<sp/>a<sp/>torch.Tensor<sp/>to<sp/>an<sp/>bittensor<sp/>Tensor<sp/>proto<sp/>in<sp/>float16</highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="191"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="192"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch_tensor<sp/>(torch.Tensor):<sp/></highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Torch<sp/>tensor<sp/>to<sp/>serialize.</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="195"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modality<sp/>(bittensor.proto.Modality):<sp/></highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Datatype<sp/>modality.<sp/>i.e.<sp/>TENSOR,<sp/>TEXT,<sp/>IMAGE</highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor.proto.Tensor:<sp/></highlight></codeline>
<codeline lineno="200"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>serialized<sp/>torch<sp/>tensor<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>bittensor.proto.proto.<sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="202"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype<sp/>=<sp/>bittensor.serializer.torch_dtype_to_bittensor_dtype(torch_tensor.dtype)</highlight></codeline>
<codeline lineno="203"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape<sp/>=<sp/>list(torch_tensor.shape)</highlight></codeline>
<codeline lineno="204"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch_numpy<sp/>=<sp/>torch_tensor.cpu().detach().half().numpy().copy()</highlight></codeline>
<codeline lineno="205"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_buffer<sp/>=<sp/>msgpack.packb(torch_numpy,<sp/>default=msgpack_numpy.encode)</highlight></codeline>
<codeline lineno="206"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch_proto<sp/>=<sp/>bittensor.proto.Tensor<sp/>(</highlight></codeline>
<codeline lineno="207"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>version<sp/>=<sp/>bittensor.__version_as_int__,</highlight></codeline>
<codeline lineno="208"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>data_buffer,</highlight></codeline>
<codeline lineno="209"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape<sp/>=<sp/>shape,</highlight></codeline>
<codeline lineno="210"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype<sp/>=<sp/>dtype,</highlight></codeline>
<codeline lineno="211"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serializer<sp/>=<sp/>bittensor.proto.Serializer.CMPPACK,</highlight></codeline>
<codeline lineno="212"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_type<sp/>=<sp/>bittensor.proto.TensorType.TORCH,</highlight></codeline>
<codeline lineno="213"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modality<sp/>=<sp/>modality,</highlight></codeline>
<codeline lineno="214"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requires_grad<sp/>=<sp/>torch_tensor.requires_grad</highlight></codeline>
<codeline lineno="215"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="216"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch_proto</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__serializer_1_1serializer__impl_1_1_c_m_p_pack_serializer_1a7b89eaa87b6f07e7c172263d6216ab79" kindref="member">deserialize_to_torch</ref>(self,<sp/>torch_proto:<sp/>bittensor.proto.Tensor)<sp/>-&gt;<sp/>torch.Tensor:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Deserializes<sp/>an<sp/>bittensor.proto.Tensor<sp/>to<sp/>a<sp/>torch.Tensor<sp/>object.</highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch_proto<sp/>(bittensor.proto.Tensor):<sp/></highlight></codeline>
<codeline lineno="223"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proto<sp/>containing<sp/>torch<sp/>tensor<sp/>to<sp/>derserialize.</highlight></codeline>
<codeline lineno="224"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch.Tensor:<sp/></highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Deserialized<sp/>torch<sp/>tensor.</highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="229"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype<sp/>=<sp/>bittensor.serializer.bittensor_dtype_to_torch_dtype(torch_proto.dtype)</highlight></codeline>
<codeline lineno="230"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape<sp/>=<sp/>tuple(torch_proto.shape)</highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numpy_object<sp/>=<sp/>msgpack.unpackb(torch_proto.buffer,<sp/>object_hook=msgpack_numpy.decode).copy()</highlight></codeline>
<codeline lineno="232"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch_object<sp/>=<sp/>torch.as_tensor(numpy_object).view(shape).requires_grad_(torch_proto.requires_grad)</highlight></codeline>
<codeline lineno="233"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch_object.type(dtype)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/macthrasher/bittensor/bittensor/_serializer/serializer_impl.py"/>
  </compounddef>
</doxygen>
