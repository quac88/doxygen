<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nucleus__impl_8py" kind="file" language="Python">
    <compoundname>nucleus_impl.py</compoundname>
    <innerclass refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server" prot="public">bittensor::_neuron::text::core_server::nucleus_impl::server</innerclass>
    <innernamespace refid="namespacebittensor">bittensor</innernamespace>
    <innernamespace refid="namespacebittensor_1_1__neuron">bittensor::_neuron</innernamespace>
    <innernamespace refid="namespacebittensor_1_1__neuron_1_1text">bittensor::_neuron::text</innernamespace>
    <innernamespace refid="namespacebittensor_1_1__neuron_1_1text_1_1core__server">bittensor::_neuron::text::core_server</innernamespace>
    <innernamespace refid="namespacebittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl">bittensor::_neuron::text::core_server::nucleus_impl</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="nucleus__impl_8py_1ad50e34190eb0b8a7e29507f502b46a0a" prot="public" static="no" mutable="no">
        <type></type>
        <definition>bittensor::_neuron::text::core_server::nucleus_impl.logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <qualifiedname>bittensor._neuron.text.core_server.nucleus_impl.logger</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_neuron/text/core_server/nucleus_impl.py" line="16" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_neuron/text/core_server/nucleus_impl.py" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="nucleus__impl_8py_1a3dd2e3b68d2111c9d40f5c2673777244" prot="public" static="no" mutable="no">
        <type></type>
        <definition>bittensor::_neuron::text::core_server::nucleus_impl.colors</definition>
        <argsstring></argsstring>
        <name>colors</name>
        <qualifiedname>bittensor._neuron.text.core_server.nucleus_impl.colors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_neuron/text/core_server/nucleus_impl.py" line="16" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_neuron/text/core_server/nucleus_impl.py" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>argparse</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>bittensor</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>torch</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>torch<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>nn</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>torch.nn.functional<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>F</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>types<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>SimpleNamespace</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>typing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Tuple,<sp/>Optional</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>transformers</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>transformers<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>AutoModel,AutoTokenizer,AutoConfig,<sp/>AutoModelForCausalLM</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>torch.nn.utils.rnn<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pad_sequence</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacebittensor_1_1utils_1_1tokenizer__utils" kindref="compound">bittensor.utils.tokenizer_utils</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>prep_tokenizer,<sp/>get_translation_map,<sp/>translate_logits_to_probs_std,<sp/>\</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>translate_special_token_text,<sp/>pad_offsets,<sp/>topk_token_phrases,<sp/>compact_topk_token_phrases</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger;<sp/>logger<sp/>=<sp/>logger.opt(colors=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server" kindref="compound">server</ref>(torch.nn.Module):</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a6132e85ef58f7a42c1fe91a77ce700d7" kindref="member">__init__</ref>(self,<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config:<sp/></highlight><highlight class="stringliteral">&apos;bittensor.config&apos;</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pretrained:<sp/>bool<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_name:<sp/>str<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>padding:<sp/>bool<sp/>=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interpolate:<sp/>bool<sp/>=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inter_degree:<sp/>str<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokenizer<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapping_function<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token_remap<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checking=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;&quot;<sp/>Creates<sp/>a<sp/>server<sp/>that<sp/>serves<sp/>up<sp/>a<sp/>pretrained<sp/>miner<sp/>on<sp/>the<sp/>bittensor<sp/>network</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config<sp/>(:obj:`<ref refid="classbittensor_1_1__config_1_1config__impl_1_1_config" kindref="compound">bittensor.Config</ref>`,<sp/>`required`):<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor.server.config()</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pretrained<sp/>(:obj:bool<sp/>,<sp/>`optional`):</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>model<sp/>should<sp/>pretrained<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_name<sp/>(:obj:string<sp/>,<sp/>`optional`):</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>of<sp/>the<sp/>pretrained<sp/>model<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>huggingface<sp/>to<sp/>use</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>padding<sp/>(:obj:bool,<sp/>`optional`):</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>server<sp/>should<sp/>pad<sp/>out<sp/>to<sp/>match<sp/>the<sp/>hidden<sp/>units<sp/>that<sp/>the<sp/>bittensor<sp/>network<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>using</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>set<sp/>to<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>it<sp/>will<sp/>instead<sp/>create<sp/>a<sp/>mapping<sp/>layer<sp/>to<sp/>do<sp/>the<sp/>same<sp/>thing.</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interpolate<sp/>(:obj:bool,<sp/>`optional`):</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>server<sp/>should<sp/>interpolate<sp/>between<sp/>sequence<sp/>length<sp/>differences.</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>set<sp/>to<sp/>false,<sp/>there<sp/>should<sp/>be<sp/>a<sp/>mapping<sp/>function<sp/>that<sp/>takes<sp/>care<sp/>of<sp/>the<sp/>differnces</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inter_degree<sp/>(:obj:str,<sp/>`optional`):</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>Interpolate<sp/>algorithm<sp/>(nearest<sp/>|<sp/>linear<sp/>|<sp/>bilinear<sp/>|<sp/>bicubic<sp/>|<sp/>trilinear<sp/>|<sp/>area)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model<sp/>(:obj:torch.module,<sp/>`optional`):</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Overrides<sp/>the<sp/>huggingface<sp/>pretrained<sp/>model<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>your<sp/>own<sp/>pretrained<sp/>model</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokenizer<sp/>(:obj:huggingface.tokenizer,<sp/>`optional`):</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Overrides<sp/>the<sp/>huggingface<sp/>tokenizer<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>your<sp/>tokenizer</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapping_function<sp/>(:obj:Callable,<sp/>`optional`):</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Custom<sp/>mapping<sp/>function<sp/>that<sp/>maps<sp/>between<sp/>sequence<sp/>length<sp/>differences<sp/>between<sp/>tokenizers</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token_remap<sp/>(:obj:Callable,<sp/>`optional`):</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Custom<sp/>function<sp/>that<sp/>maps<sp/>between<sp/>tokenizers<sp/>(defaults<sp/>to<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a62d78b2d208bf64fb184ce6dff244949" kindref="member">remapping_token</ref>)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(server,<sp/>self).<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a6132e85ef58f7a42c1fe91a77ce700d7" kindref="member">__init__</ref>()</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>config<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:<sp/>config<sp/>=<sp/>server.config()</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a1fe51e3db9d34b727f1065d635974c4e" kindref="member">config</ref><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ab73ed844f7bac4c98193de3a20df9779" kindref="member">config</ref><sp/>=<sp/>config;print(config)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a2ea0c9a2c94e7361a527199d06c2e7a7" kindref="member">std_tokenizer</ref><sp/>=<sp/><ref refid="classbittensor_1_1__tokenizer_1_1tokenizer" kindref="compound">bittensor.tokenizer</ref>()</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ae899ad3334d1974b0a39a10e30367abf" kindref="member">device</ref><sp/>=<sp/>config.neuron.device</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#setting<sp/>up<sp/>pretrained<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a58719232feeb83555ed82117b6fa0f0d" kindref="member">model_name</ref><sp/>=<sp/>model_name<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>model_name<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>config.neuron.model_name</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a43a711aa5b2f3fb5f3e0444c0b348d2c" kindref="member">pretrained</ref><sp/>=<sp/>pretrained<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pretrained<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>config.neuron.pretrained</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a43a711aa5b2f3fb5f3e0444c0b348d2c" kindref="member">pretrained</ref><sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a19dd46f7b10bcf825fceef96966c5273" kindref="member">pre_model</ref><sp/>=<sp/>model<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>model<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>AutoModelForCausalLM.from_pretrained(self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a58719232feeb83555ed82117b6fa0f0d" kindref="member">model_name</ref>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1af2fb1f8356881cc49cc3d29e12ab5dfc" kindref="member">tokenizer</ref><sp/>=<sp/>tokenizer</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>tokenizer<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1af2fb1f8356881cc49cc3d29e12ab5dfc" kindref="member">tokenizer</ref><sp/>=<sp/>AutoTokenizer.from_pretrained(self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a58719232feeb83555ed82117b6fa0f0d" kindref="member">model_name</ref>)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ValueError:<sp/><sp/></highlight><highlight class="comment">#<sp/>when<sp/>fast<sp/>not<sp/>available<sp/>as<sp/>in<sp/>https://github.com/huggingface/tokenizers/pull/1005</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1af2fb1f8356881cc49cc3d29e12ab5dfc" kindref="member">tokenizer</ref><sp/>=<sp/>AutoTokenizer.from_pretrained(self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a58719232feeb83555ed82117b6fa0f0d" kindref="member">model_name</ref>,<sp/>use_fast=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a43a711aa5b2f3fb5f3e0444c0b348d2c" kindref="member">pretrained</ref><sp/>==<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_config<sp/>=<sp/>AutoConfig.from_pretrained(self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a58719232feeb83555ed82117b6fa0f0d" kindref="member">model_name</ref>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_config.vocab_size=<sp/>bittensor.__vocab_size__</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a19dd46f7b10bcf825fceef96966c5273" kindref="member">pre_model</ref><sp/>=<sp/>model<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>model<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>AutoModel.from_config(model_config)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1af2fb1f8356881cc49cc3d29e12ab5dfc" kindref="member">tokenizer</ref><sp/>=<sp/><ref refid="classbittensor_1_1__tokenizer_1_1tokenizer" kindref="compound">bittensor.tokenizer</ref>()</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>PAD<sp/>Token<sp/>=<sp/>EOS<sp/>Token<sp/>(GPT2<sp/>generate<sp/>convention,<sp/>when<sp/>PAD<sp/>Token<sp/>is<sp/>None)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>https://github.com/huggingface/transformers/blob/49c8c67fb815a277405f84dea4a66353e19fb347/tests/models/gpt2/test_modeling_gpt2.py#L532</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a19dd46f7b10bcf825fceef96966c5273" kindref="member">pre_model</ref>.config.pad_token_id<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a19dd46f7b10bcf825fceef96966c5273" kindref="member">pre_model</ref>.config.eos_token_id<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a19dd46f7b10bcf825fceef96966c5273" kindref="member">pre_model</ref>.config.pad_token_id<sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a19dd46f7b10bcf825fceef96966c5273" kindref="member">pre_model</ref>.config.eos_token_id</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1af2fb1f8356881cc49cc3d29e12ab5dfc" kindref="member">tokenizer</ref><sp/>=<sp/>prep_tokenizer(self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1af2fb1f8356881cc49cc3d29e12ab5dfc" kindref="member">tokenizer</ref>,<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a2ea0c9a2c94e7361a527199d06c2e7a7" kindref="member">std_tokenizer</ref>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a9b2ffcddff2457f054c9a8defe165bea" kindref="member">to_translation_map</ref><sp/>=<sp/>get_translation_map(self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1af2fb1f8356881cc49cc3d29e12ab5dfc" kindref="member">tokenizer</ref>,<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a2ea0c9a2c94e7361a527199d06c2e7a7" kindref="member">std_tokenizer</ref>)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a98a186d02407406e0600f46340c04cc0" kindref="member">from_translation_map</ref><sp/>=<sp/>get_translation_map(self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a2ea0c9a2c94e7361a527199d06c2e7a7" kindref="member">std_tokenizer</ref>,<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1af2fb1f8356881cc49cc3d29e12ab5dfc" kindref="member">tokenizer</ref>)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a21794b8b4d9c313aa791915cc710105d" kindref="member">split_map_cache</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a1fe51e3db9d34b727f1065d635974c4e" kindref="member">config</ref><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ab73ed844f7bac4c98193de3a20df9779" kindref="member">config</ref>.neuron.local_train<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a1fe51e3db9d34b727f1065d635974c4e" kindref="member">config</ref><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ab73ed844f7bac4c98193de3a20df9779" kindref="member">config</ref>.neuron.remote_train:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a19dd46f7b10bcf825fceef96966c5273" kindref="member">pre_model</ref>.train()</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a614100716e4fce09e4e00b12ee6ef1f5" kindref="member">set_fine_tuning_params</ref>()</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a19dd46f7b10bcf825fceef96966c5273" kindref="member">pre_model</ref>.eval()</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a1fe51e3db9d34b727f1065d635974c4e" kindref="member">config</ref><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ab73ed844f7bac4c98193de3a20df9779" kindref="member">config</ref>.neuron.autocast<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ae899ad3334d1974b0a39a10e30367abf" kindref="member">device</ref>[:4]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;cuda&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a19dd46f7b10bcf825fceef96966c5273" kindref="member">pre_model</ref>.half()</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#parameters<sp/>of<sp/>the<sp/>models</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ae8c3bbd769bb479e7ee08d86452f4115" kindref="member">final_dim</ref><sp/>=<sp/><sp/>bittensor.__network_dim__</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a91f231d0ec2453812dbba74395ace7d5" kindref="member">pre_dimension</ref><sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a19dd46f7b10bcf825fceef96966c5273" kindref="member">pre_model</ref>.config.hidden_size</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1aa8d8826166f382eb1e2d2f877010737e" kindref="member">padding</ref><sp/>=<sp/>padding<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>padding<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>config.neuron.padding</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a8e361a0163795bb84e3ed0c0d8aea22a" kindref="member">interpolate</ref><sp/>=<sp/>interpolate<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>interpolate<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>config.neuron.interpolate</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a4b00d04e2efafcd5ab2ef09a0f6e95ec" kindref="member">inter_degree</ref><sp/>=<sp/>inter_degree<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>inter_degree<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>config.neuron.inter_degree</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a0eb233826f22d6a7b03844043ea20102" kindref="member">checking</ref><sp/>=<sp/>checking<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>checking<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>config.neuron.checking</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a73c162f7a06d87ef824b2da7c1a1cdb0" kindref="member">mapping_function</ref>=<sp/>mapping_function</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a3e684c0f6202d453f185afba381919be" kindref="member">token_remap</ref><sp/>=<sp/>token_remap<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>token_remap<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a62d78b2d208bf64fb184ce6dff244949" kindref="member">remapping_token</ref></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a1fe51e3db9d34b727f1065d635974c4e" kindref="member">config</ref><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ab73ed844f7bac4c98193de3a20df9779" kindref="member">config</ref>.neuron.padding<sp/>==<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a24846bd379930a27372f3ae3f3254dc7" kindref="member">mapping</ref><sp/>=<sp/>torch.nn.Linear(<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a91f231d0ec2453812dbba74395ace7d5" kindref="member">pre_dimension</ref>,<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ae8c3bbd769bb479e7ee08d86452f4115" kindref="member">final_dim</ref>)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1af9d0050ad9132134af85214098b41b8b" kindref="member">decoder</ref><sp/>=<sp/>torch.nn.Linear(<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ae8c3bbd769bb479e7ee08d86452f4115" kindref="member">final_dim</ref>,<sp/>bittensor.__vocab_size__<sp/>,<sp/>bias=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a499385f44e3a8639cb02a41a18adf969" kindref="member">loss_fct</ref><sp/>=<sp/>torch.nn.CrossEntropyLoss()</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1afe16b8513b5fabcce755942de484b263" kindref="member">outputs_cache</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1aa712efaf2ecfee34c71ed605fa316533" kindref="member">gradients_cache</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a4bb4e0ae1dd2ad2978d301a89075b92b" kindref="member">best_loss</ref><sp/>=<sp/>math.inf</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a0ebc1b62937f368ec16fc15fba2e6731" kindref="member">best_remote_loss</ref><sp/>=<sp/>math.inf</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#checking<sp/>if<sp/>the<sp/>parameters<sp/>of<sp/>the<sp/>server<sp/>makes<sp/>sense</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a0eb233826f22d6a7b03844043ea20102" kindref="member">checking</ref><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>pretrained<sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a99bcd6cc84c562d1db5cac8e585576d7" kindref="member">check</ref>()</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>--<sp/>keeps<sp/>track<sp/>of<sp/>gradients<sp/>applied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a88e13af700b009f4414388f50bc03c1d" kindref="member">backward_gradients_count</ref><sp/>=<sp/>0<sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a896fad140124878a2ddf5d34f6467546" kindref="member">remote_losses</ref><sp/>=<sp/>[]<sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a614100716e4fce09e4e00b12ee6ef1f5" kindref="member">set_fine_tuning_params</ref>(self)<sp/>-&gt;<sp/>Tuple[bool,<sp/>str]:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&apos;&apos;&apos;<sp/>Set<sp/>to<sp/>tune<sp/>only<sp/>the<sp/>parameter<sp/>of<sp/>the<sp/>last<sp/>layer</highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:<sp/></highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reached_last_layer<sp/>(:type:`bool`):</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>we<sp/>have<sp/>set<sp/>partial<sp/>of<sp/>the<sp/>model<sp/>to<sp/>requires<sp/>grad.</highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_layer_name<sp/>(:type:`string`):</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>name<sp/>of<sp/>the<sp/>last<sp/>layer<sp/>that<sp/>user<sp/>specified<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>we<sp/>found.</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>user<sp/>did<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>specify<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>we<sp/>couldnt<sp/>find<sp/>it.<sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">find_last_layer(model:<sp/>torch.nn.Module)<sp/>-&gt;<sp/>Optional[str]:<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&apos;&apos;&apos;<sp/>Recursively<sp/>find<sp/>the<sp/>last<sp/>layer<sp/>in<sp/>a<sp/>nn.ModuleList</highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="142"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model<sp/>(:obj:`torch.module`):</highlight></codeline>
<codeline lineno="143"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>model<sp/>(</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>sub-model)<sp/>to<sp/>fine<sp/>the<sp/>last<sp/>layer<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal">.<sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>(:type:`str`):</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>name<sp/>(</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>sub-name)<sp/>of<sp/>the<sp/>last<sp/>layer.</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>found</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reverted_child_list<sp/>=<sp/>[(name,<sp/>child)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>name,<sp/>child<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>model.named_children()]</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reverted_child_list.reverse()</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>name,<sp/>child<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>reverted_child_list:<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(child,<sp/>nn.ModuleList):</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a1fe51e3db9d34b727f1065d635974c4e" kindref="member">config</ref><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ab73ed844f7bac4c98193de3a20df9779" kindref="member">config</ref>.neuron.finetune.num_layers<sp/>&gt;<sp/>len(child):</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.warning(f</highlight><highlight class="stringliteral">&apos;Number<sp/>of<sp/>finetune<sp/>layers<sp/>was<sp/>set<sp/>higher<sp/>then<sp/>the<sp/>layers<sp/>avaliable<sp/>{len(child)}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>+str(len(child)<sp/>-<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a1fe51e3db9d34b727f1065d635974c4e" kindref="member">config</ref><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ab73ed844f7bac4c98193de3a20df9779" kindref="member">config</ref>.neuron.finetune.num_layers))</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>name,<sp/>child<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>reverted_child_list:<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name_<sp/>=<sp/>find_last_layer(child)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>name_<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(name+</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">+<sp/>name_)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a1fe51e3db9d34b727f1065d635974c4e" kindref="member">config</ref><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ab73ed844f7bac4c98193de3a20df9779" kindref="member">config</ref>.neuron.finetune.layer_name<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_layer_name<sp/>=<sp/>find_last_layer(self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a19dd46f7b10bcf825fceef96966c5273" kindref="member">pre_model</ref>)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_layer_name<sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a1fe51e3db9d34b727f1065d635974c4e" kindref="member">config</ref><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ab73ed844f7bac4c98193de3a20df9779" kindref="member">config</ref>.neuron.finetune.layer_name</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reached_last_layer<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>set<sp/>the<sp/>non-last<sp/>layer<sp/>parameters<sp/>not<sp/>to<sp/>require<sp/>grads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a1fe51e3db9d34b727f1065d635974c4e" kindref="member">config</ref><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ab73ed844f7bac4c98193de3a20df9779" kindref="member">config</ref>.neuron.finetune.all)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>(last_layer_name<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>last_layer_name</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.success(f</highlight><highlight class="stringliteral">&apos;Set<sp/>to<sp/>finetune<sp/>layer<sp/>{last_layer_name}<sp/>and<sp/>onwards&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>name,<sp/>param<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a19dd46f7b10bcf825fceef96966c5273" kindref="member">pre_model</ref>.named_parameters():</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>last_layer_name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>name<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>reached_last_layer<sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param.requires_grad<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reached_last_layer<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param.requires_grad<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>reached_last_layer<sp/>==<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a1fe51e3db9d34b727f1065d635974c4e" kindref="member">config</ref><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ab73ed844f7bac4c98193de3a20df9779" kindref="member">config</ref>.neuron.finetune.all:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.warning(</highlight><highlight class="stringliteral">&apos;Set<sp/>to<sp/>finetune<sp/>the<sp/>whole<sp/>model,<sp/>this<sp/>will<sp/>significantly<sp/>increase<sp/>the<sp/>memory<sp/>usage.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.warning(f</highlight><highlight class="stringliteral">&apos;Cannot<sp/>identify<sp/>the<sp/>last<sp/>layer<sp/>of<sp/>the<sp/>model<sp/>with<sp/>name<sp/>{last_layer_name},<sp/>setting<sp/>to<sp/>finetune<sp/>on<sp/>all<sp/>of<sp/>the<sp/>parameters.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reached_last_layer,<sp/>last_layer_name</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a62d78b2d208bf64fb184ce6dff244949" kindref="member">remapping_token</ref>(self,<sp/>token_batch,<sp/>std_tokenizer=None,<sp/>return_offsets_mapping=False):</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Tokenizer<sp/>remapping;<sp/>decodes<sp/>the<sp/>message<sp/>and<sp/>then<sp/>remaps<sp/>the<sp/>message<sp/>using<sp/>a<sp/>new<sp/>tokenizer</highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token_batch<sp/>(<sp/>:obj:`torch.LongTensor`,<sp/>`required`):</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token_batch<sp/>to<sp/>be<sp/>retokenized,<sp/>[batch_size,<sp/>sequence_len]</highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std_tokenizer<sp/>(<sp/>:obj:`transformers.Tokenizer`,<sp/>`optional`):</highlight></codeline>
<codeline lineno="200"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>standard<sp/>tokenizer<sp/>which<sp/>was<sp/>used<sp/>to<sp/>tokenize<sp/>the<sp/>input.</highlight></codeline>
<codeline lineno="201"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_offsets_mapping<sp/>(<sp/>:obj:`bool`,<sp/>`required`):</highlight></codeline>
<codeline lineno="202"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Return<sp/>offsets_mapping<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tokenization<sp/>to<sp/>delineate<sp/>token<sp/>segment<sp/>positions.</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="204"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>std_tokenizer<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std_tokenizer<sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a2ea0c9a2c94e7361a527199d06c2e7a7" kindref="member">std_tokenizer</ref></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_batch<sp/>=<sp/>std_tokenizer.batch_decode(token_batch)<sp/><sp/></highlight><highlight class="comment">#<sp/>decode<sp/>tokens<sp/>to<sp/>original<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>translate_special_token_text(text_batch,<sp/>std_tokenizer,<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1af2fb1f8356881cc49cc3d29e12ab5dfc" kindref="member">tokenizer</ref>)<sp/><sp/></highlight><highlight class="comment">#<sp/>translate<sp/>special<sp/>tokens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_text_batch,<sp/>from_offsets_batch,<sp/>to_offsets_batch,<sp/>pad_offsets_batch<sp/>=<sp/>result</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokens<sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1af2fb1f8356881cc49cc3d29e12ab5dfc" kindref="member">tokenizer</ref>(to_text_batch,<sp/>padding=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>truncation=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>max_length=token_batch.size(1),<sp/>return_tensors=</highlight><highlight class="stringliteral">&apos;pt&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_special_tokens=</highlight><highlight class="keyword">False</highlight><highlight class="normal">).to(self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ae899ad3334d1974b0a39a10e30367abf" kindref="member">device</ref>)<sp/><sp/></highlight><highlight class="comment">#<sp/>assume<sp/>tokenizer.padding_side<sp/>=<sp/>&apos;left&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>return_offsets_mapping:<sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>offsets_mapping<sp/>in<sp/>tokenization<sp/>to<sp/>delineate<sp/>token<sp/>segment<sp/>positions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server_tokens<sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1af2fb1f8356881cc49cc3d29e12ab5dfc" kindref="member">tokenizer</ref>(to_text_batch,<sp/>return_offsets_mapping=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>add_special_tokens=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std_tokens<sp/>=<sp/>std_tokenizer(text_batch,<sp/>return_offsets_mapping=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)<sp/><sp/></highlight><highlight class="comment">#<sp/>encode<sp/>again<sp/>to<sp/>get<sp/>offsets<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pad<sp/>offsets<sp/>so<sp/>that<sp/>special<sp/>token<sp/>offset<sp/>widths<sp/>match<sp/>for<sp/>continued<sp/>correct<sp/>alignment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokens[</highlight><highlight class="stringliteral">&apos;offset_mapping&apos;</highlight><highlight class="normal">]<sp/>=<sp/>pad_offsets(server_tokens[</highlight><highlight class="stringliteral">&apos;offset_mapping&apos;</highlight><highlight class="normal">],<sp/>to_offsets_batch,<sp/>pad_offsets_batch)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokens[</highlight><highlight class="stringliteral">&apos;offset_mapping_std&apos;</highlight><highlight class="normal">]<sp/>=<sp/>pad_offsets(std_tokens[</highlight><highlight class="stringliteral">&apos;offset_mapping&apos;</highlight><highlight class="normal">],<sp/>from_offsets_batch,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pad_offsets_batch)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tokens</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ae1bba88e9b29c127cc9086eafa8ccb38" kindref="member">forward</ref>(self,<sp/>inputs,<sp/>tokenizer=None):</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Forward<sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"><sp/>through<sp/>the<sp/>whole<sp/>server<sp/>model.<sp/>Returns<sp/>the<sp/>loss<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>decoded<sp/>predictions.</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs<sp/>(<sp/>:obj:`torch.Tensor`,<sp/>`required`):</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch<sp/>inputs<sp/>to<sp/>be<sp/>forward<sp/>processed.</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokenizer<sp/>(:obj:</highlight><highlight class="stringliteral">&apos;huggingface.tokenizer&apos;</highlight><highlight class="normal">,<sp/>optional):</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>tokenizer<sp/>which<sp/>was<sp/>used<sp/>to<sp/>tokenize<sp/>the<sp/>inputs</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loss<sp/>(:obj:`torch.FloatTensor`):</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MLM<sp/>loss<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>the<sp/>inputs</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoded_targets<sp/>(:obj:`torch.FloatTensor`):</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Decoded<sp/>predictions<sp/>of<sp/>the<sp/>next<sp/>token<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>sentence.</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="240"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message,<sp/>model_output,<sp/>decoded_targets<sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a6638393fba593635bf489b0575b80752" kindref="member">local_forward</ref>(inputs,<sp/>tokenizer)</highlight></codeline>
<codeline lineno="241"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift_logits<sp/>=<sp/>decoded_targets[...,<sp/>:-1,<sp/>:].contiguous()</highlight></codeline>
<codeline lineno="242"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift_labels<sp/>=<sp/>inputs[...,<sp/>1:].contiguous()</highlight></codeline>
<codeline lineno="243"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loss<sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a499385f44e3a8639cb02a41a18adf969" kindref="member">loss_fct</ref>(<sp/>shift_logits.view(-1,<sp/>shift_logits.size(-1)),<sp/>shift_labels.view(-1)<sp/>)</highlight></codeline>
<codeline lineno="244"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="245"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loss,<sp/>decoded_targets</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a6638393fba593635bf489b0575b80752" kindref="member">local_forward</ref>(self,<sp/>token_batch,<sp/>tokenizer=None,<sp/>encode_len=bittensor.__network_dim__,<sp/>model_output<sp/>=<sp/>None):</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Forward<sp/>pass<sp/>through<sp/>the<sp/>pretrained<sp/>model<sp/>and<sp/>possible<sp/>mappings<sp/>between<sp/>hidden<sp/>units.</highlight></codeline>
<codeline lineno="249"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>response<sp/>tensor<sp/>should<sp/>be<sp/>the<sp/>hidden<sp/>units<sp/>computed<sp/>using<sp/>the<sp/>local<sp/>context<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>shape:<sp/>[batch_size,<sp/>sequence_len,<sp/>__vocab_size__].</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token_batch<sp/>(<sp/>:obj:`torch.LongTensor`,<sp/>`required`):</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch<sp/>inputs<sp/>to<sp/>be<sp/>forward<sp/>processed,<sp/>[batch_size,<sp/>sequence_len]</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokenizer<sp/>(<sp/>huggingface.tokenizer,<sp/>`optional`):</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>tokenizer<sp/>which<sp/>was<sp/>used<sp/>to<sp/>tokenize<sp/>the<sp/>inputs</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encode_len<sp/>(<sp/>:obj:`int`,<sp/>`optional`):</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logit<sp/>encoding<sp/>length,<sp/>default<sp/>bittensor.__network_dim__<sp/>length</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_output<sp/>(:obj:`transformers.modeling_outputs.BaseModelOutputWithCrossAttentions`,<sp/>`optional`):</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>output<sp/>of<sp/>huggingface<sp/>auto<sp/>model.</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_outputs<sp/>(:obj:`transformers.modeling_outputs.BaseModelOutputWithCrossAttentions`,<sp/>`required`):</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>output<sp/>of<sp/>huggingface<sp/>auto<sp/>model.</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logits<sp/>(:obj:`torch.FloatTensor`):</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>nucleus</highlight><highlight class="stringliteral">&apos;s<sp/>logit<sp/>outputs<sp/>as<sp/>a<sp/>torch<sp/>tensor<sp/>of<sp/>shape<sp/>[batch_size,<sp/>sequence_len,<sp/>__vocab_size__]</highlight></codeline>
<codeline lineno="268"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="269"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokens<sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a3e684c0f6202d453f185afba381919be" kindref="member">token_remap</ref>(token_batch,<sp/>std_tokenizer=tokenizer,<sp/>return_offsets_mapping=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)<sp/><sp/></highlight><highlight class="comment">#<sp/>remap<sp/>to<sp/>server<sp/>tokenizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>model_output<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a1fe51e3db9d34b727f1065d635974c4e" kindref="member">config</ref><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ab73ed844f7bac4c98193de3a20df9779" kindref="member">config</ref>.neuron.local_train:</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_output<sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a19dd46f7b10bcf825fceef96966c5273" kindref="member">pre_model</ref>(input_ids=tokens[</highlight><highlight class="stringliteral">&apos;input_ids&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attention_mask=tokens[</highlight><highlight class="stringliteral">&apos;attention_mask&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_hidden_states=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>torch.no_grad():</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_output<sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a19dd46f7b10bcf825fceef96966c5273" kindref="member">pre_model</ref>(input_ids=tokens[</highlight><highlight class="stringliteral">&apos;input_ids&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attention_mask=tokens[</highlight><highlight class="stringliteral">&apos;attention_mask&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_hidden_states=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>model_output,<sp/>model_output.logits</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ab592da0bacc745c98011d8e064190570" kindref="member">encode_forward</ref>(self,inputs,tokenizer=None,<sp/>model_output<sp/>=<sp/>None):</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Forward<sp/>pass<sp/>through<sp/>the<sp/>pretrained<sp/>model<sp/>and<sp/>possible<sp/>mappings<sp/>between<sp/>hidden<sp/>units.<sp/></highlight></codeline>
<codeline lineno="285"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>response<sp/>tensor<sp/>should<sp/>be<sp/>the<sp/>hidden<sp/>units<sp/>computed<sp/>using<sp/>the<sp/>local<sp/>context<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>shape:<sp/>[batch_size,<sp/>sequence_len,<sp/>__network_dim__].</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs<sp/>(<sp/>:obj:`torch.Tensor`,<sp/>`required`):</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch<sp/>inputs<sp/>to<sp/>be<sp/>forward<sp/>processed.</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokenizer<sp/>(<sp/>huggingface.tokenizer,<sp/>`optional`):</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>tokenizer<sp/>which<sp/>was<sp/>used<sp/>to<sp/>tokenize<sp/>the<sp/>inputs</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_outputs<sp/>(:obj:`transformers.modeling_outputs.BaseModelOutputWithCrossAttentions`,<sp/>`optional`):</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>output<sp/>of<sp/>huggingface<sp/>auto<sp/>model.</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_outputs<sp/>(:obj:`transformers.modeling_outputs.BaseModelOutputWithCrossAttentions`,<sp/>`required`):</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>output<sp/>of<sp/>huggingface<sp/>auto<sp/>model.</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoded_hidden<sp/>(:type:`torch.Tensor`,<sp/>`required`)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>hidden<sp/>layer<sp/>output<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>a<sp/>torch<sp/>tensor<sp/>of<sp/>shape<sp/>[batch_size,<sp/>sequence_len,<sp/>__network_dim__<sp/>]</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="302"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transformers.set_seed(0)</highlight></codeline>
<codeline lineno="303"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transformers.enable_full_determinism(0)</highlight></codeline>
<codeline lineno="304"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="305"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sen_len<sp/>=<sp/>inputs.size()</highlight></codeline>
<codeline lineno="306"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokens<sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a3e684c0f6202d453f185afba381919be" kindref="member">token_remap</ref>(inputs,<sp/>tokenizer)<sp/><sp/></highlight><highlight class="comment">#<sp/>remap<sp/>to<sp/>server<sp/>tokenizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>model_output<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a1fe51e3db9d34b727f1065d635974c4e" kindref="member">config</ref><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ab73ed844f7bac4c98193de3a20df9779" kindref="member">config</ref>.neuron.remote_train:</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_output<sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a19dd46f7b10bcf825fceef96966c5273" kindref="member">pre_model</ref>(input_ids=tokens[</highlight><highlight class="stringliteral">&apos;input_ids&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attention_mask=tokens[</highlight><highlight class="stringliteral">&apos;attention_mask&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_hidden_states=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>torch.no_grad():</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_output<sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a19dd46f7b10bcf825fceef96966c5273" kindref="member">pre_model</ref>(input_ids=tokens[</highlight><highlight class="stringliteral">&apos;input_ids&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attention_mask=tokens[</highlight><highlight class="stringliteral">&apos;attention_mask&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_hidden_states=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_hidden<sp/>=<sp/>model_output.hidden_states[-1]</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a8e361a0163795bb84e3ed0c0d8aea22a" kindref="member">interpolate</ref><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>sen_len[1]<sp/>!=<sp/>pre_hidden.size()[1]:</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>down=<sp/>F.interpolate(pre_hidden.unsqueeze(1),size=[sen_len[1],pre_hidden.size()[2]],mode=self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a4b00d04e2efafcd5ab2ef09a0f6e95ec" kindref="member">inter_degree</ref>).squeeze(1)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a73c162f7a06d87ef824b2da7c1a1cdb0" kindref="member">mapping_function</ref>:</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>down<sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a73c162f7a06d87ef824b2da7c1a1cdb0" kindref="member">mapping_function</ref>(pre_hidden)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>down<sp/>=<sp/>pre_hidden</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1aa8d8826166f382eb1e2d2f877010737e" kindref="member">padding</ref>:</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>padding_l<sp/>=<sp/>(self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ae8c3bbd769bb479e7ee08d86452f4115" kindref="member">final_dim</ref>-self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a91f231d0ec2453812dbba74395ace7d5" kindref="member">pre_dimension</ref>)//2</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>padding_r<sp/>=<sp/>(self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ae8c3bbd769bb479e7ee08d86452f4115" kindref="member">final_dim</ref>-self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a91f231d0ec2453812dbba74395ace7d5" kindref="member">pre_dimension</ref>)<sp/>-<sp/>padding_l</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoded_hidden<sp/>=<sp/>F.pad(down,<sp/>(padding_l,<sp/>padding_r),<sp/><sp/></highlight><highlight class="stringliteral">&quot;constant&quot;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoded_hidden<sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a24846bd379930a27372f3ae3f3254dc7" kindref="member">mapping</ref>(down)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>model_output,<sp/>encoded_hidden</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a9fe04678b6dcce05a3f9d3f25b31d65f" kindref="member">encode_forward_causallm</ref>(self,<sp/>token_batch,<sp/>tokenizer=None,<sp/>encode_len=bittensor.__network_dim__,<sp/>model_output=None):</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Forward<sp/>pass<sp/>through<sp/>the<sp/>pretrained<sp/>model<sp/>and<sp/>possible<sp/>mappings<sp/>between<sp/>hidden<sp/>units.</highlight></codeline>
<codeline lineno="339"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>response<sp/>tensor<sp/>should<sp/>be<sp/>the<sp/>hidden<sp/>units<sp/>computed<sp/>using<sp/>the<sp/>local<sp/>context<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>shape:<sp/>[batch_size,<sp/>sequence_len,<sp/>__vocab_size__].</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token_batch<sp/>(<sp/>:obj:`torch.LongTensor`,<sp/>`required`):</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch<sp/>inputs<sp/>to<sp/>be<sp/>forward<sp/>processed,<sp/>[batch_size,<sp/>sequence_len]</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokenizer<sp/>(<sp/>huggingface.tokenizer,<sp/>`optional`):</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>tokenizer<sp/>which<sp/>was<sp/>used<sp/>to<sp/>tokenize<sp/>the<sp/>inputs</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encode_len<sp/>(<sp/>:obj:`int`,<sp/>`optional`):</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logit<sp/>encoding<sp/>length,<sp/>default<sp/>bittensor.__network_dim__<sp/>length</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_output<sp/>(:obj:`transformers.modeling_outputs.BaseModelOutputWithCrossAttentions`,<sp/>`optional`):</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>output<sp/>of<sp/>huggingface<sp/>auto<sp/>model.</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_outputs<sp/>(:obj:`transformers.modeling_outputs.BaseModelOutputWithCrossAttentions`,<sp/>`required`):</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>output<sp/>of<sp/>huggingface<sp/>auto<sp/>model.</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logits_std<sp/>(:obj:`torch.FloatTensor`):</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>nucleus</highlight><highlight class="stringliteral">&apos;s<sp/>logit<sp/>outputs<sp/>as<sp/>a<sp/>torch<sp/>tensor<sp/>of<sp/>shape<sp/>[batch_size,<sp/>sequence_len,<sp/>__vocab_size__]</highlight></codeline>
<codeline lineno="358"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="359"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transformers.set_seed(0)</highlight></codeline>
<codeline lineno="360"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transformers.enable_full_determinism(0)</highlight></codeline>
<codeline lineno="361"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="362"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokens<sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a3e684c0f6202d453f185afba381919be" kindref="member">token_remap</ref>(token_batch,<sp/>std_tokenizer=tokenizer,<sp/>return_offsets_mapping=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)<sp/><sp/></highlight><highlight class="comment">#<sp/>remap<sp/>to<sp/>server<sp/>tokenizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_forward(_model_output=model_output):</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>_model_output<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>transformer<sp/>models<sp/>like<sp/>gerpt2<sp/>typically<sp/>perform<sp/>worse<sp/>with<sp/>left-side<sp/>attention<sp/>mask,<sp/>so<sp/>turning<sp/>it<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_model_output<sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a19dd46f7b10bcf825fceef96966c5273" kindref="member">pre_model</ref>(input_ids=tokens[</highlight><highlight class="stringliteral">&apos;input_ids&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#attention_mask=tokens[&apos;attention_mask&apos;],</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_hidden_states=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_logits<sp/>=<sp/>_model_output.logits<sp/><sp/></highlight><highlight class="comment">#<sp/>[batch_size,<sp/>sequence_len,<sp/>self.tokenizer.vocab_len]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probs_std<sp/>=<sp/>translate_logits_to_probs_std(pre_logits,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokens[</highlight><highlight class="stringliteral">&apos;offset_mapping&apos;</highlight><highlight class="normal">],<sp/>tokens[</highlight><highlight class="stringliteral">&apos;offset_mapping_std&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1af2fb1f8356881cc49cc3d29e12ab5dfc" kindref="member">tokenizer</ref>,<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a2ea0c9a2c94e7361a527199d06c2e7a7" kindref="member">std_tokenizer</ref>,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a21794b8b4d9c313aa791915cc710105d" kindref="member">split_map_cache</ref>,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a9b2ffcddff2457f054c9a8defe165bea" kindref="member">to_translation_map</ref>,<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a98a186d02407406e0600f46340c04cc0" kindref="member">from_translation_map</ref>,</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokens[</highlight><highlight class="stringliteral">&apos;input_ids&apos;</highlight><highlight class="normal">],<sp/>token_batch)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probs_std<sp/>=<sp/>probs_std.to(self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ae899ad3334d1974b0a39a10e30367abf" kindref="member">device</ref>)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logits_std<sp/>=<sp/>torch.log(probs_std<sp/>+<sp/>1e-40)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#removing<sp/>the<sp/>loss<sp/>calculation<sp/>for<sp/>stablity<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_loss<sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1af1ec54d7eb69b55a7c551c37bcb01930" kindref="member">get_loss_fct</ref>(pre_logits,<sp/>tokens[</highlight><highlight class="stringliteral">&apos;input_ids&apos;</highlight><highlight class="normal">]).item()</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>translated_loss<sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1af1ec54d7eb69b55a7c551c37bcb01930" kindref="member">get_loss_fct</ref>(logits_std,<sp/>token_batch).item()</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/>f</highlight><highlight class="stringliteral">&apos;Loss:<sp/>{original_loss:.2f}<sp/>→<sp/>{translated_loss:.2f}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>message,<sp/>_model_output,<sp/>logits_std</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a1fe51e3db9d34b727f1065d635974c4e" kindref="member">config</ref><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ab73ed844f7bac4c98193de3a20df9779" kindref="member">config</ref>.neuron.remote_train:</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_forward()<sp/><sp/></highlight><highlight class="comment">#<sp/>track<sp/>gradients<sp/>for<sp/>training</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>torch.no_grad():</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_forward()<sp/><sp/></highlight><highlight class="comment">#<sp/>no<sp/>gradients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1aa75186146bb39740317a5476a71261ec" kindref="member">encode_forward_causallmnext</ref>(self,<sp/>token_batch,<sp/>std_tokenizer=None,<sp/>topk:<sp/>int<sp/>=<sp/>4096,<sp/>model_output=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="396"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Forward<sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"><sp/>through<sp/>the<sp/>pretrained<sp/>model<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>select<sp/>topk<sp/>tokenizer<sp/>logits<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>retokenize<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>std_tokenizer,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>then<sp/>compact<sp/>new<sp/>token<sp/>phrases<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>probabilities</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>into<sp/>1-D<sp/>tensor<sp/>[<sp/>&gt;=<sp/>batch_size<sp/>*<sp/>(2<sp/>*<sp/>topk<sp/>+<sp/>1)]<sp/>prob<sp/>+<sp/>at<sp/>least<sp/>1<sp/>token<sp/>per<sp/>phrase<sp/>+<sp/>floor_prob.</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>floor<sp/>probability<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>the<sp/>mean<sp/>probability<sp/>of<sp/>token<sp/>phrases<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>captured<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>topk,<sp/>required<sp/>since</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>server<sp/>tokenizer<sp/>vocab_size<sp/>may<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>be<sp/>known<sp/>to<sp/>the<sp/>receiver/validator.</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token_batch<sp/>(<sp/>:obj:`torch.LongTensor`,<sp/>`required`):</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch<sp/>inputs<sp/>to<sp/>be<sp/>forward<sp/>processed,<sp/>[batch_size,<sp/>std_sequence_len].</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std_tokenizer<sp/>(<sp/>:obj:`PreTrainedTokenizerBase`,<sp/>`optional`):</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>standard<sp/>tokenizer<sp/>which<sp/>was<sp/>used<sp/>to<sp/>tokenize<sp/>the<sp/>inputs.</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topk<sp/>(<sp/>:obj:`int`,<sp/>`optional`):</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Amount<sp/>of<sp/>std_tokenized<sp/>server<sp/>phrases<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>highest<sp/>probability<sp/>to<sp/>produce.</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_output<sp/>(:obj:`transformers.modeling_outputs.BaseModelOutputWithCrossAttentions`,<sp/>`optional`):</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>output<sp/>of<sp/>transformers<sp/>AutoModel.</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_outputs<sp/>(:obj:`transformers.modeling_outputs.BaseModelOutputWithCrossAttentions`,<sp/>`required`):</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>output<sp/>of<sp/>transformers<sp/>AutoModel.</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topk_tensor<sp/>(:obj:`torch.Tensor`,<sp/>`required`):</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[batch_size,<sp/>(topk<sp/>+<sp/>1),<sp/>max_len]<sp/>tensor<sp/>includes<sp/>topk<sp/>token<sp/>probabilities<sp/>(prob_k)<sp/>+<sp/>floor_prob</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>first<sp/>column<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>gradients<sp/>attached,<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>std_tokens<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>remaining<sp/>columns<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>ignore_index<sp/>padding.</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Content<sp/>structure:</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[[prob_k=0_b=0,<sp/>tok_0_k=0_b=0,<sp/>tok_1_k=0_b=0,<sp/>...,<sp/>ignore_index?],</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[prob_k=1_b=0,<sp/>tok_0_k=1_b=0,<sp/>tok_1_k=1_b=0,<sp/>...,<sp/>ignore_index?],</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[...],</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[prob_floor_b=0,<sp/>ignore_index,<sp/>...,<sp/>ignore_index]],</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[prob_k=0_b=1,<sp/>tok_0_k=0_b=1,<sp/>tok_1_k=0_b=1,<sp/>...,<sp/>ignore_index?],</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[prob_k=1_b=1,<sp/>tok_0_k=1_b=1,<sp/>tok_1_k=1_b=1,<sp/>...,<sp/>ignore_index?],</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[...],</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[prob_floor_b=1,<sp/>ignore_index,<sp/>...,<sp/>ignore_index]],</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[...]]</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="429"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transformers.set_seed(0)</highlight></codeline>
<codeline lineno="430"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transformers.enable_full_determinism(0)</highlight></codeline>
<codeline lineno="431"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="432"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>std_tokenizer<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std_tokenizer<sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a2ea0c9a2c94e7361a527199d06c2e7a7" kindref="member">std_tokenizer</ref></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokens<sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a3e684c0f6202d453f185afba381919be" kindref="member">token_remap</ref>(token_batch,<sp/>std_tokenizer)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_forward(_model_output=model_output):</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>_model_output<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_model_output<sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a19dd46f7b10bcf825fceef96966c5273" kindref="member">pre_model</ref>(input_ids=tokens[</highlight><highlight class="stringliteral">&apos;input_ids&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attention_mask=tokens[</highlight><highlight class="stringliteral">&apos;attention_mask&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_hidden_states=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>model_output.logits:<sp/>[batch_size,<sp/>sequence_len,<sp/>server_vocab_size]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_logits<sp/>=<sp/>_model_output.logits[:,<sp/>-1,<sp/>:]<sp/><sp/></highlight><highlight class="comment">#<sp/>[batch_size]<sp/>server<sp/>prediction<sp/>of<sp/>continuation,<sp/>right-aligned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Select<sp/>topk<sp/>tokenizer<sp/>logits<sp/>and<sp/>retokenize<sp/>with<sp/>std_tokenizer,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>then<sp/>compact<sp/>new<sp/>token<sp/>phrases<sp/>and<sp/>probabilities<sp/>into<sp/>1-D<sp/>tensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topk_tensor<sp/>=<sp/>topk_token_phrases(last_logits,<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1af2fb1f8356881cc49cc3d29e12ab5dfc" kindref="member">tokenizer</ref>,<sp/>topk=topk)<sp/><sp/></highlight><highlight class="comment">#<sp/>[batch_size,<sp/>(topk<sp/>+<sp/>1),<sp/>max_len]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_loss<sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1af1ec54d7eb69b55a7c551c37bcb01930" kindref="member">get_loss_fct</ref>(_model_output.logits,<sp/>tokens[</highlight><highlight class="stringliteral">&apos;input_ids&apos;</highlight><highlight class="normal">]).item()</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/>f</highlight><highlight class="stringliteral">&apos;Loss:<sp/>{original_loss:.2f}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_model_output.loss<sp/>=<sp/>original_loss</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>message,<sp/>_model_output,<sp/>topk_tensor</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a1fe51e3db9d34b727f1065d635974c4e" kindref="member">config</ref><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1ab73ed844f7bac4c98193de3a20df9779" kindref="member">config</ref>.neuron.remote_train:</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_forward()<sp/><sp/></highlight><highlight class="comment">#<sp/>track<sp/>gradients<sp/>for<sp/>training</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>torch.no_grad():</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_forward()<sp/><sp/></highlight><highlight class="comment">#<sp/>no<sp/>gradients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1af1ec54d7eb69b55a7c551c37bcb01930" kindref="member">get_loss_fct</ref>(self,<sp/>logits:<sp/>torch.FloatTensor,<sp/>labels:<sp/>torch.LongTensor)<sp/>-&gt;<sp/>torch.FloatTensor:</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="464"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Calculate<sp/>loss_fct,<sp/>CausalLM<sp/>loss,<sp/>next-token<sp/>prediction<sp/>loss.</highlight></codeline>
<codeline lineno="465"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="466"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logits<sp/>(:obj:`torch.FloatTensor`,<sp/>`required`):</highlight></codeline>
<codeline lineno="467"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[batch_size,<sp/>sequence_len,<sp/>bittensor.__network_dim__]</highlight></codeline>
<codeline lineno="468"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels<sp/>(:obj:`torch.LongTensor`,<sp/>`required`):</highlight></codeline>
<codeline lineno="469"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[batch_size,<sp/>sequence_len]</highlight></codeline>
<codeline lineno="470"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="471"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="472"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loss<sp/>(:obj:`torch.FloatTensor`):</highlight></codeline>
<codeline lineno="473"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalar</highlight></codeline>
<codeline lineno="474"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="475"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift_logits<sp/>=<sp/>logits[...,<sp/>:-1,<sp/>:].contiguous()</highlight></codeline>
<codeline lineno="476"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift_labels<sp/>=<sp/>labels[...,<sp/>1:].contiguous()</highlight></codeline>
<codeline lineno="477"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loss<sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a499385f44e3a8639cb02a41a18adf969" kindref="member">loss_fct</ref>(shift_logits.view(-1,<sp/>shift_logits.size(-1)),<sp/>shift_labels.view(-1))</highlight></codeline>
<codeline lineno="478"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="479"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loss</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a99bcd6cc84c562d1db5cac8e585576d7" kindref="member">check</ref>(self):</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;Checks<sp/>the<sp/>server<sp/>settings</highlight></codeline>
<codeline lineno="483"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="484"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1af2fb1f8356881cc49cc3d29e12ab5dfc" kindref="member">tokenizer</ref>.name_or_path<sp/>==<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a19dd46f7b10bcf825fceef96966c5273" kindref="member">pre_model</ref>.name_or_path,<sp/></highlight><highlight class="stringliteral">&apos;incorrect<sp/>model<sp/>({})<sp/>and<sp/>tokenizer<sp/>({})&apos;</highlight><highlight class="normal">.format(self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a19dd46f7b10bcf825fceef96966c5273" kindref="member">pre_model</ref>.name_or_path,self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1af2fb1f8356881cc49cc3d29e12ab5dfc" kindref="member">tokenizer</ref>.name_or_path)</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a8e361a0163795bb84e3ed0c0d8aea22a" kindref="member">interpolate</ref><sp/>==<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a73c162f7a06d87ef824b2da7c1a1cdb0" kindref="member">mapping_function</ref><sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Incorrect<sp/>Settings;<sp/>needs<sp/>atleast<sp/>one<sp/>mapping<sp/>function<sp/>for<sp/>sequence<sp/>length<sp/>changes&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">save(self,<sp/>path):</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_dict<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;model&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a43a711aa5b2f3fb5f3e0444c0b348d2c" kindref="member">pretrained</ref>,</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;pretrained_model&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a19dd46f7b10bcf825fceef96966c5273" kindref="member">pre_model</ref>.state_dict(),<sp/></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;decoder&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1af9d0050ad9132134af85214098b41b8b" kindref="member">decoder</ref>.state_dict(),</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;best_loss&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a4bb4e0ae1dd2ad2978d301a89075b92b" kindref="member">best_loss</ref>,</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;best_remote_loss&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a0ebc1b62937f368ec16fc15fba2e6731" kindref="member">best_remote_loss</ref>,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1aa8d8826166f382eb1e2d2f877010737e" kindref="member">padding</ref><sp/>==<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_dict[</highlight><highlight class="stringliteral">&apos;mapping&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a24846bd379930a27372f3ae3f3254dc7" kindref="member">mapping</ref>.state_dict()</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch.save(<sp/>state_dict,<sp/></highlight><highlight class="stringliteral">&quot;{}/model.torch&quot;</highlight><highlight class="normal">.format(<sp/>path)<sp/>)</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor.logging.success(prefix=</highlight><highlight class="stringliteral">&apos;Saved<sp/>model&apos;</highlight><highlight class="normal">,<sp/>sufix=</highlight><highlight class="stringliteral">&apos;&lt;blue&gt;{}/model.torch&lt;/blue&gt;&apos;</highlight><highlight class="normal">.format(<sp/>path<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.exception(</highlight><highlight class="stringliteral">&apos;Failed<sp/>to<sp/>save<sp/>model<sp/>with<sp/>error:{}&apos;</highlight><highlight class="normal">,<sp/>e)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">load(self,<sp/>path):</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_dict=<sp/><sp/>torch.load(</highlight><highlight class="stringliteral">&quot;{}/model.torch&quot;</highlight><highlight class="normal">.format(<sp/>path<sp/>))</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a43a711aa5b2f3fb5f3e0444c0b348d2c" kindref="member">pretrained</ref><sp/>==<sp/>state_dict[</highlight><highlight class="stringliteral">&apos;model&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a19dd46f7b10bcf825fceef96966c5273" kindref="member">pre_model</ref>.load_state_dict(state_dict[</highlight><highlight class="stringliteral">&apos;pretrained_model&apos;</highlight><highlight class="normal">],<sp/>strict=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1af9d0050ad9132134af85214098b41b8b" kindref="member">decoder</ref>.load_state_dict(state_dict[</highlight><highlight class="stringliteral">&apos;decoder&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1aa8d8826166f382eb1e2d2f877010737e" kindref="member">padding</ref><sp/>==<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a24846bd379930a27372f3ae3f3254dc7" kindref="member">mapping</ref>.load_state_dict(state_dict[</highlight><highlight class="stringliteral">&apos;mapping&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a4bb4e0ae1dd2ad2978d301a89075b92b" kindref="member">best_loss</ref><sp/>=<sp/>state_dict[</highlight><highlight class="stringliteral">&apos;best_loss&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__neuron_1_1text_1_1core__server_1_1nucleus__impl_1_1server_1a0ebc1b62937f368ec16fc15fba2e6731" kindref="member">best_remote_loss</ref><sp/>=<sp/>state_dict[</highlight><highlight class="stringliteral">&apos;best_remote_loss&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor.logging.success(<sp/>prefix<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Reloaded<sp/>model&apos;</highlight><highlight class="normal">,<sp/>sufix<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&lt;blue&gt;{}/model.torch&lt;/blue&gt;&apos;</highlight><highlight class="normal">.format(<sp/>path<sp/>))</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.warning(</highlight><highlight class="stringliteral">&apos;No<sp/>saved<sp/>model<sp/>found<sp/>with<sp/>error:<sp/>{}&apos;</highlight><highlight class="normal">,<sp/>e)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@staticmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__config_1_1config" kindref="compound">config</ref><sp/>():</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser<sp/>=<sp/>argparse.ArgumentParser()</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--config&apos;</highlight><highlight class="normal">,<sp/>type=str,<sp/>help=</highlight><highlight class="stringliteral">&apos;If<sp/>set,<sp/>defaults<sp/>are<sp/>overridden<sp/>by<sp/>passed<sp/>file.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>ML<sp/>model<sp/>arguements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.learning_rate&apos;</highlight><highlight class="normal">,<sp/>type=float,<sp/>help=</highlight><highlight class="stringliteral">&apos;Training<sp/>initial<sp/>learning<sp/>rate.&apos;</highlight><highlight class="normal">,<sp/>default=0.01)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.momentum&apos;</highlight><highlight class="normal">,<sp/>type=float,<sp/>help=</highlight><highlight class="stringliteral">&apos;optimizer<sp/>momentum.&apos;</highlight><highlight class="normal">,<sp/>default=0.8)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.clip_gradients&apos;</highlight><highlight class="normal">,<sp/>type=float,<sp/>help=</highlight><highlight class="stringliteral">&apos;Implement<sp/>gradient<sp/>clipping<sp/>to<sp/>avoid<sp/>exploding<sp/>loss<sp/>on<sp/>smaller<sp/>architectures.&apos;</highlight><highlight class="normal">,<sp/>default=1.0)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.device&apos;</highlight><highlight class="normal">,<sp/>type=str,<sp/>help=</highlight><highlight class="stringliteral">&apos;miner<sp/>default<sp/>training<sp/>device<sp/>cpu/cuda&apos;</highlight><highlight class="normal">,<sp/>default=(</highlight><highlight class="stringliteral">&quot;cuda&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>torch.cuda.is_available()<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;cpu&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.model_name&apos;</highlight><highlight class="normal">,<sp/>type=str,<sp/>help=</highlight><highlight class="stringliteral">&apos;pretrained<sp/>model<sp/>from<sp/>hugging<sp/>face&apos;</highlight><highlight class="normal">,default=</highlight><highlight class="stringliteral">&apos;gpt2&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.pretrained&apos;</highlight><highlight class="normal">,<sp/>action=</highlight><highlight class="stringliteral">&apos;store_false&apos;</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&apos;if<sp/>the<sp/>model<sp/>should<sp/>be<sp/>pretrained&apos;</highlight><highlight class="normal">,default=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.padding&apos;</highlight><highlight class="normal">,<sp/>action=</highlight><highlight class="stringliteral">&apos;store_false&apos;</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&apos;To<sp/>pad<sp/>out<sp/>final<sp/>dimensions&apos;</highlight><highlight class="normal">,default=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.interpolate&apos;</highlight><highlight class="normal">,<sp/>action=</highlight><highlight class="stringliteral">&apos;store_false&apos;</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&apos;To<sp/>interpolate<sp/>between<sp/>sentence<sp/>length&apos;</highlight><highlight class="normal">,default=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.inter_degree&apos;</highlight><highlight class="normal">,<sp/>type=str,<sp/>help=</highlight><highlight class="stringliteral">&apos;Interpolate<sp/>algorithm<sp/>(nearest<sp/>|<sp/>linear<sp/>|<sp/>bilinear<sp/>|<sp/>bicubic<sp/>|<sp/>trilinear<sp/>|<sp/>area)&apos;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="stringliteral">&apos;nearest&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.autocast&apos;</highlight><highlight class="normal">,<sp/><sp/>action=</highlight><highlight class="stringliteral">&apos;store_true&apos;</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&apos;(experimental)<sp/>autocasts<sp/>the<sp/>model<sp/>to<sp/>float16.<sp/>Must<sp/>require<sp/>cuda&apos;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.local_train&apos;</highlight><highlight class="normal">,<sp/>action=</highlight><highlight class="stringliteral">&apos;store_true&apos;</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&apos;&apos;&apos;If<sp/>true,<sp/>allow<sp/>local<sp/>training&apos;&apos;&apos;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.remote_train&apos;</highlight><highlight class="normal">,<sp/>action=</highlight><highlight class="stringliteral">&apos;store_true&apos;</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&apos;&apos;&apos;If<sp/>true,<sp/>allow<sp/>remote<sp/>training&apos;&apos;&apos;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.finetune.all&apos;</highlight><highlight class="normal">,<sp/>action=</highlight><highlight class="stringliteral">&apos;store_true&apos;</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&apos;Finetune<sp/>your<sp/>whole<sp/>model<sp/>instead<sp/>of<sp/>only<sp/>on<sp/>the<sp/>last<sp/>(few)<sp/>layers&apos;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.finetune.num_layers&apos;</highlight><highlight class="normal">,<sp/>type=int,<sp/>help=</highlight><highlight class="stringliteral">&apos;The<sp/>number<sp/>of<sp/>layers<sp/>to<sp/>finetune<sp/>on<sp/>your<sp/>model.&apos;</highlight><highlight class="normal">,<sp/>default=1)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.finetune.layer_name&apos;</highlight><highlight class="normal">,<sp/>type=str,<sp/>help=</highlight><highlight class="stringliteral">&apos;Specify<sp/>since<sp/>which<sp/>layer<sp/>to<sp/>finetune.<sp/>eg.<sp/>encoder.layer.11&apos;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Miner<sp/>arguements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.name&apos;</highlight><highlight class="normal">,<sp/>type=str,<sp/>help=</highlight><highlight class="stringliteral">&apos;Trials<sp/>for<sp/>this<sp/>miner<sp/>go<sp/>in<sp/>miner.root<sp/>/<sp/>(wallet_cold<sp/>-<sp/>wallet_hot)<sp/>/<sp/>miner.name<sp/>&apos;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="stringliteral">&apos;core_server&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.checking&apos;</highlight><highlight class="normal">,<sp/>action=</highlight><highlight class="stringliteral">&apos;store_false&apos;</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&apos;To<sp/>check<sp/>if<sp/>server<sp/>settings<sp/>are<sp/>correct&apos;</highlight><highlight class="normal">,default=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.restart&apos;</highlight><highlight class="normal">,<sp/>action=</highlight><highlight class="stringliteral">&apos;store_true&apos;</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&apos;If<sp/>True,<sp/>train<sp/>the<sp/>neuron<sp/>from<sp/>the<sp/>beginning&apos;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.no_set_weights&apos;</highlight><highlight class="normal">,<sp/>action=</highlight><highlight class="stringliteral">&apos;store_true&apos;</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&apos;If<sp/>True,<sp/>the<sp/>model<sp/>does<sp/>not<sp/>set<sp/>weights.&apos;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.blacklist.stake&apos;</highlight><highlight class="normal">,<sp/>type=float,<sp/>help=</highlight><highlight class="stringliteral">&apos;Amount<sp/>of<sp/>stake<sp/>(tao)<sp/>in<sp/>order<sp/>not<sp/>to<sp/>get<sp/>blacklisted&apos;</highlight><highlight class="normal">,<sp/>default=10)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.blocks_per_epoch&apos;</highlight><highlight class="normal">,<sp/>type=int,<sp/>help=</highlight><highlight class="stringliteral">&apos;Blocks<sp/>per<sp/>epoch&apos;</highlight><highlight class="normal">,<sp/>default=10)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.blacklist.time&apos;</highlight><highlight class="normal">,<sp/>type=int,<sp/>help=</highlight><highlight class="stringliteral">&apos;how<sp/>often<sp/>a<sp/>peer<sp/>can<sp/>query<sp/>you<sp/>(seconds)<sp/>&apos;</highlight><highlight class="normal">,<sp/>default=1)</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.blocks_per_set_weights&apos;</highlight><highlight class="normal">,<sp/>type=float,<sp/>help=</highlight><highlight class="stringliteral">&apos;how<sp/>often<sp/>to<sp/>set<sp/>weights&apos;</highlight><highlight class="normal">,<sp/>default=-1)</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.metagraph_sync&apos;</highlight><highlight class="normal">,<sp/>type=float,<sp/>help=</highlight><highlight class="stringliteral">&apos;how<sp/>often<sp/>to<sp/>sync<sp/>the<sp/>metagraph&apos;</highlight><highlight class="normal">,<sp/>default=100000)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.blacklist_allow_non_registered&apos;</highlight><highlight class="normal">,<sp/>action=</highlight><highlight class="stringliteral">&apos;store_true&apos;</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&apos;&apos;&apos;If<sp/>true,<sp/>allow<sp/>non-registered<sp/>peers&apos;&apos;&apos;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.disable_blacklist&apos;</highlight><highlight class="normal">,<sp/>action=</highlight><highlight class="stringliteral">&apos;store_true&apos;</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&apos;Turns<sp/>off<sp/>blacklisting&apos;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.disable_priority&apos;</highlight><highlight class="normal">,<sp/>action=</highlight><highlight class="stringliteral">&apos;store_true&apos;</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&apos;Turns<sp/>off<sp/>priority<sp/>threadpool&apos;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.num_remote_loss&apos;</highlight><highlight class="normal">,<sp/>type=int,<sp/>help=</highlight><highlight class="stringliteral">&apos;Number<sp/>of<sp/>past<sp/>remote<sp/>loss<sp/>to<sp/>keep<sp/>in<sp/>stat.&apos;</highlight><highlight class="normal">,<sp/>default=20)</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Synapse<sp/>Arguements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.lasthidden&apos;</highlight><highlight class="normal">,<sp/>action=</highlight><highlight class="stringliteral">&apos;store_false&apos;</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&apos;To<sp/>turn<sp/>off<sp/>last<sp/>hidden<sp/>synapse&apos;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.causallm&apos;</highlight><highlight class="normal">,<sp/>action=</highlight><highlight class="stringliteral">&apos;store_false&apos;</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&apos;To<sp/>turn<sp/>off<sp/>causallm<sp/>synapse&apos;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.causallmnext&apos;</highlight><highlight class="normal">,<sp/>action=</highlight><highlight class="stringliteral">&apos;store_false&apos;</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&apos;To<sp/>turn<sp/>off<sp/>causallmnext<sp/>synapse&apos;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.seq2seq&apos;</highlight><highlight class="normal">,<sp/>action=</highlight><highlight class="stringliteral">&apos;store_false&apos;</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&apos;To<sp/>turn<sp/>off<sp/>seq2seq<sp/>synapse&apos;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.lasthidden_stake&apos;</highlight><highlight class="normal">,<sp/>type<sp/>=<sp/>float,<sp/>help=</highlight><highlight class="stringliteral">&apos;the<sp/>amount<sp/>of<sp/>stake<sp/>to<sp/>run<sp/>last<sp/>hidden<sp/>synapse&apos;</highlight><highlight class="normal">,default=0)</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.causallm_stake&apos;</highlight><highlight class="normal">,<sp/><sp/>type<sp/>=<sp/>float,<sp/>help=</highlight><highlight class="stringliteral">&apos;the<sp/>amount<sp/>of<sp/>stake<sp/>to<sp/>run<sp/>causallm<sp/>synapse&apos;</highlight><highlight class="normal">,default=0)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.causallmnext_stake&apos;</highlight><highlight class="normal">,<sp/>type=float,<sp/>help=</highlight><highlight class="stringliteral">&apos;the<sp/>amount<sp/>of<sp/>stake<sp/>to<sp/>run<sp/>causallmnext<sp/>synapse&apos;</highlight><highlight class="normal">,<sp/>default=0)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&apos;--neuron.seq2seq_stake&apos;</highlight><highlight class="normal">,<sp/><sp/>type<sp/>=<sp/>float,<sp/>help=</highlight><highlight class="stringliteral">&apos;the<sp/>amount<sp/>of<sp/>stake<sp/>to<sp/>run<sp/>seq2seq<sp/>synapse&apos;</highlight><highlight class="normal">,default=0)</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor.wallet.add_args(<sp/>parser<sp/>)</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor.axon.add_args(<sp/>parser<sp/>)</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor.subtensor.add_args(<sp/>parser<sp/>)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor.logging.add_args(<sp/>parser<sp/>)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor.wandb.add_args(parser)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor.prioritythreadpool.add_args(<sp/>parser<sp/>)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor.dataset.add_args(<sp/>parser<sp/>)</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor.metagraph.add_args(<sp/>parser<sp/>)</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor.prometheus.add_args(<sp/>parser<sp/>)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classbittensor_1_1__config_1_1config" kindref="compound">bittensor.config</ref>(<sp/>parser<sp/>)</highlight></codeline>
    </programlisting>
    <location file="/Users/macthrasher/bittensor/bittensor/_neuron/text/core_server/nucleus_impl.py"/>
  </compounddef>
</doxygen>
