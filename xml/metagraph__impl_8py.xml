<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="metagraph__impl_8py" kind="file" language="Python">
    <compoundname>metagraph_impl.py</compoundname>
    <innerclass refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph" prot="public">bittensor::_metagraph::metagraph_impl::Metagraph</innerclass>
    <innernamespace refid="namespacebittensor">bittensor</innernamespace>
    <innernamespace refid="namespacebittensor_1_1__metagraph">bittensor::_metagraph</innernamespace>
    <innernamespace refid="namespacebittensor_1_1__metagraph_1_1metagraph__impl">bittensor::_metagraph::metagraph_impl</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacebittensor_1_1__metagraph_1_1metagraph__impl_1a207165bad5b40fa79316cac4b768f312" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int bittensor::_metagraph::metagraph_impl.RAOPERTAO</definition>
        <argsstring></argsstring>
        <name>RAOPERTAO</name>
        <qualifiedname>bittensor._metagraph.metagraph_impl.RAOPERTAO</qualifiedname>
        <initializer>=  1000000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_metagraph/metagraph_impl.py" line="36" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_metagraph/metagraph_impl.py" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacebittensor_1_1__metagraph_1_1metagraph__impl_1abaccf06362aa8cd7272dda4a26649ded" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int bittensor::_metagraph::metagraph_impl.U64MAX</definition>
        <argsstring></argsstring>
        <name>U64MAX</name>
        <qualifiedname>bittensor._metagraph.metagraph_impl.U64MAX</qualifiedname>
        <initializer>=  18446744073709551615</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_metagraph/metagraph_impl.py" line="37" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_metagraph/metagraph_impl.py" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacebittensor_1_1__metagraph_1_1metagraph__impl" refkind="compound"><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Maintains<sp/>chain<sp/>state<sp/>as<sp/>a<sp/>torch.nn.Module.</highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>MIT<sp/>License<sp/>(MIT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Copyright<sp/>©<sp/>2021<sp/>Yuma<sp/>Rao</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>documentation<sp/>files<sp/>(the<sp/>“Software”),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>Software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>“AS<sp/>IS”,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>typing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>List</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>loguru<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ast</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pandas</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>torch.nn.functional<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>f</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>torch</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pickle</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>json</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>bittensor</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacebittensor_1_1utils_1_1networking" kindref="compound">bittensor.utils.networking</ref><sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>net</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacebittensor_1_1utils_1_1weight__utils" kindref="compound">bittensor.utils.weight_utils</ref><sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>weight_utils</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">RAOPERTAO<sp/>=<sp/>1000000000</highlight></codeline>
<codeline lineno="37"><highlight class="normal">U64MAX<sp/>=<sp/>18446744073709551615</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph" kindref="compound">Metagraph</ref>(<sp/>torch.nn.Module<sp/>):</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Maintains<sp/>chain<sp/>state<sp/>as<sp/>a<sp/>torch.nn.Module.</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Interface:</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau<sp/>(:obj:`torch.FloatTensor`<sp/>of<sp/>shape<sp/>:obj:`(1)`):<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Current,<sp/>per<sp/>block,<sp/>token<sp/>emission<sp/>rate.</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>(:obj:`torch.LongTensor`<sp/>of<sp/>shape<sp/>:obj:`(1)`):</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>State<sp/>block<sp/>number.</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uids<sp/>(:obj:`torch.LongTensor`<sp/>of<sp/>shape<sp/>:obj:`(metagraph.n)`):</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UIDs<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>each<sp/>neuron.</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stake<sp/>(:obj:`torch.LongTensor`<sp/>of<sp/>shape<sp/>:obj:`(metagraph.n)`):</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Stake<sp/>balance<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>each<sp/>neuron<sp/>ordered<sp/>by<sp/>uid.</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_update<sp/>(:obj:`torch.LongTensor`<sp/>of<sp/>shape<sp/>:obj:`(metagraph.n)`):</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Last<sp/>emission<sp/>call<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>each<sp/>neuron<sp/>ordered<sp/>by<sp/>uid.</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weights<sp/>(:obj:`torch.FloatTensor`<sp/>of<sp/>shape<sp/>:obj:`(metagraph.n,<sp/>metagraph.n)`):</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Full<sp/>weight<sp/>matrix<sp/>on<sp/>chain<sp/>ordered<sp/>by<sp/>uid.</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neurons<sp/>(:obj:`torch.LongTensor`<sp/>of<sp/>shape<sp/>:obj:`(metagraph.n,<sp/>-1)`)<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tokenized<sp/>endpoint<sp/>information.</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ae140d5f6b82affffd1cdb4bc97843559" kindref="member">__init__</ref>(<sp/>self,<sp/>subtensor<sp/>):</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Initializes<sp/>a<sp/>new<sp/>Metagraph<sp/>torch<sp/>chain<sp/>interface<sp/>object.</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(Metagraph,<sp/>self).<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ae140d5f6b82affffd1cdb4bc97843559" kindref="member">__init__</ref>()</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aa0322828a7b0c5f11bc6bdf9ba5f8006" kindref="member">subtensor</ref><sp/>=<sp/>subtensor</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aec10f18d7e572a5014eb7f6c338ff0da" kindref="member">clear</ref>()</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aec10f18d7e572a5014eb7f6c338ff0da" kindref="member">clear</ref>(<sp/>self<sp/>)<sp/>-&gt;<sp/>&apos;Metagraph&apos;:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Erases<sp/>Metagraph<sp/>state.</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ac389fe277d31ef7ab8cafb54a5eeccb9" kindref="member">version</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>torch.tensor(<sp/>[<sp/>bittensor.__version_as_int__<sp/>],<sp/>dtype=torch.int64),<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>torch.tensor(<sp/>[0],<sp/>dtype=torch.int64),<sp/>requires_grad<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a3b5fd7515d5a7b5f9f5383589bba85bb" kindref="member">tau</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>torch.tensor(<sp/>[1],<sp/>dtype=torch.float32),<sp/>requires_grad<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ab7ae47be11a28f4f446a1e14eb4ca449" kindref="member">block</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>torch.tensor(<sp/>[0],<sp/>dtype=torch.int64),<sp/>requires_grad<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a185ca62f18cad4f1ada8cb73208d466f" kindref="member">stake</ref><sp/>=<sp/>torch.nn.Parameter(<sp/><sp/>torch.tensor(<sp/>[],<sp/>dtype=torch.float32),<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a82219c98ff57f15a0d74e599630c1fcb" kindref="member">ranks</ref><sp/>=<sp/>torch.nn.Parameter(<sp/><sp/>torch.tensor(<sp/>[],<sp/>dtype=torch.float32),<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a3c6d23cfc981532eed5c7563a79820eb" kindref="member">trust</ref><sp/>=<sp/>torch.nn.Parameter(<sp/><sp/>torch.tensor(<sp/>[],<sp/>dtype=torch.float32),<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aeb7bb38790a29bc561ed3ad9f4860b4f" kindref="member">consensus</ref><sp/>=<sp/>torch.nn.Parameter(<sp/><sp/>torch.tensor(<sp/>[],<sp/>dtype=torch.float32),<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a91bdcaa5b2a344403f1a09fa3ea4f961" kindref="member">incentive</ref><sp/>=<sp/>torch.nn.Parameter(<sp/><sp/>torch.tensor(<sp/>[],<sp/>dtype=torch.float32),<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a2b130f5f585a9427c60c90757e844544" kindref="member">emission</ref><sp/>=<sp/>torch.nn.Parameter(<sp/><sp/>torch.tensor(<sp/>[],<sp/>dtype=torch.float32),<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1adf4008ea148a33631e41b20ddb00e9f4" kindref="member">dividends</ref><sp/>=<sp/>torch.nn.Parameter(<sp/><sp/>torch.tensor(<sp/>[],<sp/>dtype=torch.float32),<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a3466add2861b4ea82f24bd53afb69ec8" kindref="member">active</ref><sp/>=<sp/>torch.nn.Parameter(<sp/><sp/>torch.tensor(<sp/>[],<sp/>dtype=torch.int64),<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ad444e71fb042eed110700b0956f2f301" kindref="member">last_update</ref><sp/>=<sp/>torch.nn.Parameter(<sp/><sp/>torch.tensor(<sp/>[],<sp/>dtype=torch.int64),<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a5aca6de2c3773ba3e3896b1759dfab69" kindref="member">weights</ref><sp/>=<sp/>torch.nn.Parameter(<sp/><sp/>torch.tensor(<sp/>[],<sp/>dtype=torch.float32),<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a5839f65d24c057bff0997a53a755ec47" kindref="member">bonds</ref><sp/>=<sp/>torch.nn.Parameter(<sp/><sp/>torch.tensor(<sp/>[],<sp/>dtype=torch.int64),<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aad0b83db87c6c1b3126f9f0b6eb5a84e" kindref="member">endpoints</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>torch.tensor(<sp/>[],<sp/>dtype=torch.int64),<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a0f06479517f3ac4c5011c1fc4b0f7328" kindref="member">uids</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>torch.tensor([],<sp/>dtype<sp/>=<sp/>torch.int64),requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ac90ef36e9b9992d0677ed954fe064305" kindref="member">_endpoint_objs</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ad2988f79629208dd3e6c38c964dc6e65" kindref="member">neurons</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ace920b0826468f1b7e002ad2fbec0021" kindref="member">forward</ref><sp/>(</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self,<sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uid:<sp/>int,<sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_weight:<sp/>torch.FloatTensor<sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>-&gt;<sp/>torch.FloatTensor:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>a<sp/>dividend<sp/>vector<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a<sp/>change<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>weights<sp/>by<sp/>computing<sp/>the<sp/>full<sp/>incenvite<sp/>function.</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uid<sp/>(int):</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uid<sp/>to<sp/>set<sp/>weights.</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_weights:<sp/>(torch.FloatTensor,<sp/>shape<sp/>=(n)):</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalized<sp/>row<sp/>to<sp/>replace<sp/>at<sp/>uid.</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dividends<sp/>(torch.FloatTensor):</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dividends<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>entire<sp/>network.</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Return<sp/>if<sp/>there<sp/>are<sp/>no<sp/>neurons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>.item()<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch.tensor([],<sp/>dtype=torch.float32)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Raise<sp/>if<sp/>the<sp/>passed<sp/>weights<sp/>are<sp/>badly<sp/>shaped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>torch.numel(<sp/>row_weight<sp/>)<sp/>!=<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>.item():</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;Passed<sp/>weight<sp/>update<sp/>must<sp/>have<sp/>the<sp/>dimension<sp/>of<sp/>a<sp/>row<sp/>in<sp/>W.<sp/>Got<sp/>{},<sp/>expected<sp/>{}&apos;</highlight><highlight class="normal">,<sp/>row_weight.size(),<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>.item())</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Reshape<sp/>to<sp/>fit<sp/>weights.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_weight<sp/>=<sp/>row_weight.view(<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref><sp/>)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Normalize<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>torch.abs(<sp/>torch.sum(<sp/>row_weight<sp/>)<sp/>-<sp/>1<sp/>)<sp/>&gt;<sp/>0.0001:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_weight<sp/>=<sp/>f.normalize(row_weight,<sp/>p=1,<sp/>dim=0)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Raise<sp/>if<sp/>the<sp/>passed<sp/>weights<sp/>are<sp/>badly<sp/>shaped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>uid<sp/>&gt;=<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>.item():</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;Passed<sp/>uid<sp/>does<sp/>not<sp/>exist<sp/>in<sp/>the<sp/>graph.<sp/>Got<sp/>{}<sp/>&gt;<sp/>{}&apos;</highlight><highlight class="normal">,<sp/>uid,<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>.item())</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight<sp/>=<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a139bf84686f3eb2c9d735e96dadf0fa9" kindref="member">W</ref>.detach().clone()</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight[uid,:]<sp/>=<sp/>row_weight</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>ranks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S<sp/>=<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a526730ce86ee3168c317bdc276a7e8bc" kindref="member">S</ref>.view(self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>,<sp/>1)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Wt<sp/>=<sp/>torch.transpose(weight,<sp/>0,<sp/>1)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/>=<sp/>torch.matmul(Wt,<sp/>S).view(self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>trust.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><sp/>=<sp/>torch.matmul((Wt<sp/>!=<sp/>0).float(),<sp/>S).view(self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>consensus.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rho<sp/>=<sp/>10</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kappa<sp/>=<sp/>0.5</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Return<sp/>if<sp/>there<sp/>is<sp/>no<sp/>stake.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>torch.sum(<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a526730ce86ee3168c317bdc276a7e8bc" kindref="member">S</ref><sp/>)<sp/><sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C<sp/>=<sp/>torch.sigmoid(<sp/>rho<sp/>*<sp/>(T<sp/>-<sp/>kappa)<sp/>).view(self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C<sp/>=<sp/>torch.sigmoid(<sp/>rho<sp/>*<sp/>(T<sp/>/<sp/>torch.sum(S)<sp/>-<sp/>kappa)<sp/>).view(self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>incentive.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Incentive<sp/>=<sp/>(R<sp/>*<sp/>C).view(self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(Incentive)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>emission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>torch.sum(Incentive)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Inflation<sp/>=<sp/>torch.zeros(<sp/>(self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>.item()),<sp/>dtype=torch.float32<sp/>).view(self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Inflation<sp/>=<sp/>(self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a3b5fd7515d5a7b5f9f5383589bba85bb" kindref="member">tau</ref><sp/>*<sp/>Incentive).view(self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(Inflation)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>bonds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B<sp/>=<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a9accbd9184103fb1ec5d5207b3d41ca3" kindref="member">B</ref>.detach().clone().float()</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_norm<sp/>=<sp/>f.normalize(B,<sp/>p=1,<sp/>dim=1)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(B_norm)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Dividends</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D<sp/>=<sp/>torch.matmul(<sp/>B_norm.view(self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>,<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>),<sp/>Inflation.view(self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>,<sp/>1)<sp/>).view(self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>)<sp/>+<sp/>0.5<sp/>*<sp/>Inflation.view(self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(D)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Return<sp/>dividends.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>D.view(self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a526730ce86ee3168c317bdc276a7e8bc" kindref="member">S</ref>(self)<sp/>-&gt;<sp/>torch.FloatTensor:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Stake</highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a185ca62f18cad4f1ada8cb73208d466f" kindref="member">stake</ref></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ae2779468f99f0804f06076fb30536fc1" kindref="member">R</ref>(self)<sp/>-&gt;<sp/>torch.FloatTensor:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Rank</highlight></codeline>
<codeline lineno="184"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="185"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a82219c98ff57f15a0d74e599630c1fcb" kindref="member">ranks</ref></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a5bf324cef80e8fffd5f0e53bffc6e6f0" kindref="member">I</ref>(self)<sp/>-&gt;<sp/>torch.FloatTensor:</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Incentive</highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="191"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a91bdcaa5b2a344403f1a09fa3ea4f961" kindref="member">incentive</ref></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a32ae66499fcaa44eadc97f24d18e14d7" kindref="member">E</ref>(self)<sp/>-&gt;<sp/>torch.FloatTensor:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Emission</highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a2b130f5f585a9427c60c90757e844544" kindref="member">emission</ref></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a4716b70397e77d545862632c48fbc737" kindref="member">C</ref>(self)<sp/>-&gt;<sp/>torch.FloatTensor:</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Consensus</highlight></codeline>
<codeline lineno="202"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="203"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aeb7bb38790a29bc561ed3ad9f4860b4f" kindref="member">consensus</ref></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a409867a2e0e530e1c62d3a4bb0b8be50" kindref="member">T</ref>(self)<sp/>-&gt;<sp/>torch.FloatTensor:</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Trust</highlight></codeline>
<codeline lineno="208"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="209"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a3c6d23cfc981532eed5c7563a79820eb" kindref="member">trust</ref></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ad84a2bab991bf0213a9c626f6b71483e" kindref="member">D</ref>(self)<sp/>-&gt;<sp/>torch.FloatTensor:</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Dividends</highlight></codeline>
<codeline lineno="214"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="215"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1adf4008ea148a33631e41b20ddb00e9f4" kindref="member">dividends</ref></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a9accbd9184103fb1ec5d5207b3d41ca3" kindref="member">B</ref>(self)<sp/>-&gt;<sp/>torch.FloatTensor:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Bonds</highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a5839f65d24c057bff0997a53a755ec47" kindref="member">bonds</ref></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a139bf84686f3eb2c9d735e96dadf0fa9" kindref="member">W</ref>(self)<sp/>-&gt;<sp/>torch.FloatTensor:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Weights</highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a5aca6de2c3773ba3e3896b1759dfab69" kindref="member">weights</ref></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1af34bcb4e20c1260100749a4b25ca2316" kindref="member">hotkeys</ref>(<sp/>self<sp/>)<sp/>-&gt;<sp/>List[str]:</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Returns<sp/>hotkeys<sp/>for<sp/>each<sp/>neuron.</highlight></codeline>
<codeline lineno="232"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="233"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hotkeys<sp/>(:obj:`List[str]<sp/>of<sp/>shape<sp/>:obj:`(metagraph.n)`):</highlight></codeline>
<codeline lineno="234"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Neuron<sp/>hotkeys.</highlight></codeline>
<codeline lineno="235"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="236"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>.item()<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[<sp/>neuron.hotkey<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>neuron<sp/>!=<sp/>bittensor.endpoint.dummy()<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>neuron<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a80743f91655e61cbdbc414de9bb7ab2d" kindref="member">endpoint_objs</ref><sp/>]</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a3107144d74473a5b947e85bcf5b4b16a" kindref="member">coldkeys</ref>(<sp/>self<sp/>)<sp/>-&gt;<sp/>List[str]:</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Returns<sp/>coldkeys<sp/>for<sp/>each<sp/>neuron.</highlight></codeline>
<codeline lineno="243"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="244"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coldkeys<sp/>(:obj:`List[str]<sp/>of<sp/>shape<sp/>:obj:`(metagraph.n)`):</highlight></codeline>
<codeline lineno="245"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Neuron<sp/>coldkeys.</highlight></codeline>
<codeline lineno="246"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="247"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>.item()<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[<sp/>neuron.coldkey<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>neuron<sp/>!=<sp/>bittensor.endpoint.dummy()<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>neuron<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a80743f91655e61cbdbc414de9bb7ab2d" kindref="member">endpoint_objs</ref><sp/>]</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a7f861f42582fd5c68e745e27b03a4dfc" kindref="member">modalities</ref>(<sp/>self<sp/>)<sp/>-&gt;<sp/>List[str]:</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Returns<sp/>the<sp/>modality<sp/>for<sp/>each<sp/>neuron.</highlight></codeline>
<codeline lineno="254"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="255"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coldkeys<sp/>(:obj:`List[str]<sp/>of<sp/>shape<sp/>:obj:`(metagraph.n)`):</highlight></codeline>
<codeline lineno="256"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Neuron<sp/>coldkeys.</highlight></codeline>
<codeline lineno="257"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="258"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>.item()<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[<sp/>neuron.modality<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>neuron<sp/>!=<sp/>bittensor.endpoint.dummy()<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>neuron<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a80743f91655e61cbdbc414de9bb7ab2d" kindref="member">endpoint_objs</ref><sp/>]</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ab691569dd476491b96379a0d93ff111e" kindref="member">addresses</ref>(<sp/>self<sp/>)<sp/>-&gt;<sp/>List[str]:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Returns<sp/>ip<sp/>addresses<sp/>for<sp/>each<sp/>neuron.</highlight></codeline>
<codeline lineno="265"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="266"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coldkeys<sp/>(:obj:`List[str]<sp/>of<sp/>shape<sp/>:obj:`(metagraph.n)`):</highlight></codeline>
<codeline lineno="267"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Neuron<sp/>address.</highlight></codeline>
<codeline lineno="268"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="269"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>.item()<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[<sp/>net.ip__str__(<sp/>neuron.ip_type,<sp/>neuron.ip,<sp/>neuron.port<sp/>)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>neuron<sp/>!=<sp/>bittensor.endpoint.dummy()<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>neuron<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a80743f91655e61cbdbc414de9bb7ab2d" kindref="member">endpoint_objs</ref><sp/>]</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a80743f91655e61cbdbc414de9bb7ab2d" kindref="member">endpoint_objs</ref>(<sp/>self<sp/>)<sp/>-&gt;<sp/>List[&apos;bittensor.Endpoint&apos;]:</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Returns<sp/>endpoints<sp/>as<sp/>objects.</highlight></codeline>
<codeline lineno="276"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="277"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endpoint_obj<sp/>(:obj:`List[<ref refid="classbittensor_1_1__endpoint_1_1endpoint__impl_1_1_endpoint" kindref="compound">bittensor.Endpoint</ref>]<sp/>of<sp/>shape<sp/>:obj:`(metagraph.n)`):</highlight></codeline>
<codeline lineno="278"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Endpoints<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>objects.</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="280"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>.item()<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ac90ef36e9b9992d0677ed954fe064305" kindref="member">_endpoint_objs</ref><sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ac90ef36e9b9992d0677ed954fe064305" kindref="member">_endpoint_objs</ref></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ac90ef36e9b9992d0677ed954fe064305" kindref="member">_endpoint_objs</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>tensor<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aad0b83db87c6c1b3126f9f0b6eb5a84e" kindref="member">endpoints</ref>:</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj<sp/>=<sp/>bittensor.endpoint.from_tensor(<sp/>tensor<sp/>)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ac90ef36e9b9992d0677ed954fe064305" kindref="member">_endpoint_objs</ref>.append(<sp/>obj<sp/>)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ac90ef36e9b9992d0677ed954fe064305" kindref="member">_endpoint_objs</ref></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a9739855c454e53531302b6889dc1b90f" kindref="member">hotkey_to_uid</ref>(<sp/>self,<sp/>hotkey:str<sp/>)<sp/>-&gt;<sp/>int:</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Fetch<sp/>uid<sp/>according<sp/>to<sp/>hotkey.<sp/></highlight></codeline>
<codeline lineno="293"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:<sp/></highlight></codeline>
<codeline lineno="294"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hotkey:<sp/>(`str`,<sp/>required):</highlight></codeline>
<codeline lineno="295"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hotkey<sp/>to<sp/>fetch<sp/>the<sp/>uid<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Return:</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uid:<sp/>(`int`):</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>uid<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>specified<sp/>hotkey,<sp/>-1<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hotkey<sp/>does<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>exist.</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/></highlight></codeline>
<codeline lineno="301"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hotkey<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1af34bcb4e20c1260100749a4b25ca2316" kindref="member">hotkeys</ref>:</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1af34bcb4e20c1260100749a4b25ca2316" kindref="member">hotkeys</ref>.index(hotkey)<sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ad49d2f5525651322db1a4d65329c176a" kindref="member">load</ref>(<sp/>self,<sp/>network:str<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/><sp/>)<sp/>-&gt;<sp/></highlight><highlight class="stringliteral">&apos;Metagraph&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Loads<sp/>this<sp/>metagraph<sp/>object&apos;s<sp/>state_dict<sp/>from<sp/>bittensor<sp/>root<sp/>dir.</highlight></codeline>
<codeline lineno="308"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:<sp/></highlight></codeline>
<codeline lineno="309"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>network:<sp/>(:obj:`str`,<sp/>required):</highlight></codeline>
<codeline lineno="310"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Name<sp/>of<sp/>state_dict<sp/>to<sp/>load,<sp/>defaults<sp/>to<sp/>kusanagi</highlight></codeline>
<codeline lineno="311"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="312"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>network<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>network<sp/>=<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aa0322828a7b0c5f11bc6bdf9ba5f8006" kindref="member">subtensor</ref>.network</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metagraph_path<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;~/.bittensor/&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(network)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;.pt&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metagraph_path<sp/>=<sp/>os.path.expanduser(metagraph_path)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.isfile(metagraph_path):</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a455ff12130131fcd2e1d5d43a6881efb" kindref="member">load_from_path</ref>(<sp/>path<sp/>=<sp/>metagraph_path<sp/>)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.warning(</highlight><highlight class="stringliteral">&apos;Did<sp/>not<sp/>load<sp/>metagraph<sp/>from<sp/>path:<sp/>{},<sp/>file<sp/>does<sp/>not<sp/>exist.<sp/>Run<sp/>metagraph.save()<sp/>first.&apos;</highlight><highlight class="normal">,<sp/>metagraph_path)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.exception(e)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1acaba0037b3eb5446feb5ad664ca61346" kindref="member">save</ref>(<sp/>self,<sp/>network:str<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/>)<sp/>-&gt;<sp/></highlight><highlight class="stringliteral">&apos;Metagraph&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Saves<sp/>this<sp/>metagraph<sp/>object&apos;s<sp/>state_dict<sp/>under<sp/>bittensor<sp/>root<sp/>dir.</highlight></codeline>
<codeline lineno="327"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:<sp/></highlight></codeline>
<codeline lineno="328"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>network:<sp/>(:obj:`str`,<sp/>required):</highlight></codeline>
<codeline lineno="329"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Name<sp/>of<sp/>state_dict,<sp/>defaults<sp/>to<sp/>kusanagi</highlight></codeline>
<codeline lineno="330"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="331"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>network<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>network<sp/>=<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aa0322828a7b0c5f11bc6bdf9ba5f8006" kindref="member">subtensor</ref>.network</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a2883fe5417b02b40365c79e2a6894c95" kindref="member">save_to_path</ref>(<sp/>path<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;~/.bittensor/&apos;</highlight><highlight class="normal">,<sp/>filename<sp/>=<sp/>str(network)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;.pt&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a455ff12130131fcd2e1d5d43a6881efb" kindref="member">load_from_path</ref>(self,<sp/>path:str<sp/>)<sp/>-&gt;<sp/></highlight><highlight class="stringliteral">&apos;Metagraph&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Loads<sp/>this<sp/>metagraph<sp/>object<sp/>with<sp/>state_dict<sp/>under<sp/>the<sp/>specified<sp/>path.</highlight></codeline>
<codeline lineno="337"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:<sp/></highlight></codeline>
<codeline lineno="338"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path:<sp/>(:obj:`str`,<sp/>required):</highlight></codeline>
<codeline lineno="339"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Path<sp/>to<sp/>load<sp/>state_dict.</highlight></codeline>
<codeline lineno="340"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="341"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>full_path<sp/>=<sp/>os.path.expanduser(path)</highlight></codeline>
<codeline lineno="342"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metastate<sp/>=<sp/>torch.load(<sp/>full_path<sp/>)</highlight></codeline>
<codeline lineno="343"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a192f0648c24f3708b291d903b4d103bc" kindref="member">load_from_state_dict</ref>(<sp/>metastate<sp/>)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a2883fe5417b02b40365c79e2a6894c95" kindref="member">save_to_path</ref>(self,<sp/>path:str,<sp/>filename:str<sp/>)<sp/>-&gt;<sp/></highlight><highlight class="stringliteral">&apos;Metagraph&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Saves<sp/>this<sp/>metagraph<sp/>object&apos;s<sp/>state_dict<sp/>to<sp/>the<sp/>specified<sp/>path.</highlight></codeline>
<codeline lineno="347"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:<sp/></highlight></codeline>
<codeline lineno="348"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path:<sp/>(:obj:`str`,<sp/>required):</highlight></codeline>
<codeline lineno="349"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Path<sp/>to<sp/>save<sp/>state_dict.</highlight></codeline>
<codeline lineno="350"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="351"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>full_path<sp/>=<sp/>os.path.expanduser(path)</highlight></codeline>
<codeline lineno="352"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.makedirs(full_path,<sp/>exist_ok=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metastate<sp/>=<sp/>self.state_dict()</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch.save(metastate,<sp/>full_path<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>+<sp/>filename)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a192f0648c24f3708b291d903b4d103bc" kindref="member">load_from_state_dict</ref>(self,<sp/>state_dict:dict<sp/>)<sp/>-&gt;<sp/></highlight><highlight class="stringliteral">&apos;Metagraph&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Loads<sp/>this<sp/>metagraph<sp/>object<sp/>from<sp/>passed<sp/>state_dict.</highlight></codeline>
<codeline lineno="359"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:<sp/></highlight></codeline>
<codeline lineno="360"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_dict:<sp/>(:obj:`dict`,<sp/>required):</highlight></codeline>
<codeline lineno="361"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Metagraph<sp/>state_dict.<sp/>Must<sp/>be<sp/>same<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>that<sp/>created<sp/>by<sp/>save_to_path.</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="363"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ac389fe277d31ef7ab8cafb54a5eeccb9" kindref="member">version</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>state_dict[&apos;version&apos;</highlight><highlight class="normal">],<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>state_dict[</highlight><highlight class="stringliteral">&apos;n&apos;</highlight><highlight class="normal">],<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a3b5fd7515d5a7b5f9f5383589bba85bb" kindref="member">tau</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>state_dict[</highlight><highlight class="stringliteral">&apos;tau&apos;</highlight><highlight class="normal">],<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ab7ae47be11a28f4f446a1e14eb4ca449" kindref="member">block</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>state_dict[</highlight><highlight class="stringliteral">&apos;block&apos;</highlight><highlight class="normal">],<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a0f06479517f3ac4c5011c1fc4b0f7328" kindref="member">uids</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>state_dict[</highlight><highlight class="stringliteral">&apos;uids&apos;</highlight><highlight class="normal">],<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a185ca62f18cad4f1ada8cb73208d466f" kindref="member">stake</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>state_dict[</highlight><highlight class="stringliteral">&apos;stake&apos;</highlight><highlight class="normal">],<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a82219c98ff57f15a0d74e599630c1fcb" kindref="member">ranks</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>state_dict[</highlight><highlight class="stringliteral">&apos;ranks&apos;</highlight><highlight class="normal">],<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a3c6d23cfc981532eed5c7563a79820eb" kindref="member">trust</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>state_dict[</highlight><highlight class="stringliteral">&apos;trust&apos;</highlight><highlight class="normal">],<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aeb7bb38790a29bc561ed3ad9f4860b4f" kindref="member">consensus</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>state_dict[</highlight><highlight class="stringliteral">&apos;consensus&apos;</highlight><highlight class="normal">],<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a91bdcaa5b2a344403f1a09fa3ea4f961" kindref="member">incentive</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>state_dict[</highlight><highlight class="stringliteral">&apos;incentive&apos;</highlight><highlight class="normal">],<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a2b130f5f585a9427c60c90757e844544" kindref="member">emission</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>state_dict[</highlight><highlight class="stringliteral">&apos;emission&apos;</highlight><highlight class="normal">],<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1adf4008ea148a33631e41b20ddb00e9f4" kindref="member">dividends</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>state_dict[</highlight><highlight class="stringliteral">&apos;dividends&apos;</highlight><highlight class="normal">],<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a3466add2861b4ea82f24bd53afb69ec8" kindref="member">active</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>state_dict[</highlight><highlight class="stringliteral">&apos;active&apos;</highlight><highlight class="normal">],<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ad444e71fb042eed110700b0956f2f301" kindref="member">last_update</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>state_dict[</highlight><highlight class="stringliteral">&apos;last_update&apos;</highlight><highlight class="normal">],<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a5aca6de2c3773ba3e3896b1759dfab69" kindref="member">weights</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>state_dict[</highlight><highlight class="stringliteral">&apos;weights&apos;</highlight><highlight class="normal">],<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a5839f65d24c057bff0997a53a755ec47" kindref="member">bonds</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>state_dict[</highlight><highlight class="stringliteral">&apos;bonds&apos;</highlight><highlight class="normal">],<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aad0b83db87c6c1b3126f9f0b6eb5a84e" kindref="member">endpoints</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>state_dict[</highlight><highlight class="stringliteral">&apos;endpoints&apos;</highlight><highlight class="normal">],<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ac90ef36e9b9992d0677ed954fe064305" kindref="member">_endpoint_objs</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ab46d6181e1000e5d7275db49e1e7c68f" kindref="member">retrieve_cached_neurons</ref>(<sp/>self,<sp/>block:<sp/>int<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/>):</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="385"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Retrieves<sp/>cached<sp/>metagraph<sp/>syncs<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>IPFS.<sp/></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="387"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ipfs<sp/>=<sp/><ref refid="classbittensor_1_1__ipfs_1_1ipfs__impl_1_1_ipfs" kindref="compound">bittensor.Ipfs</ref>()</highlight></codeline>
<codeline lineno="388"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ipns_hash<sp/>=<sp/>ipfs.latest_neurons_ipns</highlight></codeline>
<codeline lineno="389"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ipfs_hash<sp/>=<sp/>ipfs.cat</highlight></codeline>
<codeline lineno="390"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="391"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>block<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ipns_hash<sp/>=<sp/>ipfs.historical_neurons_ipns</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ipfs_hash<sp/>=<sp/>ipfs.node_get</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Ping<sp/>IPNS<sp/>for<sp/>latest<sp/>IPFS<sp/>hash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ipns_resolve<sp/>=<sp/><sp/>ipfs.retrieve_directory(ipfs.ipns_resolve,<sp/>((</highlight><highlight class="stringliteral">&apos;arg&apos;</highlight><highlight class="normal">,<sp/>ipns_hash),))</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Extract<sp/>IPFS<sp/>hash<sp/>from<sp/>IPNS<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ipfs_path<sp/>=<sp/>ast.literal_eval(ipns_resolve.text)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.error(</highlight><highlight class="stringliteral">&quot;Error<sp/>detected<sp/>in<sp/>metagraph<sp/>sync:<sp/>{}<sp/>with<sp/>sample<sp/>text<sp/>{}&quot;</highlight><highlight class="normal">.format(e,ipns_resolve.text))</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Try<sp/>Again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Ping<sp/>IPNS<sp/>for<sp/>latest<sp/>IPFS<sp/>hash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ipns_resolve<sp/>=<sp/><sp/>ipfs.retrieve_directory(ipfs.ipns_resolve,<sp/>((</highlight><highlight class="stringliteral">&apos;arg&apos;</highlight><highlight class="normal">,<sp/>ipns_hash),))</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Extract<sp/>IPFS<sp/>hash<sp/>from<sp/>IPNS<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ipfs_path<sp/>=<sp/>ast.literal_eval(ipns_resolve.text)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ipfs_resolved_hash<sp/>=<sp/>ipfs_path[</highlight><highlight class="stringliteral">&apos;Path&apos;</highlight><highlight class="normal">].split(</highlight><highlight class="stringliteral">&quot;ipfs/&quot;</highlight><highlight class="normal">)[1]</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ipfs_response<sp/>=<sp/>ipfs.retrieve_directory(ipfs_hash,<sp/>((</highlight><highlight class="stringliteral">&apos;arg&apos;</highlight><highlight class="normal">,<sp/>ipfs_resolved_hash),))</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Extract<sp/>all<sp/>neuron<sp/>sync<sp/>hashes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>block<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>historical_neurons<sp/>=<sp/>json.loads(ipfs_response.content)[</highlight><highlight class="stringliteral">&apos;Links&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Find<sp/>the<sp/>one<sp/>that<sp/>corresponds<sp/>to<sp/>our<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sync_data<sp/>=<sp/>next(item<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>item<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>historical_neurons<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>item[</highlight><highlight class="stringliteral">&quot;Name&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;nakamoto-{}.pkl&quot;</highlight><highlight class="normal">.format(block))</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Retrieve<sp/>Neuron<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ipfs_response<sp/>=<sp/>ipfs.retrieve_directory(ipfs.cat,<sp/>((</highlight><highlight class="stringliteral">&apos;arg&apos;</highlight><highlight class="normal">,<sp/>sync_data[</highlight><highlight class="stringliteral">&apos;Hash&apos;</highlight><highlight class="normal">]),))</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Unpickle<sp/>the<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neurons<sp/>=<sp/>pickle.loads(ipfs_response.content)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>neurons</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a816742ccbc5bfe6f38f7feb1d2e137b0" kindref="member">sync</ref><sp/>(<sp/>self,<sp/>block:<sp/>int<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>cached:<sp/>bool<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"><sp/>)<sp/>-&gt;<sp/></highlight><highlight class="stringliteral">&apos;Metagraph&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Synchronizes<sp/>this<sp/>metagraph<sp/>with<sp/>the<sp/>chain<sp/>state.</highlight></codeline>
<codeline lineno="429"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="430"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.success(self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aa0322828a7b0c5f11bc6bdf9ba5f8006" kindref="member">subtensor</ref>)</highlight></codeline>
<codeline lineno="431"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>block<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>=<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aa0322828a7b0c5f11bc6bdf9ba5f8006" kindref="member">subtensor</ref>.get_current_block()</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cached<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aa0322828a7b0c5f11bc6bdf9ba5f8006" kindref="member">subtensor</ref>.network<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;nakamoto&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;local&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>bittensor.__use_console__:</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>bittensor.__console__.status(</highlight><highlight class="stringliteral">&quot;Synchronizing<sp/>Metagraph...&quot;</highlight><highlight class="normal">,<sp/>spinner=</highlight><highlight class="stringliteral">&quot;earth&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neurons<sp/>=<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ab46d6181e1000e5d7275db49e1e7c68f" kindref="member">retrieve_cached_neurons</ref>(<sp/>)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>For<sp/>some<sp/>reason<sp/>IPFS<sp/>cache<sp/>is<sp/>down,<sp/>fallback<sp/>on<sp/>regular<sp/>sync</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.warning(</highlight><highlight class="stringliteral">&quot;IPFS<sp/>cache<sp/>may<sp/>be<sp/>down,<sp/>falling<sp/>back<sp/>to<sp/>regular<sp/>sync&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neurons<sp/>=<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aa0322828a7b0c5f11bc6bdf9ba5f8006" kindref="member">subtensor</ref>.neurons()</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_total<sp/>=<sp/>len(neurons)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neurons<sp/>=<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ab46d6181e1000e5d7275db49e1e7c68f" kindref="member">retrieve_cached_neurons</ref>(<sp/>)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>For<sp/>some<sp/>reason<sp/>IPFS<sp/>cache<sp/>is<sp/>down,<sp/>fallback<sp/>on<sp/>regular<sp/>sync</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.warning(</highlight><highlight class="stringliteral">&quot;IPFS<sp/>cache<sp/>may<sp/>be<sp/>down,<sp/>falling<sp/>back<sp/>to<sp/>regular<sp/>sync&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neurons<sp/>=<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aa0322828a7b0c5f11bc6bdf9ba5f8006" kindref="member">subtensor</ref>.neurons()</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_total<sp/>=<sp/>len(neurons)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neurons<sp/>=<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aa0322828a7b0c5f11bc6bdf9ba5f8006" kindref="member">subtensor</ref>.neurons(<sp/>block<sp/>=<sp/>block<sp/>)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_total<sp/>=<sp/>len(neurons)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cached<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aa0322828a7b0c5f11bc6bdf9ba5f8006" kindref="member">subtensor</ref>.network<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;nakamoto&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;local&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>bittensor.__use_console__:</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>bittensor.__console__.status(</highlight><highlight class="stringliteral">&quot;Synchronizing<sp/>Metagraph...&quot;</highlight><highlight class="normal">,<sp/>spinner=</highlight><highlight class="stringliteral">&quot;earth&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neurons<sp/>=<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ab46d6181e1000e5d7275db49e1e7c68f" kindref="member">retrieve_cached_neurons</ref>(<sp/>block<sp/>=<sp/>block<sp/>)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>For<sp/>some<sp/>reason<sp/>IPFS<sp/>cache<sp/>is<sp/>down,<sp/>fallback<sp/>on<sp/>regular<sp/>sync</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.warning(</highlight><highlight class="stringliteral">&quot;IPFS<sp/>cache<sp/>may<sp/>be<sp/>down,<sp/>falling<sp/>back<sp/>to<sp/>regular<sp/>sync<sp/>to<sp/>get<sp/>block<sp/>{}&quot;</highlight><highlight class="normal">.format(block))</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neurons<sp/>=<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aa0322828a7b0c5f11bc6bdf9ba5f8006" kindref="member">subtensor</ref>.neurons(<sp/>block<sp/>=<sp/>block<sp/>)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_total<sp/>=<sp/>len(neurons)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neurons<sp/>=<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ab46d6181e1000e5d7275db49e1e7c68f" kindref="member">retrieve_cached_neurons</ref>(<sp/>block<sp/>=<sp/>block<sp/>)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>For<sp/>some<sp/>reason<sp/>IPFS<sp/>cache<sp/>is<sp/>down,<sp/>fallback<sp/>on<sp/>regular<sp/>sync</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.warning(</highlight><highlight class="stringliteral">&quot;IPFS<sp/>cache<sp/>may<sp/>be<sp/>down,<sp/>falling<sp/>back<sp/>to<sp/>regular<sp/>sync<sp/>to<sp/>get<sp/>block<sp/>{}&quot;</highlight><highlight class="normal">.format(block))</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neurons<sp/>=<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aa0322828a7b0c5f11bc6bdf9ba5f8006" kindref="member">subtensor</ref>.neurons(<sp/>block<sp/>=<sp/>block<sp/>)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_total<sp/>=<sp/>len(neurons)</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neurons<sp/>=<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aa0322828a7b0c5f11bc6bdf9ba5f8006" kindref="member">subtensor</ref>.neurons(<sp/>block<sp/>=<sp/>block<sp/>)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_total<sp/>=<sp/>len(neurons)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Fill<sp/>arrays.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uids<sp/>=<sp/>[<sp/>i<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_total)<sp/>]</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>active<sp/>=<sp/>[<sp/>0<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_total)<sp/>]</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stake<sp/>=<sp/>[<sp/>0<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_total)<sp/>]</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ranks<sp/>=<sp/>[<sp/>0<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_total)<sp/>]</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trust<sp/>=<sp/>[<sp/>0<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_total)<sp/>]</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consensus<sp/>=<sp/>[<sp/>0<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_total)<sp/>]</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>incentive<sp/>=<sp/>[<sp/>0<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_total)<sp/>]</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emission<sp/>=<sp/>[<sp/>0<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_total)<sp/>]</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dividends<sp/>=<sp/>[<sp/>0<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_total)<sp/>]</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_updates<sp/>=<sp/>[<sp/>-1<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_total)<sp/>]</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endpoints<sp/>=<sp/>[<sp/>[-1<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(250)<sp/>]<sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_total)<sp/>]</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weights<sp/>=<sp/>[<sp/>[<sp/>0<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_total)<sp/>]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_total)<sp/>]</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bonds<sp/>=<sp/>[<sp/>[0<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_total)<sp/>]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_total)<sp/>]</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ac90ef36e9b9992d0677ed954fe064305" kindref="member">_endpoint_objs</ref><sp/>=<sp/>[<sp/>bittensor.endpoint.dummy()<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_total)<sp/>]</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ad2988f79629208dd3e6c38c964dc6e65" kindref="member">neurons</ref><sp/>=<sp/>[</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_total)]</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>n<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>neurons:</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ad2988f79629208dd3e6c38c964dc6e65" kindref="member">neurons</ref>[n.uid]<sp/>=<sp/>n</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uids[n.uid]<sp/>=<sp/>n.uid<sp/></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>active[n.uid]<sp/>=<sp/>n.active</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stake[n.uid]<sp/>=<sp/>n.stake<sp/></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ranks[n.uid]<sp/>=<sp/>n.rank</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trust[n.uid]<sp/>=<sp/>n.trust</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consensus[n.uid]<sp/>=<sp/>n.consensus</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>incentive[n.uid]<sp/>=<sp/>n.incentive</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dividends[n.uid]<sp/>=<sp/>n.dividends</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emission[n.uid]<sp/>=<sp/>n.emission</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_updates[n.uid]<sp/>=<sp/>n.last_update</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endpoint<sp/>=<sp/><sp/><ref refid="classbittensor_1_1__endpoint_1_1endpoint" kindref="compound">bittensor.endpoint</ref>(</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>version<sp/>=<sp/>int(n.version),</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uid<sp/>=<sp/>int(n.uid),<sp/></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hotkey<sp/>=<sp/>str(n.hotkey),<sp/></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip_type<sp/>=<sp/>int(n.ip_type),<sp/></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip<sp/>=<sp/>str(n.ip),<sp/></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port<sp/>=<sp/>int(n.port),<sp/></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modality<sp/>=<sp/>int(n.modality),<sp/></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coldkey<sp/>=<sp/>str(n.coldkey)<sp/></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ac90ef36e9b9992d0677ed954fe064305" kindref="member">_endpoint_objs</ref>[n.uid]<sp/>=<sp/>endpoint<sp/></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endpoints[n.uid]<sp/>=<sp/>endpoint.to_tensor().tolist()</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(n.weights)<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_uids,<sp/>w_weights<sp/>=<sp/>zip(*n.weights)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weights[n.uid]<sp/>=<sp/>weight_utils.convert_weight_uids_and_vals_to_tensor(<sp/>n_total,<sp/>w_uids,<sp/>w_weights<sp/>).tolist()</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weights[n.uid]<sp/>=<sp/>[0]<sp/>*<sp/>n_total</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(n.bonds)<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b_uids,<sp/>b_bonds<sp/>=<sp/>zip(*n.bonds)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bonds[n.uid]<sp/>=<sp/>weight_utils.convert_bond_uids_and_vals_to_tensor(<sp/>n_total,<sp/>b_uids,<sp/>b_bonds<sp/>).tolist()</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bonds[n.uid]<sp/>=<sp/>[0]<sp/>*<sp/>n_total</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>tensors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tn<sp/>=<sp/>torch.tensor(<sp/>n_total,<sp/>dtype=torch.int64<sp/>)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tblock<sp/>=<sp/>torch.tensor(<sp/>block,<sp/>dtype=torch.int64<sp/>)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tuids<sp/>=<sp/>torch.tensor(<sp/>uids,<sp/>dtype=torch.int64<sp/>)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tactive<sp/>=<sp/>torch.tensor(<sp/>active,<sp/>dtype=torch.int64<sp/>)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tstake<sp/>=<sp/>torch.tensor(<sp/>stake,<sp/>dtype=torch.float32<sp/>)</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tranks<sp/>=<sp/>torch.tensor(<sp/>ranks,<sp/>dtype=torch.float32<sp/>)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ttrust<sp/>=<sp/>torch.tensor(<sp/>trust,<sp/>dtype=torch.float32<sp/>)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tconsensus<sp/>=<sp/>torch.tensor(<sp/>consensus,<sp/>dtype=torch.float32<sp/>)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tincentive<sp/>=<sp/>torch.tensor(<sp/>incentive,<sp/>dtype=torch.float32<sp/>)</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temission<sp/>=<sp/>torch.tensor(<sp/>emission,<sp/>dtype=torch.float32<sp/>)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tdividends<sp/>=<sp/>torch.tensor(<sp/>dividends,<sp/>dtype=torch.float32<sp/>)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tlast_update<sp/>=<sp/>torch.tensor(<sp/>last_updates,<sp/>dtype=torch.int64<sp/>)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbonds<sp/>=<sp/>torch.tensor(<sp/>bonds,<sp/>dtype=torch.int64<sp/>)</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tweights<sp/>=<sp/>torch.tensor(<sp/>weights,<sp/>dtype=torch.float32<sp/>)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tendpoints<sp/>=<sp/>torch.tensor(<sp/>endpoints,<sp/>dtype=torch.int64<sp/>)</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Normalize<sp/>bond<sp/>ownership.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbonds<sp/>=<sp/>torch.nn.functional.normalize(<sp/>tbonds.float(),<sp/>p=1,<sp/>dim=0,<sp/>eps=1e-12<sp/>)<sp/>*<sp/>0.5<sp/>+<sp/>torch.eye(<sp/>tn<sp/>)<sp/>*<sp/>0.5</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>params.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>tn,<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ab7ae47be11a28f4f446a1e14eb4ca449" kindref="member">block</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>tblock,<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a0f06479517f3ac4c5011c1fc4b0f7328" kindref="member">uids</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>tuids,<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a185ca62f18cad4f1ada8cb73208d466f" kindref="member">stake</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>tstake,<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a82219c98ff57f15a0d74e599630c1fcb" kindref="member">ranks</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>tranks,<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a3c6d23cfc981532eed5c7563a79820eb" kindref="member">trust</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>ttrust,<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aeb7bb38790a29bc561ed3ad9f4860b4f" kindref="member">consensus</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>tconsensus,<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a91bdcaa5b2a344403f1a09fa3ea4f961" kindref="member">incentive</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>tincentive,<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a2b130f5f585a9427c60c90757e844544" kindref="member">emission</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>temission,<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1adf4008ea148a33631e41b20ddb00e9f4" kindref="member">dividends</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>tdividends,<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a3466add2861b4ea82f24bd53afb69ec8" kindref="member">active</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>tactive,<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ad444e71fb042eed110700b0956f2f301" kindref="member">last_update</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>tlast_update,<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a5aca6de2c3773ba3e3896b1759dfab69" kindref="member">weights</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>tweights,<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a5839f65d24c057bff0997a53a755ec47" kindref="member">bonds</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>tbonds,<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aad0b83db87c6c1b3126f9f0b6eb5a84e" kindref="member">endpoints</ref><sp/>=<sp/>torch.nn.Parameter(<sp/>tendpoints,<sp/>requires_grad=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>For<sp/>contructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">to_dataframe(self):</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a0f06479517f3ac4c5011c1fc4b0f7328" kindref="member">uids</ref>.tolist()</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns<sp/>=<sp/>[<sp/></highlight><highlight class="stringliteral">&apos;uid&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;active&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;stake&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;rank&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;trust&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;consensus&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;incentive&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;dividends&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;emission&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataframe<sp/>=<sp/>pandas.DataFrame(columns<sp/>=<sp/>columns,<sp/>index<sp/>=<sp/>index)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>uid<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a0f06479517f3ac4c5011c1fc4b0f7328" kindref="member">uids</ref>.tolist():</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;uid&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a0f06479517f3ac4c5011c1fc4b0f7328" kindref="member">uids</ref>[uid].item(),</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;active&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a3466add2861b4ea82f24bd53afb69ec8" kindref="member">active</ref>[uid].item(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;stake&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a185ca62f18cad4f1ada8cb73208d466f" kindref="member">stake</ref>[uid].item(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;rank&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a82219c98ff57f15a0d74e599630c1fcb" kindref="member">ranks</ref>[uid].item(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;trust&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a3c6d23cfc981532eed5c7563a79820eb" kindref="member">trust</ref>[uid].item(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;consensus&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aeb7bb38790a29bc561ed3ad9f4860b4f" kindref="member">consensus</ref>[uid].item(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;incentive&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a91bdcaa5b2a344403f1a09fa3ea4f961" kindref="member">incentive</ref>[uid].item(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;dividends&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1adf4008ea148a33631e41b20ddb00e9f4" kindref="member">dividends</ref>[uid].item(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;emission&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a2b130f5f585a9427c60c90757e844544" kindref="member">emission</ref>[uid].item()</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataframe.loc[uid]<sp/>=<sp/>pandas.Series(<sp/>v<sp/>)</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataframe[</highlight><highlight class="stringliteral">&apos;uid&apos;</highlight><highlight class="normal">]<sp/>=<sp/>dataframe.index</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dataframe</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bittensor.logging.error(</highlight><highlight class="stringliteral">&apos;failed<sp/>metagraph.to_dataframe()&apos;</highlight><highlight class="normal">,<sp/>str(e))</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pandas.DataFrame()</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">to_wandb(self):</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wandb_info<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;metagraph_n&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>.item(),</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;metagraph_tau&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a3b5fd7515d5a7b5f9f5383589bba85bb" kindref="member">tau</ref>.item(),</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;metagraph_block&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ab7ae47be11a28f4f446a1e14eb4ca449" kindref="member">block</ref>.item(),</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wandb_info</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__str__(self):</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Metagraph({},<sp/>{},<sp/>{})&quot;</highlight><highlight class="normal">.format(self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1a651a9f930b6474beeadee90ac3be0b63" kindref="member">n</ref>.item(),<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1ab7ae47be11a28f4f446a1e14eb4ca449" kindref="member">block</ref>.item(),<sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aa0322828a7b0c5f11bc6bdf9ba5f8006" kindref="member">subtensor</ref>.network)</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__repr__(self):</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__metagraph_1_1metagraph__impl_1_1_metagraph_1aa623e93cc30d6671ec184fd16355769c" kindref="member">__str__</ref>()</highlight></codeline>
    </programlisting>
    <location file="/Users/macthrasher/bittensor/bittensor/_metagraph/metagraph_impl.py"/>
  </compounddef>
</doxygen>
