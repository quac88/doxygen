<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="subtensor__mock_8py" kind="file" language="Python">
    <compoundname>subtensor_mock.py</compoundname>
    <innerclass refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1mock__subtensor" prot="public">bittensor::_subtensor::subtensor_mock::mock_subtensor</innerclass>
    <innerclass refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1_mock___subtensor" prot="public">bittensor::_subtensor::subtensor_mock::Mock_Subtensor</innerclass>
    <innernamespace refid="namespacebittensor">bittensor</innernamespace>
    <innernamespace refid="namespacebittensor_1_1__subtensor">bittensor::_subtensor</innernamespace>
    <innernamespace refid="namespacebittensor_1_1__subtensor_1_1subtensor__mock">bittensor::_subtensor::subtensor_mock</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="subtensor__mock_8py_1ad873943414e0603c48145d966e936449" prot="private" static="no" mutable="no">
        <type>dict</type>
        <definition>dict bittensor::_subtensor::subtensor_mock.__type_registery__</definition>
        <argsstring></argsstring>
        <name>__type_registery__</name>
        <qualifiedname>bittensor._subtensor.subtensor_mock.__type_registery__</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_subtensor/subtensor_mock.py" line="12" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_subtensor/subtensor_mock.py" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="subtensor__mock_8py_1a93d4eb557c23050b0d88c92487da97cb" prot="public" static="no" mutable="no">
        <type>str</type>
        <definition>str bittensor::_subtensor::subtensor_mock.GLOBAL_SUBTENSOR_MOCK_PROCESS_NAME</definition>
        <argsstring></argsstring>
        <name>GLOBAL_SUBTENSOR_MOCK_PROCESS_NAME</name>
        <qualifiedname>bittensor._subtensor.subtensor_mock.GLOBAL_SUBTENSOR_MOCK_PROCESS_NAME</qualifiedname>
        <initializer>=  &quot;node-subtensor&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/macthrasher/bittensor/bittensor/_subtensor/subtensor_mock.py" line="44" column="1" bodyfile="/Users/macthrasher/bittensor/bittensor/_subtensor/subtensor_mock.py" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">from</highlight><highlight class="normal"><sp/>substrateinterface<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>SubstrateInterface</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>psutil</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>subprocess</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>sys<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>platform<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>bittensor</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>subtensor_impl</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacebittensor_1_1utils_1_1test__utils" kindref="compound">bittensor.utils.test_utils</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>get_random_unused_port</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">__type_registery__<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;runtime_id&quot;</highlight><highlight class="normal">:<sp/>2,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;types&quot;</highlight><highlight class="normal">:<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Balance&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;u64&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NeuronMetadataOf&quot;</highlight><highlight class="normal">:<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;struct&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;type_mapping&quot;</highlight><highlight class="normal">:<sp/>[</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u32&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;ip&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u128&quot;</highlight><highlight class="normal">],<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;port&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u16&quot;</highlight><highlight class="normal">],<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;ip_type&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u8&quot;</highlight><highlight class="normal">],<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;uid&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u32&quot;</highlight><highlight class="normal">],<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;modality&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u8&quot;</highlight><highlight class="normal">],<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;hotkey&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;AccountId&quot;</highlight><highlight class="normal">],<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;coldkey&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;AccountId&quot;</highlight><highlight class="normal">],<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u32&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;last_update&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u64&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;priority&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u64&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;stake&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u64&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;rank&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u64&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;trust&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u64&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;consensus&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u64&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;incentive&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u64&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;dividends&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u64&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;emission&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;u64&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;bonds&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Vec&lt;(u32,<sp/>u64)&gt;&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;weights&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Vec&lt;(u32,<sp/>u32)&gt;&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">GLOBAL_SUBTENSOR_MOCK_PROCESS_NAME<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;node-subtensor&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1mock__subtensor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1mock__subtensor" kindref="compound">mock_subtensor</ref>():</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Returns<sp/>a<sp/>subtensor<sp/>connection<sp/>interface<sp/>to<sp/>a<sp/>mocked<sp/>subtensor<sp/>process<sp/>running<sp/>in<sp/>the<sp/>background.</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Optionall<sp/>creates<sp/>the<sp/>background<sp/>process<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>it<sp/>does<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>exist.</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@classmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">mock(cls):</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>cls.<ref refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1mock__subtensor_1a506b0e23cec03e5c8669577f0bfbef21" kindref="member">global_mock_process_is_running</ref>():</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_owned_mock_subtensor_process<sp/>=<sp/>cls.<ref refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1mock__subtensor_1a4ad7e429d8d3259514835f02b1135a2d" kindref="member">create_global_mock_process</ref>()</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time.sleep(3)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_owned_mock_subtensor_process<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;Mock<sp/>subtensor<sp/>already<sp/>running.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endpoint<sp/>=<sp/>bittensor.__mock_entrypoint__</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port<sp/>=<sp/>int(endpoint.split(</highlight><highlight class="stringliteral">&apos;:&apos;</highlight><highlight class="normal">)[1])</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>substrate<sp/>=<sp/>SubstrateInterface(</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss58_format<sp/>=<sp/>bittensor.__ss58_format__,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_registry_preset=</highlight><highlight class="stringliteral">&apos;substrate-node-template&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_registry<sp/>=<sp/>__type_registery__,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>url<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ws://{}&quot;</highlight><highlight class="normal">.format(</highlight><highlight class="stringliteral">&apos;localhost:{}&apos;</highlight><highlight class="normal">.format(port)),</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_remote_preset=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subtensor<sp/>=<sp/><ref refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1_mock___subtensor" kindref="compound">Mock_Subtensor</ref>(<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>substrate<sp/>=<sp/>substrate,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>network<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;mock&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chain_endpoint<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;localhost:{}&apos;</highlight><highlight class="normal">.format(port),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Is<sp/>mocked,<sp/>optionally<sp/>has<sp/>owned<sp/>process<sp/>for<sp/>ref<sp/>counting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_is_mocked<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_owned_mock_subtensor_process<sp/>=<sp/>_owned_mock_subtensor_process</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>subtensor</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@classmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1mock__subtensor_1a506b0e23cec03e5c8669577f0bfbef21" kindref="member">global_mock_process_is_running</ref>(cle)<sp/>-&gt;<sp/>bool:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>If<sp/>subtensor<sp/>is<sp/>running<sp/>a<sp/>mock<sp/>process<sp/>this<sp/>kills<sp/>the<sp/>mock.</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>psutil.process_iter():</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>p.name()<sp/>==<sp/>GLOBAL_SUBTENSOR_MOCK_PROCESS_NAME<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>p.parent().pid<sp/>==<sp/>os.getpid()<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>p.status()<sp/>!=<sp/>psutil.STATUS_ZOMBIE<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>p.status()<sp/>!=<sp/>psutil.STATUS_DEAD:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;Found<sp/>process<sp/>with<sp/>name<sp/>{p.name()},<sp/>parent<sp/>{p.parent().pid}<sp/>status<sp/>{p.status()}<sp/>and<sp/>pid<sp/>{p.pid}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@classmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1mock__subtensor_1a023e61cd42591f1b5b321530866916ed" kindref="member">kill_global_mock_process</ref>(self):</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Kills<sp/>the<sp/>global<sp/>mocked<sp/>subtensor<sp/>process<sp/>even<sp/>if<sp/>not<sp/>owned.</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>psutil.process_iter():</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>p.name()<sp/>==<sp/>GLOBAL_SUBTENSOR_MOCK_PROCESS_NAME<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>p.parent().pid<sp/>==<sp/>os.getpid()<sp/>:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.terminate()</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.kill()</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time.sleep(2)<sp/></highlight><highlight class="comment">#<sp/>Buffer<sp/>to<sp/>ensure<sp/>the<sp/>processes<sp/>actually<sp/>die</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@classmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1mock__subtensor_1a4ad7e429d8d3259514835f02b1135a2d" kindref="member">create_global_mock_process</ref>(self):</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Creates<sp/>a<sp/>global<sp/>mocked<sp/>subtensor<sp/>process<sp/>running<sp/>in<sp/>the<sp/>backgroun<sp/>with<sp/>name<sp/>GLOBAL_SUBTENSOR_MOCK_PROCESS_NAME.</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operating_system<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;OSX&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>platform<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;darwin&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Linux&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;./bin/chain/{}/node-subtensor&quot;</highlight><highlight class="normal">.format(operating_system)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws_port<sp/>=<sp/>int(bittensor.__mock_entrypoint__.split(</highlight><highlight class="stringliteral">&apos;:&apos;</highlight><highlight class="normal">)[1])</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(ws_port)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(os.getpid())</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseport<sp/>=<sp/>get_random_unused_port()</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rpc<sp/>=<sp/>get_random_unused_port()</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subprocess.Popen([path,<sp/></highlight><highlight class="stringliteral">&apos;purge-chain&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;--dev&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;-y&apos;</highlight><highlight class="normal">],<sp/>close_fds=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>shell=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mock_subtensor_process<sp/>=<sp/>subprocess.Popen(<sp/>[path,<sp/></highlight><highlight class="stringliteral">&apos;--dev&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;--port&apos;</highlight><highlight class="normal">,<sp/>str(baseport),<sp/></highlight><highlight class="stringliteral">&apos;--ws-port&apos;</highlight><highlight class="normal">,<sp/>str(ws_port),<sp/></highlight><highlight class="stringliteral">&apos;--rpc-port&apos;</highlight><highlight class="normal">,<sp/>str(rpc),<sp/></highlight><highlight class="stringliteral">&apos;--tmp&apos;</highlight><highlight class="normal">],<sp/>close_fds=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>shell=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>stdout=subprocess.DEVNULL,<sp/>stderr=subprocess.STDOUT)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;Starting<sp/>subtensor<sp/>process<sp/>with<sp/>pid<sp/>{}<sp/>and<sp/>name<sp/>{}&apos;</highlight><highlight class="normal">.format(_mock_subtensor_process.pid,<sp/>GLOBAL_SUBTENSOR_MOCK_PROCESS_NAME))</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mock_subtensor_process</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(<sp/></highlight><highlight class="stringliteral">&apos;Failed<sp/>to<sp/>start<sp/>mocked<sp/>subtensor<sp/>process:<sp/>{}&apos;</highlight><highlight class="normal">.format(e)<sp/>)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1_mock___subtensor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1_mock___subtensor" kindref="compound">Mock_Subtensor</ref>(<ref refid="classbittensor_1_1__subtensor_1_1subtensor__impl_1_1_subtensor" kindref="compound">subtensor_impl.Subtensor</ref>):</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Handles<sp/>interactions<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>the<sp/>subtensor<sp/>chain.</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1_mock___subtensor_1a08ffa4bf8fd61f9ac302f513ede65bf9" kindref="member">__init__</ref>(<sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self,<sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_is_mocked:<sp/>bool,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_owned_mock_subtensor_process:<sp/>object,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**kwargs,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>):</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Initializes<sp/>a<sp/>subtensor<sp/>chain<sp/>interface.</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_owned_mock_subtensor_process<sp/>(Used<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>testing):</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>subprocess<sp/>where<sp/>a<sp/>mock<sp/>chain<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>running.</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super().<ref refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1_mock___subtensor_1a08ffa4bf8fd61f9ac302f513ede65bf9" kindref="member">__init__</ref>(**kwargs)</highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Exclusively<sp/>used<sp/>to<sp/>mock<sp/>a<sp/>connection<sp/>to<sp/>our<sp/>chain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1_mock___subtensor_1a19f03eaa88ffc0ea7b00a2795ba9213d" kindref="member">_owned_mock_subtensor_process</ref><sp/>=<sp/>_owned_mock_subtensor_process</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1_mock___subtensor_1a3a2ad4de42624a003d6b3ddda92731c3" kindref="member">_is_mocked</ref><sp/>=<sp/>_is_mocked</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;----<sp/>MOCKED<sp/>SUBTENSOR<sp/>INITIALIZED<sp/>----&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__str__(self)<sp/>-&gt;<sp/>str:</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1_mock___subtensor_1a3a2ad4de42624a003d6b3ddda92731c3" kindref="member">_is_mocked</ref><sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1_mock___subtensor_1a19f03eaa88ffc0ea7b00a2795ba9213d" kindref="member">_owned_mock_subtensor_process</ref><sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Mocked<sp/>and<sp/>owns<sp/>background<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;MockSubtensor({},<sp/>PID:{})&quot;</highlight><highlight class="normal">.format(<sp/>self.<ref refid="classbittensor_1_1__subtensor_1_1subtensor__impl_1_1_subtensor_1a8f4dc83aacfc9ff98fcfb79885ef9681" kindref="member">chain_endpoint</ref>,<sp/>self.<ref refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1_mock___subtensor_1a19f03eaa88ffc0ea7b00a2795ba9213d" kindref="member">_owned_mock_subtensor_process</ref>.pid)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Mocked<sp/>but<sp/>does<sp/>not<sp/>own<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;MockSubtensor({})&quot;</highlight><highlight class="normal">.format(<sp/>self.<ref refid="classbittensor_1_1__subtensor_1_1subtensor__impl_1_1_subtensor_1a8f4dc83aacfc9ff98fcfb79885ef9681" kindref="member">chain_endpoint</ref>)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__del__(self):</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1_mock___subtensor_1aced9b020ecd86025840392eaf57f84d9" kindref="member">optionally_kill_owned_mock_instance</ref>()</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__exit__(self):</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1_mock___subtensor_1a6495fb0866e8c3effdcb27187fc7f26f" kindref="member">__del__</ref>()</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1_mock___subtensor_1aced9b020ecd86025840392eaf57f84d9" kindref="member">optionally_kill_owned_mock_instance</ref>(self):</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>If<sp/>this<sp/>subtensor<sp/>instance<sp/>owns<sp/>the<sp/>mock<sp/>process,<sp/>it<sp/>kills<sp/>the<sp/>process.</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1_mock___subtensor_1a19f03eaa88ffc0ea7b00a2795ba9213d" kindref="member">_owned_mock_subtensor_process</ref><sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1_mock___subtensor_1a19f03eaa88ffc0ea7b00a2795ba9213d" kindref="member">_owned_mock_subtensor_process</ref>.terminate()</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1_mock___subtensor_1a19f03eaa88ffc0ea7b00a2795ba9213d" kindref="member">_owned_mock_subtensor_process</ref>.kill()</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.system(</highlight><highlight class="stringliteral">&quot;kill<sp/>%i&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.<ref refid="classbittensor_1_1__subtensor_1_1subtensor__mock_1_1_mock___subtensor_1a19f03eaa88ffc0ea7b00a2795ba9213d" kindref="member">_owned_mock_subtensor_process</ref>.pid)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time.sleep(2)<sp/></highlight><highlight class="comment">#<sp/>Buffer<sp/>to<sp/>ensure<sp/>the<sp/>processes<sp/>actually<sp/>die</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>kill<sp/>owned<sp/>mock<sp/>instance:<sp/>{e}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Occasionally<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/macthrasher/bittensor/bittensor/_subtensor/subtensor_mock.py"/>
  </compounddef>
</doxygen>
